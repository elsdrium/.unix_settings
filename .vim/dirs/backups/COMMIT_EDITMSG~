
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch master
# Changes to be committed:
#	modified:   .gitignore
#	deleted:    .vim/dirs/backups/.bash_profile~
#	deleted:    .vim/dirs/backups/.gitignore~
#	deleted:    .vim/dirs/backups/.vimrc~
#	deleted:    .vim/dirs/backups/COMMIT_EDITMSG~
#	deleted:    .vim/dirs/backups/ConferenceProgram.html~
#	deleted:    .vim/dirs/backups/MERGE_MSG~
#	deleted:    .vim/dirs/backups/README.rst~
#	deleted:    .vim/dirs/backups/_commands.py~
#	deleted:    .vim/dirs/backups/article.tplx~
#	deleted:    .vim/dirs/backups/commands.py~
#	deleted:    .vim/dirs/backups/config~
#	deleted:    .vim/dirs/backups/debugger.py~
#	deleted:    .vim/dirs/backups/debugger.vim~
#	deleted:    .vim/dirs/backups/ipython_notebook_config.py~
#	deleted:    .vim/dirs/backups/main.m~
#	deleted:    .vim/dirs/backups/new_debugger.py~
#	deleted:    .vim/dirs/backups/py.py~
#	deleted:    .vim/dirs/backups/spams.py~
#	deleted:    .vim/dirs/backups/spyder.ini~
#	deleted:    .vim/dirs/backups/subwindows.py~
#	deleted:    .vim/dirs/backups/test.cpp~
#	deleted:    .vim/dirs/backups/ui.py~
#	deleted:    ".vim/dirs/tmp/test.cpp (\350\210\207 MAClab-iMac \350\241\235\347\252\201\347\232\204\350\244\207\346\234\254 2014-11-23).swp"
#	deleted:    .vim/dirs/undos/%Users%elsdrm%.bashrc
#	deleted:    .vim/dirs/undos/%Users%elsdrm%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme
#	deleted:    .vim/dirs/undos/%Users%elsdrm%.spyder2-py3%spyder.ini
#	deleted:    .vim/dirs/undos/%Users%elsdrm%.ssh%known_hosts
#	deleted:    .vim/dirs/undos/%Users%elsdrm%.zsh_profile
#	deleted:    .vim/dirs/undos/%Users%elsdrm%.zshrc
#	deleted:    .vim/dirs/undos/%Users%elsdrm%.zshrc.old
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Downloads%ConferenceProgram.html
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Downloads%output.txt
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Downloads%spams-python%build%lib.macosx-10.10-intel-2.7%spams.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.bash_profile
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.gitignore
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_default%ipython_notebook_config.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_nbserver%ipython_notebook_config.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%Conque-Shell%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%README.rst
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%debugger.vim
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%_commands.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%commands.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%debugger.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%new_debugger.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%subwindows.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%ui.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vimrc
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.zshrc
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%demo_callgraph_png.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%example.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood%demo_snakefood.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%config
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%week_report%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipythonnotebook%.git%COMMIT_EDITMSG
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_includeC++.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_loadPyx.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_py2so_includeC++.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%iostream.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%vector.pyx
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%wahaaa.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_laplace.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_laplace.sh
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_scipy.weave.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%laplace.cxx
#	deleted:    .vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%test.m
#	deleted:    .vim/dirs/undos/%Users%elsdrm%main.m
#	deleted:    .vim/dirs/undos/%Users%elsdrm%py.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%sandbox%py.py
#	deleted:    .vim/dirs/undos/%Users%elsdrm%test.cpp
#	deleted:    .vim/dirs/undos/%home%elsdrm%LASSO_screening%.gitignore
#	deleted:    .vim/dirs/undos/%private%etc%shells
#	deleted:    .vim/dirs/undos/%private%tmp%zshecl2719
#	deleted:    .vim/dirs/undos/%private%tmp%zshecl668
#	deleted:    .vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.KSFxxI
#	deleted:    .vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.UBER8s
#	deleted:    .vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.o9QeFK
#	deleted:    .vim/dirs/undos/%usr%local%lib%python2.7%site-packages%pymatbridge%pymatbridge.py
#	deleted:    .vim/dirs/undos/%usr%local%lib%python3.4%site-packages%IPython%nbconvert%templates%latex%article.tplx
#	deleted:    .vim/dirs/viminfo
#	deleted:    .vim/dirs/yankring_history_v2.txt
#
# Changes not staged for commit:
#	modified:   .vim/bundle/YankRing.vim (untracked content)
#	modified:   .vim/bundle/matchit.zip (untracked content)
#	modified:   .vim/bundle/vim-choosewin (untracked content)
#
# ------------------------ >8 ------------------------
# Do not touch the line above.
# Everything below will be removed.
diff --git a/.gitignore b/.gitignore
index 78ff8bb..94a6441 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1 @@
-./.vim/dirs
+.vim/dirs
diff --git a/.vim/dirs/backups/.bash_profile~ b/.vim/dirs/backups/.bash_profile~
deleted file mode 100644
index 209c406..0000000
--- a/.vim/dirs/backups/.bash_profile~
+++ /dev/null
@@ -1,22 +0,0 @@
-
-export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Matlab_R2014b.app/bin:/usr/texbin"
-
-# Setting ls color
-export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx 
-
-#alias clang++='clang++ -I/usr/local/Cellar/gcc/4.9.2/lib/gcc/x86_64-apple-darwin14.0.0/4.9.2/include/c++ -I/usr/local/Cellar/gcc/4.9.2/lib/gcc/x86_64-apple-darwin14.0.0/4.9.2/include/c++/x86_64-apple-darwin14.0.0 -I/usr/local/Cellar/gcc/4.9.2/lib/gcc/x86_64-apple-darwin14.0.0/4.9.2/include/c++/backward -I/usr/local/Cellar/gcc/4.9.2/lib/gcc/x86_64-apple-darwin14.0.0/4.9.2/include -I/usr/local/Cellar/gcc/4.9.2/lib/gcc/x86_64-apple-darwin14.0.0/4.9.2/include-fixed -I/usr/local/include -I/usr/include --std=c++11 --stdlib=libc++ -lc++ -lstdc++ -L/usr/local/Cellar/gcc/4.9.2/lib/gcc/x86_64-apple-darwin14.0.0/4.9.2/ -L/usr/local/Cellar/gcc/4.9.2/lib/gcc/x86_64-apple-darwin14.0.0/4.9.2/../../../ -L/usr/lib/'
-
-
-
-# Setting some aliases
-alias ..='cd ..'
-alias ....='cd ../..'
-alias ls='ls -pG'
-alias ll='ls -plGA'
-alias la='ls -pGA'
-alias reload='source ~/.bash_profile && source ~/.bashrc'
-alias reloadvim='vim +PluginClean +PluginInstall +PluginUpdate +qall'
-alias resync='rsync -r ~/Dropbox/.unix_settings elsdrm@140.109.21.234:~/.unix_settings && rsync -r ~/Dropbox/.unix_settings elsdrm@140.109.21.193:~/.uni    x_settings'
-function pdf() { mupdf-x11 "$1" & }
-
-source ~/.bashrc
diff --git a/.vim/dirs/backups/.gitignore~ b/.vim/dirs/backups/.gitignore~
deleted file mode 100644
index e69de29..0000000
diff --git a/.vim/dirs/backups/.vimrc~ b/.vim/dirs/backups/.vimrc~
deleted file mode 100644
index 08d485f..0000000
--- a/.vim/dirs/backups/.vimrc~
+++ /dev/null
@@ -1,282 +0,0 @@
-set nocompatible              " be iMproved, required
-filetype off                  " required
-
-" set the runtime path to include Vundle and initialize
-set rtp+=~/.vim/bundle/Vundle.vim
-call vundle#begin()        " required
-
-Plugin 'gmarik/Vundle.vim' " required
-
-"Plugin 'ervandew/supertab'
-Plugin 'tpope/vim-repeat'
-Plugin 'Lokaltog/vim-easymotion'
-"Plugin 'Lokaltog/powerline'
-Plugin 'scrooloose/nerdtree'
-Plugin 'scrooloose/nerdcommenter'
-Plugin 'scrooloose/syntastic'
-Plugin 'bling/vim-airline'
-Plugin 'bling/vim-bufferline'
-Plugin 'majutsushi/tagbar'
-Plugin 'MarcWeber/vim-addon-mw-utils'
-Plugin 'tomtom/tlib_vim'
-Plugin 'honza/vim-snippets'
-Plugin 'garbas/vim-snipmate'
-Plugin 'kien/tabman.vim'
-Plugin 'edkolev/tmuxline.vim'
-Plugin 'kien/ctrlp.vim'
-Plugin 'fisadev/vim-ctrlp-cmdpalette'
-Plugin 'tpope/vim-surround'
-Plugin 'Townk/vim-autoclose'
-Plugin 'Shougo/neocomplcache.vim'
-Plugin 't9md/vim-choosewin'
-Plugin 'elsdrm/Conque-Shell'
-Plugin 'fholgado/minibufexpl.vim'
-
-" Javascript
-"Plugin 'pangloss/vim-javascript'
-
-" Latex
-"Plugin 'LaTeX-Box-Team/LaTeX-Box'
-
-" Python
-Plugin 'klen/python-mode'
-
-" SVN
-Plugin 'mhinz/vim-signify'
-"Plugin 'motemen/git-vim'
-Plugin 'tpope/vim-fugitive'
-
-" vim-scripts
-Plugin 'IndexedSearch'
-Plugin 'matchit.zip'
-Plugin 'YankRing.vim'
-
-call vundle#end()            " required
-filetype plugin indent on    " required
-"
-" Brief help
-" :PluginList       - lists configured plugins
-" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
-" :PluginSearch foo - searches for foo; append `!` to refresh local cache
-" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
-"
-" see :h vundle for more details or wiki for FAQ
-" Put your non-Plugin stuff after this line
-
-" plugins' settings
-""" EasyMotion
-let g:EasyMotion_leader_key = '\'
-nmap <Leader>v <Plug>(easymotion-bd-w)
-
-""" Airline
-let g:airline#extensions#tabline#enabled = 1
-let g:airline#extensions#tabline#left_sep = ' '
-let g:airline#extensions#tabline#left_alt_sep = '|'
-let g:airline_powerline_fonts = 0
-let g:airline_theme = 'bubblegum'
-let g:airline#extensions#whitespace#enabled = 0
-let g:airline#extensions#branch#enabled = 1
-let g:airline#extensions#branch#empty_message = ''
-let g:airline#extensions#tabline#show_buffers = 0
-
-""" Neocomplcache
-" most of them not documented because I'm not sure how they work
-" (docs aren't good, had to do a lot of trial and error to make 
-" it play nice)
-inoremap <expr><TAB>  pumvisible() ? "\<CR>" : "\<TAB>"
-let g:neocomplcache_enable_at_startup = 1
-let g:neocomplcache_enable_ignore_case = 1
-let g:neocomplcache_enable_smart_case = 1
-let g:neocomplcache_enable_auto_select = 1
-let g:neocomplcache_enable_fuzzy_completion = 0
-let g:neocomplcache_enable_camel_case_completion = 1
-let g:neocomplcache_enable_underbar_completion = 1
-let g:neocomplcache_fuzzy_completion_start_length = 1
-let g:neocomplcache_auto_completion_start_length = 1
-let g:neocomplcache_auto_completion_start_length = 1
-let g:neocomplcache_manual_completion_start_length = 1
-let g:neocomplcache_min_keyword_length = 1
-let g:neocomplcache_min_syntax_length = 1
-" complete with workds from any opened file
-let g:neocomplcache_same_filetype_lists = {}
-let g:neocomplcache_same_filetype_lists._ = '_'
-
-""" choosewin
-nmap  -  <Plug>(choosewin)
-" show big letters
-let g:choosewin_overlay_enable = 1
-
-""" Autoclose
-" Fix to let ESC work as espected with Autoclose plugin
-let g:AutoClosePumvisible = {"ENTER": "\<C-Y>", "ESC": "\<ESC>"}
-
-""" Tabman
-" mappings to toggle display, and to focus on it
-let g:tabman_toggle = 'tl'
-let g:tabman_focus  = 'tf'
-
-""" Tagbar
-" toggle tagbar display
-map <F4> :TagbarToggle<CR>
-" autofocus on tagbar open
-let g:tagbar_autofocus = 1
-let tagbar_map_closefold = ['zc']
-let tagbar_map_openfold = ['zo']
-
-""" Nerdtree
-" toggle nerdtree display
-map <F3> :NERDTreeToggle<CR>
-" open nerdtree with the current file selected
-nmap ,t :NERDTreeFind<CR>
-" don;t show these file types
-let NERDTreeIgnore = ['\.pyc$', '\.pyo$']
-
-""" Signify
-" this first setting decides in which order try to guess your current vcs
-" UPDATE it to reflect your preferences, it will speed up opening files
-let g:signify_vcs_list = [ 'git', 'hg' ]
-" mappings to jump to changed blocks
-nmap <leader>sn <plug>(signify-next-hunk)
-nmap <leader>sp <plug>(signify-prev-hunk)
-" nicer colors
-highlight DiffAdd           cterm=bold ctermbg=none ctermfg=119
-highlight DiffDelete        cterm=bold ctermbg=none ctermfg=167
-highlight DiffChange        cterm=bold ctermbg=none ctermfg=227
-highlight SignifySignAdd    cterm=bold ctermbg=237  ctermfg=119
-highlight SignifySignDelete cterm=bold ctermbg=237  ctermfg=167
-highlight SignifySignChange cterm=bold ctermbg=237  ctermfg=227
-
-""" CtrlP
-" file finder mapping
-let g:ctrlp_map = ',e'
-" tags (symbols) in current file finder mapping
-nmap ,g :CtrlPBufTag<CR>
-" tags (symbols) in all files finder mapping
-nmap ,G :CtrlPBufTagAll<CR>
-" general code finder in all files mapping
-nmap ,f :CtrlPLine<CR>
-" recent files finder mapping
-nmap ,m :CtrlPMRUFiles<CR>
-" commands finder mapping
-nmap ,c :CtrlPCmdPalette<CR>
-" to be able to call CtrlP with default search text
-function! CtrlPWithSearchText(search_text, ctrlp_command_end)
-    execute ':CtrlP' . a:ctrlp_command_end
-    call feedkeys(a:search_text)
-endfunction
-" same as previous mappings, but calling with current word as default
-" text
-nmap ,wg :call CtrlPWithSearchText(expand('<cword>'), 'BufTag')<CR>
-nmap ,wG :call CtrlPWithSearchText(expand('<cword>'), 'BufTagAll')<CR>
-nmap ,wf :call CtrlPWithSearchText(expand('<cword>'), 'Line')<CR>
-nmap ,we :call CtrlPWithSearchText(expand('<cword>'), '')<CR>
-nmap ,pe :call CtrlPWithSearchText(expand('<cfile>'), '')<CR>
-nmap ,wm :call CtrlPWithSearchText(expand('<cword>'), 'MRUFiles')<CR>
-nmap ,wc :call CtrlPWithSearchText(expand('<cword>'), 'CmdPalette')<CR>
-" don't change working directory
-let g:ctrlp_working_path_mode = 0
-" ignore these files and folders on file finder
-let g:ctrlp_custom_ignore = {
-            \ 'dir':  '\v[\/](\.git|\.hg|\.svn)$',
-            \ 'file': '\.pyc$\|\.pyo$',
-            \ }
-
-""" Syntastic
-" show list of errors and warnings on the current file
-nmap <leader>e :Errors<CR>
-" check also when just opened the file
-let g:syntastic_check_on_open = 1
-" don't put icons on the sign column (it hides the vcs status icons of signify)
-let g:syntastic_enable_signs = 1
-" custom icons (enable them if you use a patched font, and enable the previous setting)
-let g:syntastic_error_symbol = '✗'
-let g:syntastic_warning_symbol = '⚠'
-let g:syntastic_style_error_symbol = '✗'
-let g:syntastic_style_warning_symbol = '⚠'
-
-let g:syntastic_cpp_compiler = 'clang++'
-let g:syntastic_cpp_compiler_options = ' --std=c++11 --stdlib=libc++ '
-
-""" Python-mode
-" don't use linter, we use syntastic for that
-let g:pymode = 1
-let g:pymode_lint_on_write = 0
-let g:pymode_lint_signs = 0
-" don't fold python code on open
-let g:pymode_folding = 0
-" don't load rope by default. Change to 1 to use rope
-let g:pymode_rope = 0
-" open definitions on same window, and custom mappings for definitions and
-" occurrences
-let g:pymode_rope_goto_definition_bind = ',d'
-let g:pymode_rope_goto_definition_cmd = 'e'
-nmap ,D :tab split<CR>:PymodePython rope.goto()<CR>
-nmap ,o :RopeFindOccurrences<CR>
-
-""" MiniBufExpl
-nnoremap ,l :MBEToggleAll<CR>:MBEFocus<CR>
-let g:miniBufExplorerAutoStart = 0
-
-" End of plugins' settings --------------------------
-
-" tabs and spaces
-set smartindent
-set tabstop=4
-set shiftwidth=4
-set expandtab
-
-" tab length exceptions on some file types
-autocmd FileType html setlocal shiftwidth=2 tabstop=2 softtabstop=2
-autocmd FileType htmldjango setlocal shiftwidth=2 tabstop=2 softtabstop=2
-autocmd FileType javascript setlocal shiftwidth=2 tabstop=2 softtabstop=2
-
-" always show status bar
-set ls=2
-
-" when scrolling, keep cursor 3 lines away from screen border
-set scrolloff=3
-
-" autocompletion of files and commands behaves like shell
-" (complete only the common part, list the options that match)
-set wildmode=list:longest
-
-" better backup, swap and undos storage
-set directory=~/.vim/dirs/tmp     " directory to place swap files in
-set backup                        " make backup files
-set backupdir=~/.vim/dirs/backups " where to put backup files
-set undofile                      " persistent undos - undo after you re-open the file
-set undodir=~/.vim/dirs/undos
-set viminfo+=n~/.vim/dirs/viminfo
-" store yankring history file there too
-let g:yankring_history_dir = '~/.vim/dirs/'
-
-" create needed directories if they don't exist
-if !isdirectory(&backupdir)
-    call mkdir(&backupdir, "p")
-endif
-if !isdirectory(&directory)
-    call mkdir(&directory, "p")
-endif
-if !isdirectory(&undodir)
-    call mkdir(&undodir, "p")
-endif
-
-" incremental search
-set incsearch
-" highlighted search results
-set hlsearch
-
-" general settings
-syntax on
-colo elflord
-set nu
-
-" personal key mappings
-nmap <CR><CR> o<Esc>
-nmap ;l  :res +10<CR>
-nmap ;s  :res -10<CR>
-nmap ;vl :vertical res +10<CR>
-nmap ;vs :vertical res -10 <CR>
-noremap ,, <Esc>:bnext<CR>
-noremap ,. <Esc>:bprevious<CR>
-inoremap ;; <Esc>
diff --git a/.vim/dirs/backups/COMMIT_EDITMSG~ b/.vim/dirs/backups/COMMIT_EDITMSG~
deleted file mode 100644
index 09b4100..0000000
--- a/.vim/dirs/backups/COMMIT_EDITMSG~
+++ /dev/null
@@ -1,127 +0,0 @@
-
-# Please enter the commit message for your changes. Lines starting
-# with '#' will be ignored, and an empty message aborts the commit.
-# On branch master
-# Your branch is up-to-date with 'origin/master'.
-#
-# Changes to be committed:
-#	new file:   .ipynb_checkpoints/Week_Report_2014-12-14-checkpoint.ipynb
-#	new file:   Week_Report_2014-12-14.ipynb
-#
-# ------------------------ >8 ------------------------
-# Do not touch the line above.
-# Everything below will be removed.
-diff --git a/.ipynb_checkpoints/Week_Report_2014-12-14-checkpoint.ipynb b/.ipynb_checkpoints/Week_Report_2014-12-14-checkpoint.ipynb
-new file mode 100644
-index 0000000..18014b5
---- /dev/null
-+++ b/.ipynb_checkpoints/Week_Report_2014-12-14-checkpoint.ipynb
-@@ -0,0 +1,50 @@
-+{
-+ "metadata": {
-+  "name": "",
-+  "signature": "sha256:c63d6a48dd2472469491e4c654b51b89c6f29687914eee769a8e713504dd19b1"
-+ },
-+ "nbformat": 3,
-+ "nbformat_minor": 0,
-+ "worksheets": [
-+  {
-+   "cells": [
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "##Brief Summary\n",
-+      "1. Train dictionary for iKala dataset. (Large dimension dictionaries' are under computing.)\n",
-+      "2. Do sepration on iKala dataset.\n",
-+      " * iKala dataset lacks some pitch annotation."
-+     ]
-+    },
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "##TODO\n",
-+      "1. Debug.\n",
-+      "2. Finish the entire pipeflow."
-+     ]
-+    },
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "##Additional\n",
-+      "1. ConvNetJS - Deep Learning in your browser\n",
-+      " * http://cs.stanford.edu/people/karpathy/convnetjs/"
-+     ]
-+    },
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "<br />"
-+     ]
-+    }
-+   ],
-+   "metadata": {}
-+  }
-+ ]
-+}
-\ No newline at end of file
-diff --git a/Week_Report_2014-12-14.ipynb b/Week_Report_2014-12-14.ipynb
-new file mode 100644
-index 0000000..18014b5
---- /dev/null
-+++ b/Week_Report_2014-12-14.ipynb
-@@ -0,0 +1,50 @@
-+{
-+ "metadata": {
-+  "name": "",
-+  "signature": "sha256:c63d6a48dd2472469491e4c654b51b89c6f29687914eee769a8e713504dd19b1"
-+ },
-+ "nbformat": 3,
-+ "nbformat_minor": 0,
-+ "worksheets": [
-+  {
-+   "cells": [
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "##Brief Summary\n",
-+      "1. Train dictionary for iKala dataset. (Large dimension dictionaries' are under computing.)\n",
-+      "2. Do sepration on iKala dataset.\n",
-+      " * iKala dataset lacks some pitch annotation."
-+     ]
-+    },
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "##TODO\n",
-+      "1. Debug.\n",
-+      "2. Finish the entire pipeflow."
-+     ]
-+    },
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "##Additional\n",
-+      "1. ConvNetJS - Deep Learning in your browser\n",
-+      " * http://cs.stanford.edu/people/karpathy/convnetjs/"
-+     ]
-+    },
-+    {
-+     "cell_type": "markdown",
-+     "metadata": {},
-+     "source": [
-+      "<br />"
-+     ]
-+    }
-+   ],
-+   "metadata": {}
-+  }
-+ ]
-+}
-\ No newline at end of file
diff --git a/.vim/dirs/backups/ConferenceProgram.html~ b/.vim/dirs/backups/ConferenceProgram.html~
deleted file mode 100644
index 0114f29..0000000
--- a/.vim/dirs/backups/ConferenceProgram.html~
+++ /dev/null
@@ -1,834 +0,0 @@
-<meta name="robots" content="noindex">
-<html xmlns="http://www.w3.org/1999/xhtml"><head>
-<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-<meta name="keywords" content="ISMIR,Taipei,Taiwan">
-<title>2014 ISMIR / Taipei . Taiwan</title>
-<style type="text/css">
-
-body {
-	margin-left: 0px;
-	margin-top: 0px;
-	margin-right: 0px;
-	margin-bottom: 0px;
-	background-image: url(images/pic-bk.gif);
-}td img {display: block;}
-</style>
-<link href="header.css" rel="stylesheet" type="text/css">
-<link href="main.css" rel="stylesheet" type="text/css">
-<link href="footer.css" rel="stylesheet" type="text/css">
-<script type="text/javascript" src="stmenu.js"></script>
-<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
-</head>
-
-<body>
-<div id="header">
-  <table width="940" border="0" align="center" cellpadding="0" cellspacing="0">
-    <tbody><tr>
-      <td><img src="images/ind_r1_c1.gif" width="940" height="32"></td>
-    </tr>
-    <tr>
-      <td><img src="images/ind_r2_c1.jpg" width="940" height="178"></td>
-    </tr>
-  </tbody></table>
-</div>
-<div id="main">
-  <table width="940" border="0" align="center" cellpadding="0" cellspacing="0" class="back">
-    <tbody><tr>
-      <td align="center" valign="middle"><br>
-        <table width="790" border="0" cellpadding="0" cellspacing="0" class="txt_a">
-          <tbody><tr>
-            <td><script type="text/javascript" src="link.js"></script></td>
-          </tr>
-          <tr>
-            <td height="40" valign="bottom" class="title_link"><a href="index.html">Home ›</a> Event<a href="index.html"> ›</a> Conference Program</td>
-          </tr>
-          <tr>
-            <td class="title_a">Conference Program</td>
-          </tr>
-          <tr>
-            <td valign="top"><table width="100%" border="0" cellpadding="5" cellspacing="1" bgcolor="#999999" class="txt_c1" style="3D'bor=" der-collapse:="der-collapse:" collapse;table-layout:fixed;width:967pt="collapse;table-layout:fixed;width:967pt" '="">
-              <colgroup><col width="3D163" style="3D'mso-width-source:userset;mso-width-alt:5961;widt=" h:122pt="h:122pt">
-              <col width="3D270" span="3D3" style="3D'mso-width-source:userset;mso-width-alt:=" 9874;="" width:203pt="width:203pt">
-              <col width="3D315" style="3D'mso-width-source:userset;mso-width-alt:11520;wid=" th:236pt="th:236pt">
-              </colgroup><tbody><tr class="color-w" style="3D'height:12.75pt'" height="3D17">
-                <td height="3" valign="top" bgcolor="#0C3376" class="3Dxl6323795" style="3D'height:12.75pt;wid=" th:122pt="th:122pt" '=""><span class="color-R">Day
-                  1 </span><br>
-                  <strong>(Monday, 27th)</strong></td>
-                <td width="21%" valign="top" bgcolor="#0C3376" class="3Dxl6323795" style="3D'width:203pt'"><span class="color-R">Day 2 </span><br>
-                  <strong>(Tuesday, 28th)</strong><br></td>
-                <td width="21%" valign="top" bgcolor="#0C3376" class="3Dxl6323795" style="3D'width:203pt'"><span class="color-R">Day 3</span><br>
-                  <strong>(Wednesday, 29th)</strong></td>
-                <td width="23%" valign="top" bgcolor="#0C3376" class="3Dxl6323795" style="3D'width:203pt'"><span class="color-R">Day 4</span><br>
-                  <strong>(Thursday, 
-                  30th)</strong></td>
-                <td width="21%" valign="top" bgcolor="#0C3376" class="3Dxl6323795" style="3D'width:236pt'"><span class="color-R">Day 5 </span><br>
-                  <strong>(Friday, 31st)</strong></td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td height="3" valign="top" bgcolor="#FFFFFF" class="3Dxl1523795" style="3D'height:12.75pt'"></td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl6623795">8:40-9:00 <br><strong>Opening</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#CCCC66" class="3Dxl1523795">8:00-9:00 <br><strong>Women in MIR meeting</strong><br> Song Bo Room</td>
-                <td width="23%" valign="top" bgcolor="#FFFFFF" class="3Dxl1523795"></td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl1523795"></td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td rowspan="2" valign="top" bgcolor="#FFB3D9" style="3D'height:12.75pt'">10:00-13:00<br>
-                  <strong>Tutorials 1/2</strong>
-                  <br> Chang Chin Room / Song Bo Room  </td>
-                <td width="21%" height="3" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">9:00-10:20<br>
-                  <strong>Oral Session (OS1)</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">9:00-10:20<br>
-                  <strong>Oral Session (OS4)</strong><br> Auditorium</td>
-                <td width="23%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">9:00-10:20<br>
-                  <strong>Oral Session (OS7)</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#CCCCCC" class="3Dxl6923795">9:00-9:40<br>
-                  <strong>MIREX session (oral)</strong><br> Auditorium</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td width="21%" height="3" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">10:20-12:00<br>
-                  <strong>Poster Session (PS1)</strong><br>Song Bo Room</td>
-                <td width="21%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">10:20-12:00<br>
-                  <strong>Poster Session (PS2)</strong><br> Song Bo Room</td>
-                <td width="23%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">10:20-12:00<br>
-                  <strong>Poster Session (PS3)</strong><br> Song Bo Room</td>
-                <td width="21%" valign="top" bgcolor="#CCCCCC" class="3Dxl6923795">9:40-10:20<br>
-                  <strong>MIREX session (grand challenge)</strong><br> Auditorium</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td height="3" valign="top" bgcolor="#FFFFFF" style="3D'height:12.75pt'">13:00-14:30<br>Lunch<br>Yuan-Yuan</td>
-                <td width="21%" bgcolor="#FFFFFF" class="3Dxl6623795">12:00-13:30<br>
-                  Lunch<br>Grand Garden Restaurant</td>
-                <td width="21%" bgcolor="#FFFFFF" class="3Dxl6623795">12:00-13:30<br>
-                  Lunch<br>Golden Dragon Restaurant</td>
-                <td width="23%" bgcolor="#FFFFFF" class="3Dxl6623795">12:00-13:30<br>
-                  Lunch<br>Yuan Shan Club of Taipei</td>
-                <td width="21%" valign="top" bgcolor="#CCCCCC" class="3Dxl6923795">10:20-11:40<br>
-                  <strong>MIREX session (poster)</strong><br> Song Bo Room</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td rowspan="4" valign="top" bgcolor="#FFB3D9" style="3D'height:12.75pt'">14:30-17:30 <br>
-                  <strong>Tutorials 3/4</strong>
-                  <br> Chang Chin Room / Song Bo Room  </td>
-                <td width="21%" height="3" valign="top" bgcolor="#FFB3D9" class="3Dxl7023795">13:30-14:30 <br>
-                  <strong>Keynote Speech 1</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#FFB3D9" class="3Dxl7023795">13:30-14:30<br>
-                  <strong>Keynote Speech 2</strong><br> Auditorium</td>
-                <td width="23%" valign="top" bgcolor="#9DBDFF" class="3Dxl7123795">13:30-14:30<br>
-                  <strong>Industrial Panel</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#9DBDFF" class="3Dxl7123795">11:40-12:40<br>
-                  <strong>Business Meeting</strong><br> Auditorium</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td width="21%" height="3" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">14:30-15:30<br>
-                  <strong>Oral Session (OS2)</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">14:30-15:30<br>
-                  <strong>Oral Session (OS5)</strong><br> Auditorium</td>
-                <td width="23%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">14:30-15:30<br>
-                  <strong>Oral Session (OS8)</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl6623795">12:40-13:00<br>
-                  <strong>Closing</strong><br> Auditorium</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td width="21%" height="3" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">15:30-16:30<br>
-                  <strong>Poster Session (PS1)</strong><br> Song Bo Room</td>
-                <td width="21%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">15:30-16:30<br>
-                  <strong>Poster Session (PS2)</strong><br> Song Bo Room</td>
-                <td width="23%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">15:30-16:30<br>
-                  <strong>Poster Session (PS3)</strong><br> Song Bo Room</td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl6623795">13:00-14:00<br>
-                  Lunch<br>on your own</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td width="21%" height="3" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">16:30-18:10<br>
-                  <strong>Oral Session (OS3)</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">16:30-17:10<br>
-                  <strong>Oral Session (OS6)</strong><br> Auditorium</td>
-                <td width="23%" valign="top" bgcolor="#FFCC99" class="3Dxl6823795">16:30-17:50<br>
-                  <strong>Oral Session (OS9)</strong><br> Auditorium</td>
-                <td width="21%" valign="top" bgcolor="#9DBDFF" class="3Dxl7123795">14:00-15:30<br>
-                  <strong>Late-Breaking / <br>
-                  Demo Session</strong><br> 
-                  Song Bo Room, Chang Chin Room</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td height="3" valign="top" bgcolor="#FFFFFF" class="3Dxl7223795" style="3D'height:12.75pt'"></td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl1523795"></td>
-                <td width="21%" valign="top" bgcolor="#CCCC66" class="3Dxl7223795">17:10-18:00<br>
-                	<strong>Mixer</strong><br> Song Bo Room</td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl1523795"></td>
-                <td width="21%" valign="top" bgcolor="#9DBDFF" class="3Dxl7123795">15:30-18:00<br>
-                  <strong>Unconfernece</strong><br> Auditorium, Chang Chin Room, Song Bo Room, the Grand VIP Room</td>
-              </tr>
-              <tr height="3D17" style="3D'height:12.75pt'">
-                <td height="3" valign="top" bgcolor="#CCCC66" class="3Dxl7223795" style="3D'height:12.75pt'">18:00-20:00<br>
-                  <strong>Reception</strong><br> Song Ying Room (1F)</td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl1523795"></td>
-                <td width="21%" valign="top" bgcolor="#CCCC66" class="3Dxl7223795">19:00-22:00<br>
-                  <strong>Concert</strong><br> Auditorium</td>
-                <td width="23%" valign="top" bgcolor="#CCCC66" class="3Dxl7223795">18:30-21:00<br>
-                  <strong>Banquet</strong><br> Kunlun Hall (12F)</td>
-                <td width="21%" valign="top" bgcolor="#FFFFFF" class="3Dxl1523795"></td>
-              </tr>
-              <!--[if supportMisalignedColumns]-->
-              <tr height="3D0" style="3D'display:none'">
-                <td style="3D'width:122pt'"></td>
-                <td width="21%" style="3D'width:203pt'"></td>
-                <td width="21%" style="3D'width:203pt'"></td>
-                <td width="23%" style="3D'width:203pt'"></td>
-                <td width="21%" style="3D'width:236pt'"></td>
-              </tr>
-              <!--[endif]-->
-            </tbody></table>
-              <br>
-              <br>
-<hr size="1" noshade="noshade">
-              <br>
-              <table width="790" border="0" cellpadding="0" cellspacing="0" class="txt_a">
-
-                <tbody><tr>
-                  <td><p>│　<a href="#a1">October 27, 2014</a>　│　<a href="#a2">October 28, 2014</a>　│　<a href="#a3">October 29, 2014</a>　│　<a href="#a4">October 30, 2014</a>　│　<a href="#a5">October 31, 2014</a>　│<br>
-                  </p>
-                  <span class="title_b"><a name="a1" id="a1"></a><br>
-                      Monday October 27, 2014</span><br>
-                    <table width="100%" border="0" cellpadding="5" cellspacing="1" bgcolor="#CCCCCC">
-                      <tbody><tr></tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">10:00 AM - 01:00 PM <strong>Tutorials 1 &amp; 2</strong> [Chang Chin Room / Song Bo Room]</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-                        <p>Tutorial 1: "Why is Greek music interesting? Towards an ethics of MIR" by Andre Holzapfel and George Tzanetakis </p>
-                        <p>Tutorial 2:"Musical structure analysis" by Meinard Mueller and Jordan Smith </p>
-                        </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">01:00 AM - 02:30 PM <strong>Lunch</strong> [Yuan Yuan Restaurant]</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-                        <p>Only for people who register for both the morining and afternoon tutorials </p></td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">02:30 AM - 05:30 PM <strong>Tutorial 3 &amp; 4</strong> [Chang Chin Room / Song Bo Room]</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-                        <p>Tutorial 3: "Jingju music: concepts and computational tools for its analysis" by Rafael Caro Repetto, Ajay Srinivasamurthy, Sankalp Gulati and Xavier Serra</p>
-                        <p>Tutorial 4: "MiningSuite, a comprehensive framework for music analysis, articulating audio (MIRtoolbox 2.0) and symbolic approaches" by Olivier Lartillot </p>
-                        </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">06:00 PM - 08:00 PM <b> Reception</b> [Song Ying Room (1F)] </td>
-                      </tr>
-                    </tbody></table>
-                    <span class="title_b"><br>
-                      <a name="a2" id="a2"></a><br>
-                      Tuesday October 28, 2014<br>
-                    </span>
-                    <table width="100%" border="0" cellpadding="5" cellspacing="1" bgcolor="#CCCCCC">
-                      <tbody><tr>
-                        <td bgcolor="#DCDCB8">08:40 AM - 09:00 AM<strong> Opening [<a target="_blank" href="http://www.camdemy.com/media/16429">Video</a>]</strong> [Auditorium] </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">09:00 AM - 10:20 AM<strong> Oral Session 1: Classification (OS1) </strong> [Auditorium] Chair: George Tzanetakis<br></td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-													<p>(OS1-1) <strong><a href="proceedings/T002_113_Paper.pdf" target="_blank">On Cultural, Textual and Experiential Aspects of Music Mood</a> [<a target="_blank" href="http://www.camdemy.com/media/16431">Video</a>]</strong> <br>
-                          <em>Abhishek Singhi and Daniel Brown</em><br>
-                          University of Waterloo
-                          </p><p>(OS1-2) <strong><a href="proceedings/T003_213_Paper.pdf" target="_blank">Sparse Cepstral and Phase Codes for Guitar Playing Technique Classification</a> [<a target="_blank" href="http://www.camdemy.com/media/16432">Video</a>]</strong> <br>
-                            <em>Li Su, Li Fan Yu,  Yi-Hsuan Yang</em><br>
-                            Research Center for Information Technology Innovation, Academia Sinica</p>
-                          <p>(OS1-3) <strong><a href="proceedings/T004_203_Paper.pdf" target="_blank">Automated Detection of Single- and Multi-Note Ornaments in Irish Traditional Flute Playing</a> [<a target="_blank" href="http://www.camdemy.com/media/16433">Video</a>]</strong> <br>
-                            <em>Munevver Kokuer<sup>1</sup>,  Peter Jancovic<sup>2</sup>,  Islah Ali-MacLachlan<sup>1</sup>,  Cham Athwal<sup>1</sup></em><br>
-                            <sup>1</sup>Birmingham City University, <sup>2</sup>University of Birmingham </p>
-                          (OS1-4) <strong><a href="proceedings/T005_176_Paper.pdf" target="_blank">The Kiki-Bouba Challenge: Algorithmic Composition for Content-based MIR Research &amp; Development</a> [<a target="_blank" href="http://www.camdemy.com/media/16434">Video</a>]</strong> <br>
-                          <em>Bob Sturm<sup>1</sup> and Nick Collins<sup>2</sup></em><br>
-                          <sup>1</sup>Aalborg University Copenhagen, <sup>2</sup>Durham University </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">10:20 AM - 12:00 PM &amp; 03:30 PM - 04:30 PM <strong>Poster Session 1 (PS1) </strong> [Song Bo Room] Chair: Zhiyao Duan</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-                          (PS1-1) <strong><a href="proceedings/T007_118_Paper.pdf" target="_blank">Transfer Learning by Supervised Pre-training for Audio-based Music Classification</a></strong> <br>
-                          <em>Aäron van den Oord,  Sander Dieleman,  Benjamin Schrauwen</em><br>
-                          Ghent University 
-                          <p>(PS1-2) <strong><a href="proceedings/T008_121_Paper.pdf" target="_blank">Estimating Musical Time Information from Performed MIDI Files</a></strong> <br>
-                            <em>Harald Grohganz<sup>1</sup>,  Michael Clausen<sup>1</sup>,  Meinard Mueller<sup>2</sup></em><br>
-                            <sup>1</sup>University of Bonn, <sup>2</sup>International Audio Laboratories Erlangen </p>
-                          <p>(PS1-3) <strong><a href="proceedings/T009_130_Paper.pdf" target="_blank">Estimation of the Direction of Strokes and Arpeggios</a></strong> <br>
-                            <em>Isabel Barbancho<sup>1</sup>,  George Tzanetakis<sup>2</sup>,  Lorenzo J. Tardon<sup>1</sup>,  Peter F. Driessen<sup>2</sup>,  Ana M. Barbancho<sup>1</sup></em><br>
-                            <sup>1</sup>Universidad de Malaga, Andalucia Tech, ATIC Research Group,ETSI Telecomunicacion, Campus de Teatinos s/n, 29071 Malaga, SPAIN, <sup>2</sup>University of Victoria. Department of Computer Science.Victoria, CANADA </p>
-                          <p>(PS1-4) <strong><a href="proceedings/T010_132_Paper.pdf" target="_blank">Predicting Expressive Dynamics in Piano Performances using Neural Networks</a></strong> <br>
-                            <em>Sam van Herwaarden<sup>1</sup>,  Maarten Grachten<sup>2</sup>,  W. Bas de Haas<sup>3</sup></em><br>
-                            <sup>1</sup>Austrian Research Institute for AI (OFAI), <sup>2</sup>Austrian Research Institute for AI, <sup>3</sup>Utrecht University </p>
-                          <p>(PS1-5) <strong><a href="proceedings/T011_142_Paper.pdf" target="_blank">An RNN-based Music Language Model for Improving Automatic Music Transcription</a></strong> <br>
-                            <em>Siddharth Sigtia<sup>1</sup>,  Emmanouil Benetos<sup>2</sup>,  Srikanth Cherla<sup>2</sup>,  Tillman Weyde<sup>2</sup>,  Artur S. d'Avila Garcez<sup>2</sup>,  Simon Dixon<sup>1</sup></em><br>
-                            <sup>1</sup>Queen Mary University of London, <sup>2</sup>City University London </p>
-                          <p>(PS1-6) <strong><a href="proceedings/T012_143_Paper.pdf" target="_blank">Towards Modeling Texture in Symbolic Data</a></strong> <br>
-                            <em>Mathieu Giraud<sup>1</sup>,  Florence Levé<sup>2</sup>,  Florent Mercier<sup>1</sup>,  Marc Rigaudière<sup>3</sup>,  Donatien Thorez<sup>1</sup></em><br>
-                            <sup>1</sup>LIFL, <sup>2</sup>MIS, LIFL, <sup>3</sup>Université de Lorraine </p>
-                          <p>(PS1-7) <strong><a href="proceedings/T013_148_Paper.pdf" target="_blank">Computational Models for Perceived Melodic Similarity in A Cappella Flamenco Singing</a></strong> <br>
-                            <em>Nadine Kroher<sup>1</sup>,  Emilia Gómez<sup>1</sup>,  Catherine Guastavino<sup>2</sup>,  Francisco Gómez-Martín<sup>3</sup>,  Jordi Bonada<sup>4</sup></em><br>
-                            <sup>1</sup>Music Technology Group, Universitat Pompue Fabra,<sup>2</sup>Centre for Interdisciplinary Research in Music Media &amp; Technology, McGill University, <sup>3</sup>School of Computer Science, Polytechnic University of Madrid, <sup>4</sup>Music Technology Group, Universitat Pompeu Fabra </p>
-                          <p>(PS1-8) <strong><a href="proceedings/T014_162_Paper.pdf" target="_blank">The VIS Framework: Analyzing Counterpoint in Large Datasets</a></strong> <br>
-                            <em>Christopher Antila and Julie Cumming</em><br>
-                            McGill University </p>
-                          <p>(PS1-9) <strong><a href="proceedings/T015_165_Paper.pdf" target="_blank">Hierarchical Approach to Detect Common Mistakes of Beginner Flute PlayerS</a></strong> <br>
-                            <em>Yoonchang Han and Kyogu Lee</em><br>
-                            Seoul National University </p>
-                          <p>(PS1-10) <strong><a href="proceedings/T016_174_Paper.pdf" target="_blank">Robust Joint Alignment of Multiple Versions of a Piece of Music</a></strong> <br>
-                            <em>Siying Wang,  Sebastian Ewert,  Simon Dixon</em><br>
-                            Queen Mary University of London </p>
-                          <p>(PS1-11) <strong><a href="proceedings/T017_180_Paper.pdf" target="_blank">Formalizing the Problem of Music Description</a></strong> <br>
-                            <em>Bob Sturm<sup>1</sup>,  Rolf Bardeli<sup>2</sup>,  Thibault Langlois<sup>3</sup>,  Valentin Emiya<sup>4</sup></em><br>
-                            <sup>1</sup>Aalborg University Copenhagen, <sup>2</sup>Fraunhofer, <sup>3</sup> Lisbon University,<sup>4</sup>Aix-Marseille University </p>
-                          <p>(PS1-12) <strong><a href="proceedings/T018_186_Paper.pdf" target="_blank">An Association-based Approach to Genre Classification in Music.</a></strong> <br>
-                            <em>Tom Arjannikov and John Z. Zhang</em><br>
-                            Department of Mathematics and Computer Science, University of Lethbridge </p>
-                          <p>(PS1-13) <strong><a href="proceedings/T019_187_Paper.pdf" target="_blank">Multiple Viewpiont Melodic Prediction with Fixed-Context Neural Networks</a></strong> <br>
-                            <em>Srikanth Cherla,  Tillman Weyde,  Artur d'Avila Garcez</em><br>
-                            City University London </p>
-                          <p>(PS1-14) <strong><a href="proceedings/T020_221_Paper.pdf" target="_blank">Verovio: A library for Engraving MEI Music Notation into SVG</a></strong> <br>
-                            <em>Laurent Pugin<sup>1</sup>,  Rodolfo Zitellini<sup>1</sup>,  Perry Roland<sup>2</sup></em><br>
-                            <sup>1</sup>Swiss RISM Office, <sup>2</sup>University of Virginia </p>
-                          <p>(PS1-15) <strong><a href="proceedings/T021_263_Paper.pdf" target="_blank">Music Classification by Transductive Learning Using Bipartite Heterogeneous Networks</a></strong> <br>
-                            <em>Diego Furtado Silva,  Rafael Geraldeli Rossi,  Solange Oliveira Rezende,  Gustavo Enrique de Almeida Prado Alves Batista</em><br>
-                            ICMC-USP </p>
-                          <p>(PS1-16) <strong><a href="proceedings/T022_277_Paper.pdf" target="_blank">Automatic Melody Transcription based on Chord Transcription</a></strong> <br>
-                            <em>Antti Laaksonen</em><br>
-                            University of Helsinki </p>
-                          <p>(PS1-17) <strong><a href="proceedings/T023_281_Paper.pdf" target="_blank">Audio-to-score Alignment at the Note Level for Orchestral Recordings</a></strong> <br>
-                            <em>Marius Miron,  Julio Jose Carabias-Orti,  Jordi Janer</em><br>
-                            Pompeu Fabra University Barcelona </p>
-                          <p>(PS1-18) <strong><a href="proceedings/T024_286_Paper.pdf" target="_blank">A Compositional Hierarchical Model for Music Information Retrieval</a></strong> <br>
-                            <em>Matevž Pesek<sup>1</sup>,  Aleš Leonardis<sup>2</sup>,  Matija Marolt1</em><br>
-                            <sup>1</sup>University of Ljubljana, Faculty of computer and information science, <sup>2</sup>University of Birmingham, School of Computer Science </p>
-                          <p>(PS1-19) <strong><a href="proceedings/T025_293_Paper.pdf" target="_blank">An Analysis and Evaluation of Audio Features for Multitrack Music Mixtures</a></strong> <br>
-                            <em>Brecht De Man<sup>1</sup>,  Brett Leonard<sup>2</sup>,  Richard King<sup>2</sup>,  Joshua D. Reiss<sup>1</sup></em><br>
-                            <sup>1</sup>Centre for Digital Music, Queen Mary University of London, <sup>2</sup>The Graduate Program in Sound Recording, Schulich School of Music, McGill University; Centre for Interdisciplinary Research in Music Media and Technology </p>
-                          <p>(PS1-20) <strong><a href="proceedings/T026_297_Paper.pdf" target="_blank">Detecting Drops in Electronic Dance Music: Content based approaches to a socially significant music event</a></strong> <br>
-                            <em>Karthik Yadati,  Martha Larson,  Cynthia C. S. Liem,  Alan Hanjalic</em><br>
-                            Delft University of Technology </p>
-                          <p>(PS1-21) <strong><a href="proceedings/T027_311_Paper.pdf" target="_blank">Towards Automatic Content-Based Separation of DJ Mixes into Single Tracks</a></strong> <br>
-                            <em>Nikolay Glazyrin</em><br>
-                            Ural Federal University </p>
-                          <p>(PS1-22) <strong><a href="proceedings/T028_322_Paper.pdf" target="_blank">MedleyDB: A Multitrack Dataset for Annotation-Intensive MIR Research</a></strong> <br>
-                            <em>Rachel M. Bittner<sup>1</sup>,  Justin Salamon<sup>1</sup>,  Mike Tierney<sup>1</sup>,  Matthias Mauch<sup>2</sup>,  Chris Cannam<sup>2</sup>,  Juan P. Bello<sup>1</sup></em><br>
-                            <sup>1</sup>New York University, <sup>2</sup>Queen Mary University </p>
-                          <p>(PS1-23) <strong><a href="proceedings/T029_329_Paper.pdf" target="_blank">Melody Extraction from Polyphonic Audio of Western Opera: A Method based on Detection of the Singer's Formant</a></strong> <br>
-                            <em>Zheng Tang<sup>1</sup> and Dawn A. A. Black<sup>2</sup></em><br>
-                            <sup>1</sup>University of Washington, Department of Electrical Engineering, <sup>2</sup>Queen Mary University of London, Electronic Engineering and Computer Science </p>
-                          (PS1-24) <strong><a href="proceedings/T030_363_Paper.pdf" target="_blank">Codebook-based Scalable Music Tagging with Poisson Matrix Factorization</a></strong> <br>
-                          <em>Dawen Liang,  John Paisley,  Dan Ellis</em><br>
-                          Columbia University </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">01:30 PM - 02:30 PM   <strong>Keynote Speech 1: Axel Roebel (Automatic Music Transcription: From Music Signals to Music Scores)  [<a target="_blank" href="http://www.camdemy.com/media/16443">Video1</a>, <a target="_blank" href="http://www.camdemy.com/media/16427">Video2</a>] </strong> [Auditorium] Chair: Li Su</td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p><a href="http://www.terasoft.com.tw/conf/ismir2014/Keynotes.html">http://www.terasoft.com.tw/conf/ismir2014/Keynotes.html</a></p>
-                         </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">02:30 PM - 03:30 PM <strong>Oral Session 2: Transcription (OS2) </strong> [Auditorium] Chair: Emilia Gomez </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(OS2-1) <strong><a href="proceedings/T032_235_Paper.pdf" target="_blank">Template Adaptation for Improving Automatic Music Transcription</a> [<a target="_blank" href="http://www.camdemy.com/media/16435">Video</a>]</strong> <br>
-                          <em>Emmanouil Benetos<sup>1</sup>,  Roland Badeau<sup>2</sup>,  Tillman Weyde<sup>1</sup>,  Gaël Richard<sup>2</sup></em><br>
-                          <sup>1</sup>City University London, <sup>2</sup>Télécom ParisTech 
-                          <p>(OS2-2) <strong><a href="proceedings/T033_333_Paper.pdf" target="_blank">Note-level Music Transcription by Maximum Likelihood Sampling</a> [<a target="_blank" href="http://www.camdemy.com/media/16436">Video</a>]</strong> <br>
-                            <em>Zhiyao Duan and David Temperley</em><br>
-                            University of Rochester </p>
-                          (OS2-3) <strong><a href="proceedings/T034_302_Paper.pdf" target="_blank">Drum Transcription via Classification of Bar-Level Rhythmic Patterns</a> [<a target="_blank" href="http://www.camdemy.com/media/16437">Video</a>]</strong> <br>
-                          <em>Lucas Thompson,  Simon Dixon,  Matthias Mauch</em><br>
-                          Queen Mary University of London</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">04:30 PM - 06:10 PM   <strong>Oral Session 3: Symbolic (OS3) </strong> [Auditorium] Chair: Frans Wiering </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(OS3-1) <strong><a href="proceedings/T036_230_Paper.pdf" target="_blank">Developing Tonal Perception through Unsupervised Learning</a> [<a target="_blank" href="http://www.camdemy.com/media/16438">Video</a>]</strong> <br>
-                          <em>Carlos Eduardo Cancino Chacón,  Stefan Lattner,  Maarten Grachten</em><br>
-                          Austrian Research Institute for Artificial Intelligence 
-                          <p>(OS3-2) <strong><a href="proceedings/T037_182_Paper.pdf" target="_blank">Exploiting Instrument-wise Playing/Non-Playing Labels for Score Synchronization of Symphonic Music</a> [<a target="_blank" href="http://www.camdemy.com/media/16439">Video</a>]</strong> <br>
-                            <em>Alessio Bazzica,  Cynthia C. S. Liem,  Alan Hanjalic</em><br>
-                            Delft University of Technology </p>
-                          <p>(OS3-3) <strong><a href="proceedings/T038_294_Paper.pdf" target="_blank">Multi-Strategy Segmentation of Melodies</a> <!--[<a target="_blank" href="http://www.camdemy.com/media/16425">Video</a>]--></strong> <br>
-                            <em>Marcelo Rodríguez-López,  Anja Volk,  Dimitrios Bountouridis</em><br>
-                            Utrecht University </p>
-                          <p>(OS3-4) <strong><a href="proceedings/T039_344_Paper.pdf" target="_blank">A Data Set for Computational Studies of Schenkerian Analysis</a> [<a target="_blank" href="http://www.camdemy.com/media/16440">Video</a>]</strong> <br>
-                            <em>Phillip Kirlin</em><br>
-                            Rhodes College </p>
-                          (OS3-5) <strong><a href="proceedings/T040_305_Paper.pdf" target="_blank">Systematic Multi-scale Set-class Analysis</a> [<a target="_blank" href="http://www.camdemy.com/media/16441">Video</a>]</strong> <br>
-                          <em>Agustín Martorell and Emilia Gómez</em><br>
-                          Universitat Pompeu Fabra </td>
-                      </tr>
-                    </tbody></table>
-                    <span class="title_b"><br>
-                      <a name="a3" id="a3"></a> <br>
-                      Wednesday October 29, 2014<br>
-                    </span>
-                    <table width="100%" border="0" cellpadding="4" cellspacing="1" bgcolor="#CCCCCC">
-                    	<tbody><tr>
-                    		<td bgcolor="#DCDCB8">08:00 AM - 09:00 AM <b> Women in MIR meeting</b> [Song Bo Room] Chair: Jin Ha Lee</td>
-                    	</tr>	
-                    	<tr>
-                        <td bgcolor="#FFFFFF">
-                        <p>Join us for connecting with other female researchers and discussing issues related to women in MIR. Men are welcome too!</p>
-                         </td>
-                      </tr>	  
-                      <tr>
-                        <td bgcolor="#DCDCB8">09:00 AM - 10:20 AM   <strong>Oral Session 4: Retrieval (OS4) </strong> [Auditorium] Chair: Hirokazu Kameoka </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-													(OS4-1) <strong><a href="proceedings/T042_131_Paper.pdf" target="_blank">Spotting a Query Phrase from Polyphonic Music Audio Signals Based on Semi-supervised Nonnegative Matrix Factorization</a> [<a target="_blank" href="http://www.camdemy.com/media/16442">Video</a>]</strong> <br>
-                          <em>Taro Masuda<sup>1</sup>,  Kazuyoshi Yoshii<sup>2</sup>,  Masataka Goto<sup>3</sup>,  Shigeo Morishima<sup>1</sup></em><br>
-                          <sup>1</sup>Waseda University, <sup>2</sup>Kyoto University, <sup>3</sup>National Institute of Advanced Industrial Science and Technology (AIST) 
-                          <p>(OS4-2) <strong><a href="proceedings/T043_173_Paper.pdf" target="_blank">Bayesian Audio Alignment based on a Unified Model of Music Composition and Performance</a> [<a target="_blank" href="http://www.camdemy.com/media/16444">Video</a>]</strong> <br>
-                            <em>Akira Maezawa<sup>1</sup>,  Katsutoshi Itoyama<sup>2</sup>,  Kazuyoshi Yoshii<sup>2</sup>,  Hiroshi Okuno<sup>3</sup></em><br>
-                            <sup>1</sup>Kyoto University; Yamaha Corporation, <sup>2</sup>Kyoto University, <sup>3</sup>Waseda University </p>
-                          <p>(OS4-3) <strong><a href="proceedings/T044_211_Paper.pdf" target="_blank">Automatic Set List Identification and Song Segmentation for Full-Length Concert Videos</a> [<a target="_blank" href="http://www.camdemy.com/media/16445">Video</a>]</strong> <br>
-                            <em>Ju-Chiang Wang<sup>1</sup>,  Ming-Chi Yen<sup>2</sup>,  Yi-Hsuan Yang<sup>2</sup>,  Hsin-Min Wang<sup>2</sup></em><br>
-                            <sup>1</sup>UCSD, <sup>2</sup>Academia Sinica </p>
-                          (OS4-4) <strong><a href="proceedings/T045_256_Paper.pdf" target="_blank">On Inter-rater Agreement in Audio Music Similarity</a> [<a target="_blank" href="http://www.camdemy.com/media/16446">Video</a>]</strong> <br>
-                          <em>Arthur Flexer</em><br>
-                          Austrian Research Institute for Artificial Intelligence </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">10:20 AM - 12:00 PM &amp; 03:30 PM - 04:30 PM <strong>Poster Session 2 (PS2) </strong> [Song Bo Room] Chair: Matthias Mauch </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(PS2-1) <strong><a href="proceedings/T047_109_Paper.pdf" target="_blank">Emotional Predisposition of Musical Instrument Timbres with Static Spectra</a></strong> <br>
-                          <em>Bin Wu<sup>1</sup>,  Andrew Horner<sup>1</sup>,  Chung Lee<sup>2</sup></em><br>
-                          <sup>1</sup>HKUST, <sup>2</sup>SUTD 
-                          <p>(PS2-2) <strong><a href="proceedings/T048_122_Paper.pdf" target="_blank">Panako - A Scalable Acoustic Fingerprinting System Handling Time-Scale and Pitch Modification</a></strong> <br>
-                            <em>Joren Six and Marc Leman</em><br>
-                            Institute for Psychoacoustics and Electronic Music (IPEM), Department of Musicology, Ghent University, Ghent, Belgium </p>
-                          <p>(PS2-3) <strong><a href="proceedings/T049_124_Paper.pdf" target="_blank">Perceptual Analysis of the F-Measure to Evaluate Section Boundaries in Music</a></strong> <br>
-                            <em>Oriol Nieto<sup>1</sup>,  Morwaread Farbood<sup>1</sup>,  Tristan Jehan<sup>2</sup>,  Juan Pablo Bello<sup>1</sup></em><br>
-                            <sup>1</sup>New York University, <sup>2</sup>The Echo Nest </p>
-                          <p>(PS2-4) <strong><a href="proceedings/T050_126_Paper.pdf" target="_blank">Keyword Spotting in A-capella Singing</a></strong> <br>
-                            <em>Anna Kruspe</em><br>
-                            Fraunhofer IDMT </p>
-                          <p>(PS2-5) <strong><a href="proceedings/T051_147_Paper.pdf" target="_blank">The Importance of F0 Tracking in Query-by-singing-humming</a></strong> <br>
-                            <em>Emilio Molina,  Lorenzo J. Tardón,  Isabel Barbancho,  Ana M. Barbancho</em><br>
-                            Universidad de Málaga </p>
-                          <p>(PS2-6) <strong><a href="proceedings/T052_177_Paper.pdf" target="_blank">Vocal Separation using Singer-Vowel Priors Obtained from Polyphonic Audio</a></strong> <br>
-                            <em>Shrikant Venkataramani<sup>1</sup>,  Nagesh Nayak<sup>2</sup>,  Preeti Rao<sup>1</sup>,  Rajbabu Velmurugan<sup>1</sup></em><br>
-                            <sup>1</sup>Indian Institute of Technology Bombay, <sup>2</sup>SensiBol Audio Technologies Pvt. Ltd. </p>
-                          <p>(PS2-7) <strong><a href="proceedings/T053_181_Paper.pdf" target="_blank">Improving Query by Tapping via Tempo Alignment</a></strong> <br>
-                            <em>Chun-Ta Chen<sup>1</sup>,  Jyh-Shing Roger Jang<sup>2</sup>,  Chun-Hung Lu<sup>3</sup></em><br>
-                            <sup>1</sup>cs nthu, <sup>2</sup>cs ntu, <sup>3</sup>Innovative Digitech-Enabled Applications &amp; Services Institute (IDEAS), Institute for Information Industry, Taiwan <br>
-                          </p>
-                          <p>(PS2-8) <strong><a href="proceedings/T054_206_Paper.pdf" target="_blank">Automatic Instrument Classification of Ethnomusicological Audio Recordings</a></strong> <br>
-                            <em>Dominique Fourer,  Jean-Luc Rouas,  Pierre Hanna,  Matthias Robine</em><br>
-                            LaBRI, University of Bordeaux <br>
-                          </p>
-                          <p>(PS2-9) <strong><a href="proceedings/T055_226_Paper.pdf" target="_blank">Music Analysis as a Smallest Grammar Problem</a></strong> <br>
-                            <em>Kirill Sidorov,  Andrew Jones,  David Marshall</em><br>
-                            Cardiff University <br>
-                          </p>
-                          <p>(PS2-10) <strong><a href="proceedings/T056_231_Paper.pdf" target="_blank">Frame-Level Audio Segmentation for Abridged Musical Works</a></strong> <br>
-                            <em>Thomas Praetzlich and Meinard Mueller</em><br>
-                            International Audio Laboratories Erlangen </p>
-                          <p>(PS2-11) <strong><a href="proceedings/T057_237_Paper.pdf" target="_blank">Creating a Corpus of Jingju (Beijing Opera) Music and Possibilities for Melodic Analysis</a></strong> <br>
-                            <em>Rafael Caro Repetto and Xavier Serra</em><br>
-                            Music Technology Group, Universitat Pompeu Fabra, Barcelona <br>
-                          </p>
-                          <p>(PS2-12) <strong><a href="proceedings/T058_254_Paper.pdf" target="_blank">Modeling Temporal Structure in Music for Emotion Prediction using Pairwise Comparisons</a></strong> <br>
-                            <em>Jens Madsen,  Bjørn Sand Jensen,  Jan Larsen</em><br>
-                            Technical University of Denmark <br>
-                          </p>
-                          <p>(PS2-13) <strong><a href="proceedings/T059_257_Paper.pdf" target="_blank">Musical Structural Analysis Database Based on GTTM</a></strong> <br>
-                            <em>Masatoshi Hamanaka<sup>1</sup>,  Keiji Hirata<sup>2</sup>,  Satoshi Tojo<sup>3</sup></em><br>
-                            <sup>1</sup>Kyoto University, <sup>2</sup>Future University Hakodate, <sup>3</sup>JAIST <br>
-                          </p>
-                          <p>(PS2-14) <strong><a href="proceedings/T060_258_Paper.pdf" target="_blank">Theoretical Framework of A Computational Model of Auditory Memory for Music Emotion Recognition</a></strong> <br>
-                            <em>Marcelo Caetano<sup>1</sup> and Frans Wiering<sup>2</sup></em><br>
-                            <sup>1</sup>INESC TEC, <sup>2</sup>Utrecht University <br>
-                          </p>
-                          <p>(PS2-15) <strong><a href="proceedings/T061_288_Paper.pdf" target="_blank">Improving Music Structure Segmentation using lag-priors</a></strong> <br>
-                            <em>Geoffroy Peeters and Victor Bisot</em><br>
-                            STMS IRCAM-CNRS-UPMC </p>
-                          <p>(PS2-16) <strong><a href="proceedings/T062_292_Paper.pdf" target="_blank">Study of the Similarity between Linguistic Tones and Melodic Pitch Contours in Beijing Opera Singing</a></strong> <br>
-                            <em>Shuo Zhang,  Rafael Caro Repetto,  Xavier Serra</em><br>
-                            Music Technology Group, University Pompeu Fabra <br>
-                          </p>
-                          <p>(PS2-17) <strong><a href="proceedings/T063_299_Paper.pdf" target="_blank">A Proximity Grid Optimization Method to Improve Audio Search for Sound Design</a></strong> <br>
-                            <em>Christian Frisson,  Stéphane Dupont,  Willy Yvart,  Nicolas Riche,  Xavier Siebert,  Thierry Dutoit</em><br>
-                            University of Mons, numediart Institute </p>
-                          <p>(PS2-18) <strong><a href="proceedings/T064_307_Paper.pdf" target="_blank">Introducing a Dataset of Emotional and Color Responses to Music</a></strong> <br>
-                            <em>Matevž Pesek<sup>1</sup>,  Primož Godec<sup>1</sup>,  Mojca Poredoš<sup>1</sup>,  Gregor Strle<sup>2</sup>,  Jože Guna<sup>1</sup>,  Emilija Stojmenova<sup>1</sup>,  Matevž Poga nik<sup>1</sup>,  Matija Marolt<sup>1</sup></em><br>
-                            <sup>1</sup>University of Ljubljana, <sup>2</sup>Scientfic Research Centre of the Slovenian Academy of Sciences and Arts <br>
-                          </p>
-                          <p>(PS2-19) <strong><a href="proceedings/T065_308_Paper.pdf" target="_blank">In-depth Motivic Analysis based on Multiparametric Closed Pattern and Cyclic Sequence Mining</a></strong> <br>
-                            <em>Olivier Lartillot</em><br>
-                            Aalborg University </p>
-                          <p>(PS2-20) <strong><a href="proceedings/T066_320_Paper.pdf" target="_blank">MIR_EVAL: A Transparent Implementation of Common MIR Metrics</a></strong> <br>
-                            <em>Colin Raffel<sup>1</sup>,  Brian McFee<sup>1</sup>,  Eric J. Humphrey<sup>2</sup>,  Justin Salamon<sup>2</sup>,  Oriol Nieto<sup>2</sup>,  Dawen Liang<sup>2</sup>,  Daniel P. W. Ellis<sup>1</sup></em><br>
-                            <sup>1</sup>Columbia University, <sup>2</sup>New York University <br>
-                            <br>
-                          (PS2-21) <strong><a href="proceedings/T067_325_Paper.pdf" target="_blank">Computational Modeling of Induced Emotion Using GEMS</a></strong> <br>
-                            <em>Anna Aljanaki,  Frans Wiering,  Remco C. Veltkamp</em><br>
-                            Utrecht University <br>
-                          </p>
-                          <p>(PS2-22) <strong><a href="proceedings/T068_337_Paper.pdf" target="_blank">Cognition-inspired Descriptors for Scalable Cover Song Retrieval</a></strong> <br>
-                            <em>Jan Van Balen,  Dimitrios Bountouridis,  Frans Wiering,  Remco Veltkamp</em><br>
-                            Utrecht University </p>
-                          <p>(PS2-23) <strong><a href="proceedings/T069_341_Paper.pdf" target="_blank">A Cross-Cultural Study on the Mood of K-POP Songs</a></strong> <br>
-                            <em>Xiao Hu<sup>1</sup>,  Jin Ha Lee<sup>2</sup>,  Kahyun Choi<sup>3</sup>,  J. Stephen Downie<sup>3</sup></em><br>
-                            <sup>1</sup>University of Hong Kong, <sup>2</sup>University of Washington, <sup>3</sup>University of Illinois <br>
-                          </p>
-                          <p>(PS2-24) <strong><a href="proceedings/T070_347_Paper.pdf" target="_blank">Cadence Detection in Western Traditional Stanzaic Songs using Melodic and Textual Features</a></strong> <br>
-                            <em>Peter Van Kranenburg and Folgert Karsdorp</em><br>
-                            Meertens Institute, Amsterdam <br>
-                          </p>
-                          (PS2-25) <strong><a href="proceedings/T071_380_Paper.pdf" target="_blank">Discovering Typical Motifs of a Raga from One-Liners of Songs in Carnatic Music</a></strong> <br>
-                          <em>Shrey Dutta and Hema A Murthy</em><br>
-                          IIT Madras</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">01:30 PM - 02:30 PM   <strong>Keynote Speech 2: Ye Wang (Sound and Music Computing for Exercise and (Re-)habilitation)  [<a target="_blank" href="http://www.camdemy.com/media/16453">Video1</a>, <a target="_blank" href="http://www.camdemy.com/media/16454">Video2</a>, <a target="_blank" href="http://www.camdemy.com/media/16455">Video3</a>] </strong> [Auditorium] Chair: Ju-Chiang Wang </td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p><a href="http://www.terasoft.com.tw/conf/ismir2014/Keynotes.html">http://www.terasoft.com.tw/conf/ismir2014/Keynotes.html</a></p>
-                         </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">02:30 PM - 03:30 PM   <strong>Oral Session 5: Structure (OS5) </strong> [Auditorium] Chair: Meinard Mueller </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(OS5-1) <strong><a href="proceedings/T073_319_Paper.pdf" target="_blank">Analyzing Song Structure with Spectral Clustering</a> [<a target="_blank" href="http://www.camdemy.com/media/16447">Video</a>]</strong> <br>
-                          <em>Brian McFee and Dan Ellis</em><br>
-                          Columbia University 
-                          <p>(OS5-2) <strong><a href="proceedings/T074_150_Paper.pdf" target="_blank">Identifying Polyphonic Musical Patterns From Audio Recordings Using Music Segmentation Techniques</a> [<a target="_blank" href="http://www.camdemy.com/media/16448">Video</a>]</strong> <br>
-                            <em>Oriol Nieto and Morwaread Farbood</em><br>
-                            New York University </p>
-                          (OS5-3) <strong><a href="proceedings/T075_271_Paper.pdf" target="_blank">Boundary Detection in Music Structure Analysis using Convolutional Neural Networks</a> [<a target="_blank" href="http://www.camdemy.com/media/16449">Video</a>]</strong> <br>
-                          <em>Karen Ullrich,  Jan Schlüter,  Thomas Grill</em><br>
-                          Austrian Research Institute for Artificial Intelligence (OFAI) </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">04:30 PM - 05:10 PM   <strong>Oral Session 6: Cultures (OS6) </strong> [Auditorium] Chair: Anja Volk </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(OS6-1) <strong><a href="proceedings/T077_265_Paper.pdf" target="_blank"> Tracking the "Odd": Meter Inference in a Culturally Diverse Music Corpus</a> [<a target="_blank" href="http://www.camdemy.com/media/16450">Video</a>]</strong> <br>
-                          <em>Andre Holzapfel<sup>1</sup>,  Florian Krebs<sup>2</sup>,  Ajay Srinivasamurthy<sup>3</sup></em><br>
-                          <sup>1</sup>New York University Abu Dhabi, <sup>2</sup>Johannes Kepler University, <sup>3</sup>Universitat Pompeu Fabra  <br>
-                          <br>
-                          (OS6-2) <strong><a href="proceedings/T078_134_Paper.pdf" target="_blank">Transcription and Recognition of Syllable based Percussion Patterns: The Case of Beijing Opera</a> [<a target="_blank" href="http://www.camdemy.com/media/16451">Video</a>]</strong> <br>
-                          <em>Ajay Srinivasamurthy<sup>1</sup>,  Rafael Caro Repetto<sup>1</sup>,  Harshavardhan Sundar<sup>2</sup>,  Xavier Serra<sup>1</sup></em><br>
-                          <sup>1</sup>Universitat Pompeu Fabra, Barcelona, Spain, <sup>2</sup>Indian Institute of Science, Bangalore, India</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">05:10 PM - 06:00 PM <strong>Mixer</strong> [Song Bo Room] Chair: Eric Humphrey</td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p>We are excited to announce that this year's ISMIR will also feature a conference mixer! It will be held on Wednesday, October 29th from 5:10-6:00PM at the conference hotel. Similar in spirit to other speed networking events, the goal of the mixer is two-fold: to connect researchers with similar interests in a relaxed setting, and to help those new to ISMIR meet and mingle with more established members of the community. Therefore, if this is your first ISMIR, this is definitely for you! </p>
-                        		<p>In order to plan appropriately and help everyone make the right connections, we are asking that all attendees RSVP by October 29th via the following Google form: <a href="http://goo.gl/forms/lXOBj3lcsW">http://goo.gl/forms/lXOBj3lcsW</a></p>
-                         </td>
-                      </tr>	  
-
-                      <tr>
-                        <td bgcolor="#DCDCB8">07:00 PM - 10:00 PM <strong>Concert</strong> [Auditorium] Chair: Jeff Huang</td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p><a href="http://www.terasoft.com.tw/conf/ismir2014/MusicProgram.html">http://www.terasoft.com.tw/conf/ismir2014/MusicProgram.html</a></p>
-                         </td>
-                      </tr>	  
-                      
-                    </tbody></table>
-                    <span class="title_b"><br>
-                      <a name="a4" id="a4"></a> <br>
-                      Thursday October 30, 2014<br>
-                    </span>
-                    <table width="100%" border="0" cellpadding="5" cellspacing="1" bgcolor="#CCCCCC">
-                      <tbody><tr></tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">09:00 AM - 10:20 AM <strong>Oral Session 7: Recommendation &amp; Listeners (OS7) </strong> [Auditorium] Chair: Markus Schedl </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(OS7-1) <strong><a href="proceedings/T080_188_Paper.pdf" target="_blank">Taste Space Versus the World: an Embedding Analysis of Listening Habits and Geography</a> [<a target="_blank" href="http://www.camdemy.com/media/16462">Video</a>]</strong> <br>
-                          <em>Joshua Moore<sup>1</sup>,  Thorsten Joachims<sup>1</sup>,  Douglas Turnbull<sup>2</sup></em><br>
-                          <sup>1</sup>Cornell University, <sup>2</sup>Ithaca College 
-                          <p>(OS7-2) <strong><a href="proceedings/T081_140_Paper.pdf" target="_blank">Enhancing Collaborative Filtering Music Recommendation by Balancing Exploration and Exploitation</a> [<a target="_blank" href="http://www.camdemy.com/media/16463">Video</a>]</strong> <br>
-                            <em>Zhe Xing,  Xinxi Wang,  Ye Wang</em><br>
-                            School of Computing, National University of Singapore </p>
-                          <p>(OS7-3) <strong><a href="proceedings/T082_339_Paper.pdf" target="_blank">Improving Music Recommender Systems: What Can We Learn from Research on Music Tastes </a> [<a target="_blank" href="http://www.camdemy.com/media/16213">Video</a>]</strong> <br>
-                            <em>Audrey Laplante</em><br>
-                            Université de Montréal <br>
-                          </p>
-                          (OS7-4) <strong><a href="proceedings/T083_184_Paper.pdf" target="_blank">Social Music in Cars</a> [<a target="_blank" href="http://www.camdemy.com/media/16212">Video</a>]</strong> <br>
-                          <em>Sally Jo Cunningham,  David M. Nichols,  David Bainbridge,  Hassan Ali</em><br>
-                          Waikato University</td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">10:20 AM - 12:00 PM &amp; 03:30 PM - 04:30 PM   <strong>Poster Session 3 (PS3) </strong> [Song Bo Room] Chair: Audrey Laplante </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(PS3-1) <strong><a href="proceedings/T086_151_Paper.pdf" target="_blank">A Combined Thematic and Acoustic Approach for a Music Recommendation Service in TV Commercials</a></strong> <br>
-                          <em>Mohamed Morchid,  Richard Dufour,  Georges Linares</em><br>
-                          LIA - University of Avignon 
-                          <p>(PS3-2) <strong><a href="proceedings/T085_107_Paper.pdf" target="_blank">Are Poetry and Lyrics All That Different </a></strong> <br>
-                            <em>Abhishek Singhi and Daniel Brown</em><br>
-                            University of Waterloo <br>
-                          </p>
-                          <p>(PS3-3) <strong><a href="proceedings/T087_154_Paper.pdf" target="_blank">Singing-Voice Separation from Monaural Recordings using Deep Recurrent Neural Networks</a></strong> <br>
-                            <em>Po-Sen Huang,  Minje Kim,  Mark Hasegawa-Johnson,  Paris Smaragdis</em><br>
-                            University of Illinois at Urbana-Champaign <br>
-                          </p>
-                          <p>(PS3-4) <strong><a href="proceedings/T088_192_Paper.pdf" target="_blank">Impact of Listening Behavior on Music Recommendation</a></strong> <br>
-                            <em>Katayoun Farrahi<sup>1</sup>,  Markus Schedl<sup>2</sup>,  Andreu Vall<sup>2</sup>,  David Hauger<sup>2</sup>,  Marko Tkalcic<sup>2</sup></em><br>
-                            <sup>1</sup>Goldsmiths, University of London, <sup>2</sup>Johannes Kepler University<br>
-                          </p>
-                          <p>(PS3-5) <strong><a href="proceedings/T089_194_Paper.pdf" target="_blank">Towards Seamless Network Music Performance: Predicting an Ensemble's Expressive Decisions for Distributed Performance</a></strong> <br>
-                            <em>Bogdan Vera and Elaine Chew</em><br>
-                            Queen Mary, University of London <br>
-                          </p>
-                          <p>(PS3-6) <strong><a href="proceedings/T090_227_Paper.pdf" target="_blank">Detection of Motor Changes in Violin Playing by EMG Signals</a></strong> <br>
-                            <em>Ling-Chi Hsu<sup>1</sup>,  Yu-Lin Wang<sup>1</sup>,  Yi-Ju Lin<sup>1</sup>,  Cheryl D. Metcalf<sup>2</sup>,  Alvin W.Y. Su<sup>1</sup></em><br>
-                            <sup>1</sup>Department of CSIE, National Cheng-Kung University, Taiwan, <sup>2</sup>Faculty of Health Sciences, University of Southampton, United Kingdom <br>
-                          </p>
-                          <p>(PS3-7) <strong><a href="proceedings/T091_236_Paper.pdf" target="_blank">Automatic Key Partition Based on Tonal Organization Information of Classical Music</a></strong> <br>
-                            <em>Wang Kong Lam and Tan Lee</em><br>
-                            The Chinese University of Hong Kong <br>
-                          </p>
-                          <p>(PS3-8) <strong><a href="proceedings/T092_241_Paper.pdf" target="_blank">Bayesian Singing-Voice Separation</a></strong> <br>
-                            <em>Po-Kai Yang,  Chung-Chien Hsu,  Jen-Tzung Chien</em><br>
-                            National Chiao Tung University </p>
-                          <p>(PS3-9) <strong><a href="proceedings/T093_242_Paper.pdf" target="_blank">Probabilistic Extraction of Beat Positions from a Beat Activation Function</a></strong> <br>
-                            <em>Filip Korzeniowski,  Sebastian Böck,  Gerhard Widmer</em><br>
-                            Department of Computational Perception, Johannes Kepler University, Linz <br>
-                          </p>
-                          <p>(PS3-10) <strong><a href="proceedings/T094_244_Paper.pdf" target="_blank">Geographical Region Mapping Scheme Based on Musical Preferences</a></strong> <br>
-                            <em>Sanghoon Jun<sup>1</sup>,  Seungmin Rho<sup>2</sup>,  Eenjun Hwang<sup>1</sup></em><br>
-                            <sup>1</sup>Korea University, <sup>2</sup>Sungkyul University <br>
-                          </p>
-                          <p>(PS3-11) <strong><a href="proceedings/T095_250_Paper.pdf" target="_blank">On Comparative Statistics for Labelling Tasks: What can We Learn from MIREX ACE 2013 </a></strong> <br>
-                            <em>John Ashley Burgoyne<sup>1</sup>,  Bas de Haas<sup>2</sup>,  Johan Pauwels<sup>3</sup></em><br>
-                            <sup>1</sup>Universiteit van Amsterdam, <sup>2</sup>Universiteit Utrecht, <sup>3</sup> STMS IRCAM-CNRS-UPMS <br>
-                          </p>
-                          <p>(PS3-12) <strong><a href="proceedings/T096_251_Paper.pdf" target="_blank">Merged-Output HMM for Piano Fingering of Both Hands</a></strong> <br>
-                            <em>Eita Nakamura<sup>1</sup>,  Nobutaka Ono<sup>1</sup>,  Shigeki Sagayama<sup>2</sup></em><br>
-                            <sup>1</sup>National Institute of Informatics, <sup>2</sup>Meiji University <br>
-                          </p>
-                          <p>(PS3-13) <strong><a href="proceedings/T097_268_Paper.pdf" target="_blank">Modeling Rhythm Similarity for Electronic Dance Music</a></strong> <br>
-                            <em>Maria Panteli<sup>1</sup>,  Niels Bogaards<sup>2</sup>,  Aline Honingh<sup>1</sup></em><br>
-                            <sup>1</sup>Institute for Logic, Language and Computation, University of Amsterdam, P.O. Box 94242, 1090 GE Amsterdam, Netherlands, <sup>2</sup>Elephantcandy, Rapenburg 91c, 1011 TW Amsterdam, Netherlands </p>
-                          <p>(PS3-14) <strong><a href="proceedings/T098_270_Paper.pdf" target="_blank">MuSe: A Music Recommendation Management System</a></strong> <br>
-                            <em>Martin Przyjaciel-Zablocki,  Thomas Hornung,  Alexander Schätzle,  Sven Gau ,  Io Taxidou,  Georg Lausen</em><br>
-                            University of Freiburg <br>
-                          </p>
-                          <p>(PS3-15) <strong><a href="proceedings/T099_276_Paper.pdf" target="_blank">Tempo- and Transposition-invariant Identification of Piece and Score Position</a></strong> <br>
-                            <em>Andreas Arzt,  Gerhard Widmer,  Reinhard Sonnleitner</em><br>
-                            Johannes Kepler University <br>
-                          </p>
-                          <p>(PS3-16) <strong><a href="proceedings/T100_278_Paper.pdf" target="_blank">Gender Identification and Age Estimation of Users Based on Music Metadata</a></strong> <br>
-                            <em>Ming-Ju Wu<sup>1</sup>,  Jyh-Shing Jang<sup>2</sup>,  Chun-Hung Lu<sup>3</sup></em><br>
-                            <sup>1</sup>National Tsing Hua University, <sup>2</sup>National Taiwan University, <sup>3</sup>Innovative Digitech-Enabled Applications &amp; Services Institute (IDEAS), Institute for Information Industry, Taiwan <br>
-                          </p>
-                          <p>(PS3-17) <strong><a href="proceedings/T101_296_Paper.pdf" target="_blank">Information-Theoretic Measures of Music Listening Behaviour</a></strong> <br>
-                            <em>Daniel Boland and Roderick Murray-Smith</em><br>
-                            School of Computing Science, University of Glasgow, United Kingdom <br>
-                          </p>
-                          <p>(PS3-18) <strong><a href="proceedings/T102_298_Paper.pdf" target="_blank">Evaluation Framework for Automatic Singing Transcription</a></strong> <br>
-                            <em>Emilio Molina,  Ana M. Barbancho,  Lorenzo J. Tardón,  Isabel Barbancho</em><br>
-                            Universidad de Málaga <br>
-                          </p>
-                          <p>(PS3-19) <strong><a href="proceedings/T103_326_Paper.pdf" target="_blank">What is the Effect of Audio Quality on the Robustness of MFCCs and Chroma Features </a></strong> <br>
-                            <em>Julián Urbano,  Dmitry Bogdanov,  Perfecto Herrera,  Emilia Gómez,  Xavier Serra</em><br>
-                            Universitat Pompeu Fabra <br>
-                          </p>
-                          <p>(PS3-20) <strong><a href="proceedings/T104_346_Paper.pdf" target="_blank">Music Information Behaviors and System Preferences of University Students in Hong Kong</a></strong> <br>
-                            <em>Xiao Hu<sup>1</sup>,  Jin Ha Lee<sup>2</sup>,  Leanne Ka Yan Wong<sup>1</sup></em><br>
-                            <sup>1</sup>University of Hong Kong, <sup>2</sup>University of Washington <br>
-                          </p>
-                          <p>(PS3-21) <strong><a href="proceedings/T105_352_Paper.pdf" target="_blank">LyricsRadar: A Lyrics Retrieval System Based on Latent Topics of Lyrics</a></strong> <br>
-                            <em>Shoto Sasaki<sup>1</sup>,  Kazuyoshi Yoshii<sup>2</sup>,  Tomoyasu Nakano<sup>3</sup>,  Masataka Goto<sup>3</sup>,  Shigeo Morisihima<sup>1</sup></em><br>
-                            <sup>1</sup>Waseda University, <sup>2</sup>Kyoto University, <sup>3</sup>National Institute of Advanced Industrial Science and Technology (AIST) <br>
-                            <br>
-                            (PS3-22) <strong><a href="proceedings/T106_355_Paper.pdf" target="_blank">JAMS: A JSON Annotated Music Specification for Reproducible MIR Research</a></strong> <br>
-                            <em>Eric J. Humphrey,  Justin Salamon,  Oriol Nieto,  Jon Forsyth,  Rachel M. Bittner,  Juan P. Bello</em><br>
-                            NYU <br>
-                            <br>
-                            (PS3-23) <strong><a href="proceedings/T107_356_Paper.pdf" target="_blank">On The Changing Regulations of Privacy and Personal Information in MIR</a></strong> <br>
-                            <em>Pierre Saurel<sup>1</sup>,  Francis Rousseaux<sup>2</sup>,  Marc Danger<sup>3</sup></em><br>
-                            <sup>1</sup>Université Paris-Sorbonne, <sup>2</sup>IRCAM, <sup>3</sup>ADAMI <br>
-                          </p>
-                          (PS3-24) <strong><a href="proceedings/T108_367_Paper.pdf" target="_blank">A Multi-model Approach to Beat Tracking Considering Heterogeneous Music Styles</a></strong> <br>
-                          <em>Sebastian Böck,  Florian Krebs,  Gerhard Widmer</em><br>
-                          Johannes Kepler University<br></td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">01:30 PM - 02:30 PM   <strong>Industrial Panel</strong>   [Auditorium] Chair: Brian Mcfee</td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p>Panelists: Amelie Anglade (Senzari), Andreas Ehmann (Pandora), Avery Wang (Shazam), Lei Wang (Doreso)</p>
-                         </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">02:30 PM - 03:30 PM   <strong>Oral Session 8: Source Separation (OS8) </strong> [Auditorium] Chair: Kazuyoshi Yoshii </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(OS8-1) <strong><a href="proceedings/T110_127_Paper.pdf" target="_blank">Extending Harmonic-Percussive Separation of Audio Signals</a> [<a target="_blank" href="http://www.camdemy.com/media/16464">Video</a>]</strong> <br>
-                          <em>Jonathan Driedger<sup>1</sup>,  Meinard Mueller<sup>1</sup>,  Sascha Disch<sup>2</sup></em><br>
-                          <sup>1</sup>International Audio Laboratories Erlangen, <sup>2</sup>Fraunhofer Institute for Integrated Circuits IIS 
-                          <p>(OS8-2) <strong><a href="proceedings/T111_217_Paper.pdf" target="_blank">Singing Voice Separation Using Spectro-Temporal Modulation Features</a> [<a target="_blank" href="http://www.camdemy.com/media/16465">Video</a>]</strong> <br>
-                            <em>Frederick Yen<sup>1</sup>,  Yin-Jyun Luo<sup>1</sup>,  Tai-Shih Chi<sup>2</sup></em><br>
-                            <sup>1</sup>Master Program of Sound And Music Innovative Technologies, <sup>2</sup>Department of Electrical and Computer Engineering, National Chiao Tung University, Hsinchu, Taiwan 300, R.O.C. <br>
-                          </p>
-                          (OS8-3) <strong><a href="proceedings/T112_135_Paper.pdf" target="_blank">Harmonic-Temporal Factor Decomposition Incorporating Music Prior Information for Informed Monaural Source Separation</a> [<a target="_blank" href="http://www.camdemy.com/media/16466">Video</a>]</strong> <br>
-                          <em>Tomohiko Nakamura<sup>1</sup>,  Kotaro Shikata<sup>1</sup>,  Norihiro Takamune<sup>1</sup>,  Hirokazu Kameoka<sup>2</sup></em><br>
-                          <sup>1</sup>The University of Tokyo, <sup>2</sup>The University of Tokyo/ NTT CS Lab. <br></td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">04:30 PM - 05:50 PM   <strong>Oral Session 9: Rhythm &amp; Beat (OS9) </strong> [Auditorium] Chair: Andre Holzapfel </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-							(OS9-1) <strong><a href="proceedings/T114_229_Paper.pdf" target="_blank">Design And Evaluation of Onset Detectors using Different Fusion Policies</a> [<a target="_blank" href="http://www.camdemy.com/media/16467">Video</a>]</strong> <br>
-                          <em>Mi Tian,  György Fazekas,  Dawn A. A. Black,  Mark Sandler</em><br>
-                          Centre for Digital Music, Queen Mary University of London 
-                          <p>(OS9-2) <strong><a href="proceedings/T115_238_Paper.pdf" target="_blank">Evaluating the Evaluation Measures for Beat Tracking</a> [<a target="_blank" href="http://www.camdemy.com/media/16468">Video</a>]</strong> <br>
-                            <em>Matthew Davies<sup>1</sup> and Sebastian Böck<sup>2</sup></em><br>
-                            <sup>1</sup>INESC TEC, <sup>2</sup>Johannes Kepler University <br>
-                          </p>
-                          <p>(OS9-3) <strong><a href="proceedings/T116_357_Paper.pdf" target="_blank">Improving Rhythmic Transcriptions via Probability Models Applied Post-OMR</a> [<a target="_blank" href="http://www.camdemy.com/media/16469">Video</a>]</strong> <br>
-                            <em>Maura Church<sup>1</sup> and Michael Scott Cuthbert<sup>2</sup></em><br>
-                            <sup>1</sup>Harvard University &amp; Google Inc., <sup>2</sup>MIT, Music and Theater Arts <br>
-                          </p>
-                          (OS9-4) <strong><a href="proceedings/T117_317_Paper.pdf" target="_blank">Classifying EEG Recordings of Rhythm Perception</a> [<a target="_blank" href="http://www.camdemy.com/media/16470">Video</a>]</strong> <br>
-                          <em>Sebastian Stober,  Daniel J. Cameron,  Jessica A. Grahn</em><br>
-                          Brain and Mind Institute, Western University, Canada </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">06:30 PM - 09:00 PM   <strong>Banquet</strong> [Kunlun Hall (12F)] </td>
-                      </tr>
-                      <tr></tr>
-                    </tbody></table>
-                    <span class="title_b"><br>
-                      <a name="a5" id="a5"></a> <br>
-                      Friday October 31, 2014 </span>
-                    <table width="100%" border="0" cellpadding="4" cellspacing="1" bgcolor="#CCCCCC">
-                      <tbody><tr>
-                        <td bgcolor="#DCDCB8">09:00 AM - 09:40 AM   <strong>MIREX Oral Session</strong> [Auditorium] Chair: J. Stephen Downie </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#FFFFFF">
-						(MOS) <strong><a href="proceedings/T119_342_Paper.pdf" target="_blank">Ten Years of MIREX (Music Information Retrieval Evaluation eXchange): Reflections, Challenges and Opportunities</a> [<a target="_blank" href="http://www.camdemy.com/media/16476">Video</a>]</strong> <br>
-                          <em>J. Stephen Downie<sup>1</sup>,  Xiao Hu<sup>2</sup>,  Jin Ha Lee<sup>3</sup>,  Kahyun Choi<sup>1</sup>,  Sally Jo Cunningham<sup>4</sup>,  Yun Hao<sup>1</sup></em><br>
-                          <sup>1</sup>University of Illinois, <sup>2</sup>University of Hong Kong, <sup>3</sup>University of Washington, <sup>4</sup>University of Waikato </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">09:40 AM - 10:20 AM   <strong>MIREX Grand Challenge [<a target="_blank" href="http://www.camdemy.com/media/16477">Video</a>]</strong> [Auditorium]</td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p><a href="http://www.music-ir.org/mirex/wiki/2014:GC14UX">http://www.music-ir.org/mirex/wiki/2014:GC14UX</a></p>
-                         </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">10:20 AM - 11:40 AM   <strong>MIREX Poster Session</strong> [Song Bo Room] </td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p><a href="http://www.music-ir.org/mirex/wiki/2014:MIREX2014_Results">http://www.music-ir.org/mirex/wiki/2014:MIREX2014_Results</a></p>
-                         </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">11:40 AM - 12:40 PM   <strong>Business Meeting [<a target="_blank" href="http://www.camdemy.com/media/16490">Video</a>]</strong> [Auditorium] </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">12:40 PM - 01:00 PM   <strong>Closing</strong> [Auditorium] </td>
-                      </tr>
-                      <tr>
-                        <td bgcolor="#DCDCB8">02:00 PM - 03:30 PM   <strong>Late-breaking and Demo Session</strong> [Song Bo Room, Chang Chin Room] </td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p><a href="http://www.terasoft.com.tw/conf/ismir2014/AcceptedLBDPapers.html">http://www.terasoft.com.tw/conf/ismir2014/AcceptedLBDPapers.html</a></p>
-                         </td>
-                      </tr>	  
-                      <tr>
-                        <td bgcolor="#DCDCB8">03:30 PM - 06:00 PM   <strong>Unconference</strong> [Auditorium, Song Bo Room, Chang Chin Room, the Grand VIP Room] </td>
-                      </tr>
-                      <tr>
-                        	<td bgcolor="#FFFFFF">
-                        		<p><a href="http://www.terasoft.com.tw/conf/ismir2014/theLBD.html">http://www.terasoft.com.tw/conf/ismir2014/theLBD.html</a></p>
-                         </td>
-                      </tr>	  
-                    </tbody></table></td>
-                </tr>
-            </tbody></table></td>
-          </tr>
-      </tbody></table></td>
-    </tr>
-  </tbody></table>
-</div>
-<div id="footer">
-  <table width="940" border="0" align="center" cellpadding="0" cellspacing="0">
-    <tbody><tr>
-      <td height="100" valign="bottom" bgcolor="#FFFFFF"><img src="images/ind_r5_c1.gif" width="940" height="68"></td>
-    </tr>
-  </tbody></table>
-</div>
-
-
-<script type="text/javascript">
-plist = ['109_poster.pdf',  '192_poster.pdf',  '270_poster.pdf',  '322_poster.pdf',
-'122_poster.pdf',  '206_poster.pdf',  '276_poster.pdf',  '325_poster.pdf',
-'124_poster.pdf',  '221_poster.pdf',  '277_poster.pdf',  '326_poster.pdf',
-'126_poster.pdf',  '226_poster.pdf',  '278_poster.pdf',  '337_poster.pdf',
-'132_poster.pdf',  '236_poster.pdf',  '281_poster.pdf',  '341_poster.pdf',
-'148_poster.pdf',  '237_poster.pdf',  '286_poster.pdf',  '346_poster.pdf',
-'151_poster.pdf',  '242_poster.pdf',  '288_poster.pdf',  '352_poster.pdf',
-'154_poster.pdf',  '244_poster.pdf',  '296_poster.pdf',  '355_poster.pdf',
-'162_poster.pdf',  '251_poster.pdf',  '299_poster.pdf',  '356_poster.pdf',
-'174_poster.pdf', '257_poster.pdf',  '307_poster.pdf',  '363_poster.pdf', '177_poster.pdf', '258_poster.pdf',  '308_poster.pdf',  '367_poster.pdf', '180_poster.pdf', '263_poster.pdf',  '311_poster.pdf', 
-'186_poster.pdf', '268_poster.pdf',  '320_poster.pdf', '347_poster.pdf', '143_poster.pdf'];
-
-
-var alist = $("strong > a");
-for ( i=0 ; i!=alist.length ; ++i ) {
-  if ( alist[i].href.match("proceedings/") != null ) {
-    var str = alist[i].innerText;
-    alist[i].innerText = '[Paper]';
-
-    if ( alist[i].parentNode.childNodes.length != 1 || alist[i].parentNode.parentNode.innerText.match('OS') ) {
-        $( alist[i].parentNode ).prepend( '<strong>' + str + '</strong> ' );
-        continue;
-    }
-    else
-        $( alist[i].parentNode ).prepend( '<strong>' + str + '</strong> ' );
-    
-    var poster = alist[i].href.match('_.*_')[0].substr(1, 3) + '_poster.pdf';
-    
-    $( alist[i].parentNode ).append(' ');
-    if ( $.inArray( poster, plist ) != -1 ) {
-      $( alist[i].parentNode ).append( '<a href="posters/' + poster + '" target="_blank">[Poster]</a>' );
-    }
-    else {
-      $( alist[i].parentNode ).append( '<strong>[Poster]</strong>' );
-    }
-  }
-}
-
-</script>
-</body></html>
diff --git a/.vim/dirs/backups/MERGE_MSG~ b/.vim/dirs/backups/MERGE_MSG~
deleted file mode 100644
index 68a2f5f..0000000
--- a/.vim/dirs/backups/MERGE_MSG~
+++ /dev/null
@@ -1,7 +0,0 @@
-Merge branch 'master' of https://github.com/elsdrm/meeting-20141217
-
-# Please enter a commit message to explain why this merge is necessary,
-# especially if it merges an updated upstream into a topic branch.
-#
-# Lines starting with '#' will be ignored, and an empty message aborts
-# the commit.
diff --git a/.vim/dirs/backups/README.rst~ b/.vim/dirs/backups/README.rst~
deleted file mode 100644
index d6cb3b6..0000000
--- a/.vim/dirs/backups/README.rst~
+++ /dev/null
@@ -1,128 +0,0 @@
-This reposiotry is a modified version from https://github.com/jaredly/vim-debug
-
-=========================
-.. |vim-debug-logo| image:: https://raw.github.com/jabapyth/vim-debug/master/logo.png
-
-|vim-debug-logo| vim-debug
-=========================
-
-.. Maintainer: Jared Forsyth <jared@jaredforsyth.com>
-.. Source: http://github.com/jabapyth/vim-phpdebug
-
-This plugin creates an integrated debugging environment in VIM.
-
-It supports python and php.
-
-
-Features
---------
-
-* Integration with xdebug
-
-* Step (into/over/out)
-
-* Live stack view
-
-* Breakpoint set/remove
-
-* Watch expressions
-
-* Live scope view
-
-* Some improvements to make it easier to hack
-
-  * It's now in a true python package
-
-  * Modularized
-
-  * Cleaned up, substantially rewritten for consistency
-
-
-Planned:
-
-* Conditional breakpoints
-
-
-Usage
------
-
-To start your debug session, use the following variants::
-
-   Usage: Dbg - (no auto start)
-          Dbg . (autostart current file -- python)
-          Dbg url (autostart a URL -- PHP)
-          Dbg num (autostart a past url -- PHP)
-
-Note: for PHP urls, vim-debug keeps track of the last 5 urls you debugged --
-so you don't have to keep typing them in.
-
-Debugger commands::
-
-   [usage:] dbg command [options]
-   - quit    :: exit the debugger
-   - run     :: continue execution until a breakpoint is reached or the program ends
-            default shortcut: \r
-   - stop    :: exit the debugger
-   - over    :: step over next function call
-            default shortcut: \o
-   - watch   :: execute watch functions
-            default shortcut: \w
-   - up      :: go up the stack
-            default shortcut: \u
-   - here    :: continue execution until the cursor (tmp breakpoint)
-            default shortcut: \h
-   - down    :: go down the stack
-            default shortcut: \d
-   - exit    :: exit the debugger
-   - eval    :: eval some code
-   - break   :: set a breakpoint
-            default shortcut: \b
-   - into    :: step into next function call
-            default shortcut: \i
-   - out     :: step out of current function call
-            default shortcut: \t
-
-To disable the default mappings, set the variable ``g:vim_debug_disable_mappings`` to a value
-different than 0 in the debugger.vim file.
-
-For example::
-
-    let g:vim_debug_disable_mappings = 1
-
-
-Installation
-------------
-
-Execute the following commands::
-
-    sudo pip install dbgp vim-debug
-    install-vim-debug.py
-
-Note: the ``install-vim-debug.py`` command installs the ``debugger.vim`` in your ``$VIM/plugins/`` directory.
-
-Take a look
-----------------------
-
-Screenshot: `[full size]
-<http://jaredforsyth.com/media/uploads/images/vim_debug.jpeg>`_
-
-.. image:: http://jaredforsyth.com/media/uploads/images/vim_debug.jpeg
-   :width: 450
-
-A screencast tutorial: https://www.youtube.com/watch?v=kairdgZCD1U
-
-
-Some links of interest
-----------------------
-
-`Python package installer <http://pypi.python.org/pypi/pip>`_
-
-`Xdebug docs <http://www.xdebug.org/docs-dbgp.php>`_
-
-
-Credits
--------
-
-:Sam Ghods: `(last activity 6/21/07) <http://www.vim.org/scripts/script.php?script_id=1929>`_
-:Seung Woo Shin: `(last activity 12/7/04) <http://www.vim.org/scripts/script.php?script_id=1152>`_
-
diff --git a/.vim/dirs/backups/_commands.py~ b/.vim/dirs/backups/_commands.py~
deleted file mode 100644
index ac46df9..0000000
--- a/.vim/dirs/backups/_commands.py~
+++ /dev/null
@@ -1,163 +0,0 @@
-import sys
-import vim
-import traceback
-from .debugger import Debugger
-
-def debugger_init(debug = 0):
-    global debugger
-
-    # get needed vim variables
-
-    # port that the engine will connect on
-    port = int(vim.eval('debuggerPort'))
-    if port == 0:
-        port = 9000
-
-    # the max_depth variable to set in the engine
-    max_children = vim.eval('debuggerMaxChildren')
-    if max_children == '':
-        max_children = '32'
-
-    max_data = vim.eval('debuggerMaxData')
-    if max_data == '':
-        max_data = '1024'
-
-    max_depth = vim.eval('debuggerMaxDepth')
-    if max_depth == '':
-        max_depth = '1'
-
-    minibufexpl = int(vim.eval('debuggerMiniBufExpl'))
-    if minibufexpl == 0:
-        minibufexpl = 0
-
-    debugger = Debugger(port, max_children, max_data, max_depth, minibufexpl, debug)
-
-import shlex
-
-_commands = {}
-def debugger_cmd(plain):
-    if ' ' in plain:
-        name, plain = plain.split(' ', 1)
-        args = shlex.split(plain)
-    else:
-        name = plain
-        plain = ''
-        args = []
-    if name not in _commands:
-        print('[usage:] dbg command [options]')
-        for command in _commands:
-            print(' - ', command, '      ::', _commands[command]['help'])
-        return
-    cmd = _commands[name]
-    if cmd['plain']:
-        return cmd['cmd'](plain)
-    else:
-        cmd['cmd'](*args)
-
-def cmd(name, help='', plain=False):
-    def decor(fn):
-        _commands[name] = {'cmd':fn, 'help':help, 'plain':plain}
-        return fn
-    return decor
-
-def debugger_command(msg, arg1 = '', arg2 = ''):
-    try:
-        debugger.command(msg, arg1, arg2)
-        debugger.update()
-    except:
-        debugger.ui.windows['trace'].write(sys.exc_info())
-        debugger.ui.windows['trace'].write("".join(traceback.format_tb( sys.exc_info()[2])))
-        debugger.stop()
-        print('Connection closed, stop debugging', sys.exc_info())
-
-@cmd('run', 'run until the next break point (or the end)')
-def debugger_run():
-    try:
-        debugger.run()
-    except:
-        debugger.ui.windows['trace'].write(sys.exc_info())
-        debugger.ui.windows['trace'].write("".join(traceback.format_tb( sys.exc_info()[2])))
-        debugger.stop()
-        print('Connection closed, stop debugging', sys.exc_info())
-
-# @cmd('watch', 'watch a value')
-def debugger_watch_input(cmd, arg = ''):
-    try:
-        if arg == '<cword>':
-            arg = vim.eval('expand("<cword>")')
-        debugger.watch_input(cmd, arg)
-    except:
-        debugger.ui.windows['trace'].write( sys.exc_info() )
-        debugger.ui.windows['trace'].write( "".join(traceback.format_tb(sys.exc_info()[2])) )
-        debugger.stop()
-        print('Connection closed, stop debugging')
-
-@cmd('ctx', 'refresh the context (scope)')
-def debugger_context():
-    try:
-        debugger.command('context_get')
-    except:
-        debugger.ui.windows['trace'].write(sys.exc_info())
-        debugger.ui.windows['trace'].write("".join(traceback.format_tb( sys.exc_info()[2])))
-        debugger.stop()
-        print('Connection closed, stop debugging')
-
-@cmd('e', 'eval some text', plain=True)
-def debugger_eval(stuff):
-    debugger.command("eval", '', stuff)
-
-def debugger_property(name = ''):
-    try:
-        debugger.property_get()
-    except:
-        debugger.ui.windows['trace'].write(sys.exc_info())
-        debugger.ui.windows['trace'].write("".join(traceback.format_tb( sys.exc_info()[2])))
-        debugger.stop()
-        print('Connection closed, stop debugging', sys.exc_info())
-
-def debugger_mark(exp = ''):
-    try:
-        debugger.mark(exp)
-    except:
-        debugger.ui.windows['trace'].write(sys.exc_info())
-        debugger.ui.windows['trace'].write("".join(traceback.format_tb( sys.exc_info()[2])))
-        debugger.stop()
-        print('Connection closed, stop debugging', sys.exc_info())
-
-def debugger_up():
-    try:
-        debugger.up()
-    except:
-        debugger.ui.windows['trace'].write(sys.exc_info())
-        debugger.ui.windows['trace'].write("".join(traceback.format_tb( sys.exc_info()[2])))
-        debugger.stop()
-        print('Connection closed, stop debugging', sys.exc_info())
-
-def debugger_down():
-    try:
-        debugger.down()
-    except:
-        debugger.ui.windows['trace'].write(sys.exc_info())
-        debugger.ui.windows['trace'].write("".join(traceback.format_tb( sys.exc_info()[2])))
-        debugger.stop()
-        print('Connection closed, stop debugging', sys.exc_info())
-
-def debugger_quit():
-    global debugger
-    debugger.quit()
-
-mode = 0
-def debugger_resize():
-    global mode
-    mode = mode + 1
-    if mode >= 3:
-        mode = 0
-
-    if mode == 0:
-        vim.command("wincmd =")
-    elif mode == 1:
-        vim.command("wincmd |")
-    if mode == 2:
-        vim.command("wincmd _")
-
-# vim: et sw=4 sts=4
diff --git a/.vim/dirs/backups/article.tplx~ b/.vim/dirs/backups/article.tplx~
deleted file mode 100644
index 33eb549..0000000
--- a/.vim/dirs/backups/article.tplx~
+++ /dev/null
@@ -1,19 +0,0 @@
-
-% Default to the notebook output style
-((* if not cell_style is defined *))
-    ((* set cell_style = 'style_ipython.tplx' *))
-((* endif *))
-
-\author{Hsueh-Min Chen}
-% Inherit from the specified cell style.
-((* extends cell_style *))
-
-
-\author{Hsueh-Min Chen}
-%===============================================================================
-% Latex Article
-%===============================================================================
-
-((* block docclass *))
-\documentclass{article}
-((* endblock docclass *))
diff --git a/.vim/dirs/backups/commands.py~ b/.vim/dirs/backups/commands.py~
deleted file mode 100644
index 9a4e86e..0000000
--- a/.vim/dirs/backups/commands.py~
+++ /dev/null
@@ -1,118 +0,0 @@
-import os
-import sys
-import vim
-import socket
-import traceback
-from .new_debugger import Debugger
-
-import shlex
-import collections
-
-def get_vim(name, default, fn=str):
-    if vim.eval('exists("%s")' % name) == '1':
-        return vim.eval(name)
-    return default
-
-_old_commands = _commands = {}
-def debugger_cmd(plain):
-    global _commands, debugger
-    if not _commands:
-        return start(*shlex.split(plain))
-    if ' ' in plain:
-        name, plain = plain.split(' ', 1)
-        args = shlex.split(plain)
-    else:
-        name = plain
-        plain = ''
-        args = []
-    if name not in _commands:
-        print('[usage:] dbg command [options]')
-        tpl = ' - %-7s :: %s'
-        leader = get_vim('mapleader', '\\')
-        for command in _commands:
-            print(tpl % (command, _commands[command]['options'].get('help', '')))
-            if 'lead' in _commands[command]['options']:
-                print('           shortcut: %s%s' % (leader, _commands[command]['options']['lead']))
-        return
-    cmd = _commands[name]
-    try:
-        if not isinstance(cmd['function'], collections.Callable):
-            if debugger.bend.connected():
-                    debugger.bend.command(cmd['function'])
-        elif cmd['options'].get('plain', False):
-            cmd['function'](plain)
-        else:
-            cmd['function'](*args)
-    except (EOFError, socket.error):
-        if debugger is not None:
-            debugger.disable()
-    if name == 'quit':
-        _commands = None
-        debugger = None
-
-def cmd(name, help='', plain=False):
-    def decor(fn):
-        _commands[name] = {'function':fn, 'options': {'help':help, 'plain':plain}}
-        return fn
-    return decor
-
-debugger = None
-
-def start(url = None):
-    global debugger
-    if debugger and debugger.started:
-        return
-    if url is not None:
-        if url in ('.', '-'):
-            pass
-        elif url.isdigit():
-            urls = load_urls()
-            num = int(url)
-            if num < 0 or num >= len(urls):
-                print('invalid session number')
-                url = None
-            else:
-                url = urls.pop(num)
-                urls.insert(0, url)
-        else:
-            save_url(url)
-        if url is not None:
-            debugger = Debugger()
-            fname = vim.current.buffer.name
-            debugger.init_vim()
-            global _commands
-            _commands = debugger.commands()
-            if url == '.':
-                if not (os.path.exists(fname) and fname.endswith('.py')):
-                    print('Current file is not python (or doesn\'t exist on your hard drive)')
-                    return
-                debugger.start_py(fname)
-            elif url == '-':
-                debugger.start()
-            else:
-                debugger.start_url(url)
-            return
-    urls = load_urls()
-    if not urls:
-        print('No saved sessions')
-    for i, url in enumerate(urls):
-        print('    %d) %s' % (i, url))
-    print('''\
-usage: dbg - (no auto start)
-       dbg . (autostart current file -- python)
-       dbg url (autostart a URL -- PHP)
-       dbg num (autostart a past url -- PHP)''')
-
-session_path = os.path.expanduser('~/.vim/vim_phpdebug.sess')
-
-def load_urls():
-    if os.path.exists(session_path):
-        return open(session_path).read().split('\n')
-    return []
-
-def save_url(url):
-    urls = load_urls()
-    urls.insert(0, url)
-    urls = urls[:5]
-    open(session_path, 'w').write('\n'.join(urls))
-
diff --git a/.vim/dirs/backups/config~ b/.vim/dirs/backups/config~
deleted file mode 100755
index 1ba9256..0000000
--- a/.vim/dirs/backups/config~
+++ /dev/null
@@ -1,13 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
-	ignorecase = true
-	precomposeunicode = true
-[remote "origin"]
-	url = https://github.com/elsdrm/shared_note.git
-	fetch = +refs/heads/*:refs/remotes/origin/*
-[branch "master"]
-	remote = origin
-	merge = refs/heads/master
diff --git a/.vim/dirs/backups/debugger.py~ b/.vim/dirs/backups/debugger.py~
deleted file mode 100644
index dbebfcf..0000000
--- a/.vim/dirs/backups/debugger.py~
+++ /dev/null
@@ -1,477 +0,0 @@
-# -*- c--oding: ko_KR.UTF-8 -*-
-# remote PHP debugger : remote debugger interface to DBGp protocol
-#
-# Copyright (c) 2010 Jared Forsyth
-#
-# The MIT License
-#
-# Permission is hereby granted, free of charge, to any person obtaining
-# a copy of this software and associated documentation files
-# (the "Software"), to deal in the Software without restriction,
-# including without limitation the rights to use, copy, modify,
-# merge, publish, distribute, sublicense, and/or sell copies of the
-# Software, and to permit persons to whom the Software is furnished
-# to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included
-# in all copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-#
-#
-# Authors:
-#    Seung Woo Shin <segv <at> sayclub.com>
-#    Sam Ghods <sam <at> box.net>
-#    Jared Forsyth <jared@jaredforsyth.com>
-
-import os
-import sys
-import vim
-import base64
-import textwrap
-import xml.dom.minidom
-
-from .ui import DebugUI
-from .protocol import DbgProtocol
-
-class BreakPointManager:
-    """ Breakpoint manager class """
-    def __init__(self):
-        """ initalize """
-        self.breakpt = {}
-        self.revmap = {}
-        self.startbno = 10000
-        self.maxbno = self.startbno
-    def clear(self):
-        """ clear of breakpoint number """
-        self.breakpt.clear()
-        self.revmap.clear()
-        self.maxbno = self.startbno
-    def add(self, file, line, exp = ''):
-        """ add break point at file:line """
-        self.maxbno = self.maxbno + 1
-        self.breakpt[self.maxbno] = { 'file':file, 'line':line, 'exp':exp, 'id':None }
-        return self.maxbno
-    def remove(self, bno):
-        """ remove break point numbered with bno """
-        del self.breakpt[bno]
-    def find(self, file, line):
-        """ find break point and return bno(breakpoint number) """
-        for bno in list(self.breakpt.keys()):
-            if self.breakpt[bno]['file'] == file and self.breakpt[bno]['line'] == line:
-                return bno
-        return None
-    def getfile(self, bno):
-        """ get file name of breakpoint numbered with bno """
-        return self.breakpt[bno]['file']
-    def getline(self, bno):
-        """ get line number of breakpoint numbered with bno """
-        return self.breakpt[bno]['line']
-    def getexp(self, bno):
-        """ get expression of breakpoint numbered with bno """
-        return self.breakpt[bno]['exp']
-    def getid(self, bno):
-        """ get Debug Server's breakpoint numbered with bno """
-        return self.breakpt[bno]['id']
-    def setid(self, bno, id):
-        """ get Debug Server's breakpoint numbered with bno """
-        self.breakpt[bno]['id'] = id
-    def list(self):
-        """ return list of breakpoint number """
-        return list(self.breakpt.keys())
-
-class Debugger:
-    """ Main Debugger class """
-
-
-    #################################################################################################################
-    # Internal functions
-    #
-    def __init__(self, port = 9000, max_children = '32', max_data = '1024', max_depth = '1', minibufexpl = '0', debug = 0):
-        """ initialize Debugger """
-        self.debug = debug
-
-        self.current = None
-        self.file = None
-        self.lasterror = None
-        self.msgid = 0
-        self.running = 0
-        self.stacks = []
-        self.curstack = 0
-        self.laststack = 0
-        self.bptsetlst = {} 
-
-        self.status = None
-        self.max_children = max_children
-        self.max_data = max_data
-        self.max_depth = max_depth
-
-        self.protocol = DbgProtocol(port)
-
-        self.ui = DebugUI(minibufexpl)
-        self.breakpt = BreakPointManager()
-
-        vim.command('sign unplace *')
-
-    def clear(self):
-        self.current = None
-        self.lasterror = None
-        self.msgid = 0
-        self.running = 0
-        self.stacks = []
-        self.curstack = 0
-        self.laststack = 0
-        self.bptsetlst = {} 
-
-        self.protocol.close()
-
-    def send(self, msg):
-        """ send message """
-        self.protocol.send_msg(msg)
-        # log message
-        if self.debug:
-            self.ui.windows['trace'].write(str(self.msgid) + ' : send =====> ' + msg)
-    def recv(self, count=10000):
-        """ receive message until response is last transaction id or received count's message """
-        while count>0:
-            count = count - 1
-            # recv message and convert to XML object
-            txt = self.protocol.recv_msg()
-            res = xml.dom.minidom.parseString(txt)
-            # log messages {{{
-            if self.debug:
-                self.ui.windows['trace'].write( str(self.msgid) + ' : recv <===== {{{     ' + txt)
-                self.ui.windows['trace'].write('}}}')
-            # handle message
-            self.handle_msg(res)
-            # exit, if response's transaction id == last transaction id
-            try:
-                if int(res.firstChild.getAttribute('transaction_id')) == int(self.msgid):
-                    return
-            except:
-                pass
-
-    def send_command(self, cmd, arg1 = '', arg2 = ''):
-        """ send command (do not receive response) """
-        self.msgid = self.msgid + 1
-        line = cmd + ' -i ' + str(self.msgid)
-        if arg1 != '':
-            line = line + ' ' + arg1
-        if arg2 != '':
-            line = line + ' -- ' + base64.encodestring(arg2)[0:-1]
-        self.send(line)
-        return self.msgid
-    #
-    #
-    #################################################################################################################
-
-    #################################################################################################################
-    # Internal message handlers
-    #
-    def handle_msg(self, res):
-        """ call appropraite message handler member function, handle_XXX() """
-        fc = res.firstChild
-        try:
-            handler = getattr(self, 'handle_' + fc.tagName)
-            handler(res)
-        except AttributeError:
-            print('Debugger.handle_'+fc.tagName+'() not found, please see the LOG___WINDOW')
-        self.ui.go_srcview()
-    def handle_response(self, res):
-        """ call appropraite response message handler member function, handle_response_XXX() """
-        if res.firstChild.hasAttribute('reason') and res.firstChild.getAttribute('reason') == 'error':
-            self.handle_response_error(res)
-            return
-        errors = res.getElementsByTagName('error')
-        if len(errors)>0:
-            self.handle_response_error(res)
-            return
-
-        command = res.firstChild.getAttribute('command')
-        try:
-            handler = getattr(self, 'handle_response_' + command)
-        except AttributeError:
-            print(res.toprettyxml())
-            print('Debugger.handle_response_'+command+'() not found, please see the LOG___WINDOW')
-            return
-        handler(res)
-        return
-
-    def handle_init(self, res):
-        """handle <init> tag
-        <init appid="7035" fileuri="file:///home/segv/htdocs/index.php" language="PHP" protocol_version="1.0">
-            <engine version="2.0.0beta1">
-                Xdebug
-            </engine>
-            <author>
-                Derick Rethans
-            </author>
-            <url>
-                http://xdebug.org
-            </url>
-            <copyright>
-                Copyright (c) 2002-2004 by Derick Rethans
-            </copyright>
-        </init>"""
-     
-        file = res.firstChild.getAttribute('fileuri')
-        self.ui.set_srcview(file, 1)
-
-    def handle_response_error(self, res):
-        """ handle <error> tag """
-        self.ui.windows['trace'].write_xml_childs(res)
-
-    def handle_response_stack_get(self, res):
-        """handle <response command=stack_get> tag
-        <response command="stack_get" transaction_id="1 ">
-            <stack filename="file:///home/segv/htdocs/index.php" level="0" lineno="41" where="{main}"/>
-        </response>"""
-
-        stacks = res.getElementsByTagName('stack')
-        if len(stacks)>0:
-            self.curstack = 0
-            self.laststack = len(stacks) - 1
-
-            self.stacks = []
-            for s in stacks:
-                self.stacks.append( {'file': s.getAttribute('filename'),
-                                     'line': int(s.getAttribute('lineno')),
-                                     'where': s.getAttribute('where'),
-                                     'level': int(s.getAttribute('level'))
-                                     } )
-
-            self.ui.windows['stack'].clean()
-            self.ui.windows['stack'].highlight_stack(self.curstack)
-
-            self.ui.windows['stack'].write_xml_childs(res.firstChild) #str(res.toprettyxml()))
-            self.ui.set_srcview( self.stacks[self.curstack]['file'], self.stacks[self.curstack]['line'] )
-
-
-    def handle_response_step_out(self, res):
-        """handle <response command=step_out> tag
-        <response command="step_out" reason="ok" status="break" transaction_id="1 "/>"""
-        if res.firstChild.hasAttribute('reason') and res.firstChild.getAttribute('reason') == 'ok':
-            if res.firstChild.hasAttribute('status'):
-                self.status = res.firstChild.getAttribute('status')
-            return
-        else:
-            print(res.toprettyxml())
-    def handle_response_step_over(self, res):
-        """handle <response command=step_over> tag
-        <response command="step_over" reason="ok" status="break" transaction_id="1 "/>"""
-        if res.firstChild.hasAttribute('reason') and res.firstChild.getAttribute('reason') == 'ok':
-            if res.firstChild.hasAttribute('status'):
-                self.status = res.firstChild.getAttribute('status')
-            return
-        else:
-            print(res.toprettyxml())
-    def handle_response_step_into(self, res):
-        """handle <response command=step_into> tag
-        <response command="step_into" reason="ok" status="break" transaction_id="1 "/>"""
-        if res.firstChild.hasAttribute('reason') and res.firstChild.getAttribute('reason') == 'ok':
-            if res.firstChild.hasAttribute('status'):
-                self.status = res.firstChild.getAttribute('status')
-            return
-        else:
-            print(res.toprettyxml())
-    def handle_response_run(self, res):
-        """handle <response command=run> tag
-        <response command="step_over" reason="ok" status="break" transaction_id="1 "/>"""
-        if res.firstChild.hasAttribute('status'):
-            self.status = res.firstChild.getAttribute('status')
-            return
-    def handle_response_breakpoint_set(self, res):
-        """handle <response command=breakpoint_set> tag
-        <responsponse command="breakpoint_set" id="110180001" transaction_id="1"/>"""
-        if res.firstChild.hasAttribute('id'):
-            tid = int(res.firstChild.getAttribute('transaction_id'))
-            bno = self.bptsetlst[tid]
-            del self.bptsetlst[tid]
-            self.breakpt.setid(bno, str(res.firstChild.getAttribute('id')))
-            #try:
-            #except:
-            #    print "can't find bptsetlst tid=", tid
-            #    pass
-    def handle_response_eval(self, res):
-        """handle <response command=eval> tag """
-        self.ui.windows['watch'].write_xml_childs(res)
-    def handle_response_property_get(self, res):
-        """handle <response command=property_get> tag """
-        self.ui.windows['watch'].write_xml_childs(res)
-    def handle_response_context_get(self, res):
-        """handle <response command=context_get> tag """
-        self.ui.windows['watch'].write_xml_childs(res)
-    def handle_response_feature_set(self, res):
-        """handle <response command=feature_set> tag """
-        self.ui.windows['watch'].write_xml_childs(res)
-    def handle_response_status(self, res):
-        self.status = res.firstChild.getAttribute('status')
-    def handle_response_default(self, res):
-        """handle <response command=context_get> tag """
-        print(res.toprettyxml())
-    #
-    #
-    #################################################################################################################
-
-    #################################################################################################################
-    # debugger command functions
-    #
-    #     usage:
-    #
-    #     dbg = Debugger()                    # create Debugger Object
-    #     dbg.run()                                 # run() method initialize windows, debugger connection and send breakpoints, ...
-    #     dbg.run()                                 # run() method sends 'run -i ...' message
-    #     dbg.command('step_into')    # sends 'step_into' message
-    #     dbg.stop()                                # stop debugger
-    #
-
-    def command(self, cmd, arg1 = '', arg2 = ''):
-        """ general command sender (receive response too) """
-        if self.running == 0:
-            print("Not connected\n")
-            return
-        msgid = self.send_command(cmd, arg1, arg2)
-        self.recv()
-        return msgid
-
-    def run(self):
-        """ start debugger or continue """
-        if self.protocol.isconnected():
-            self.command('run')
-            self.update()
-        else:
-            self.clear()
-            if not self.protocol.accept():
-                print(textwrap.dedent('''\
-                        Unable to connect to debug server. Things to check:
-                            - you refreshed the page during the 5 second
-                              period
-                            - you have the xdebug extension installed (apt-get
-                              install php5-xdebug on ubuntu)
-                            - you set the XDEBUG_SESSION_START cookie
-                            - "xdebug.remote_enable = 1" is in php.ini (not
-                              enabled by default)
-                        If you have any questions, look at
-                            http://tech.blog.box.net/2007/06/20/how-to-debug-php-with-vim-and-xdebug-on-linux/
-                        '''))
-                return False
-            self.ui.debug_mode()
-            self.running = 1
-
-            self.recv(1)
-
-            # set max data to get with eval results
-            self.command('feature_set', '-n max_children -v ' + self.max_children)
-            self.command('feature_set', '-n max_data -v ' + self.max_data)
-            self.command('feature_set', '-n max_depth -v ' + self.max_depth)
-
-            self.command('step_into')
-
-            flag = 0
-            for bno in self.breakpt.list():
-                msgid = self.send_command('breakpoint_set',
-                 '-t line -f ' + self.breakpt.getfile(bno) + ' -n ' + str(self.breakpt.getline(bno)) + ' -s enabled',
-                 self.breakpt.getexp(bno))
-                self.bptsetlst[msgid] = bno
-                flag = 1
-            if flag:
-                self.recv()
-
-            self.ui.go_srcview()
-
-    def quit(self):
-        self.ui.normal_mode()
-        self.clear()
-        #vim.command('MiniBufExplorer')
-
-    def stop(self):
-        self.clear()
-
-    def up(self):
-        if self.curstack > 0:
-            self.curstack -= 1
-            self.ui.windows['stack'].highlight_stack(self.curstack)
-            self.ui.set_srcview(self.stacks[self.curstack]['file'], self.stacks[self.curstack]['line'])
-
-    def down(self):
-        if self.curstack < self.laststack:
-            self.curstack += 1
-            self.ui.windows['stack'].highlight_stack(self.curstack)
-            self.ui.set_srcview(self.stacks[self.curstack]['file'], self.stacks[self.curstack]['line'])
-
-    def mark(self, exp = ''):
-        (row, rol) = vim.current.window.cursor
-        file = vim.current.buffer.name
-
-        bno = self.breakpt.find(file, row)
-        if bno != None:
-            id = self.breakpt.getid(bno)
-            self.breakpt.remove(bno)
-            vim.command('sign unplace ' + str(bno))
-            if self.protocol.isconnected():
-                self.send_command('breakpoint_remove', '-d ' + str(id))
-                self.recv()
-        else:
-            bno = self.breakpt.add(file, row, exp)
-            vim.command('sign place ' + str(bno) + ' name=breakpt line=' + str(row) + ' file=' + file)
-            if self.protocol.isconnected():
-                msgid = self.send_command('breakpoint_set', \
-                                                                    '-t line -f ' + self.breakpt.getfile(bno) + ' -n ' + str(self.breakpt.getline(bno)), \
-                                                                    self.breakpt.getexp(bno))
-                self.bptsetlst[msgid] = bno
-                self.recv()
-
-    def watch_input(self, mode, arg = ''):
-        self.ui.windows['watch'].input(mode, arg)
-
-    def property_get(self, name = ''):
-        if name == '':
-            name = vim.eval('expand("<cword>")')
-        self.ui.windows['watch'].write('--> property_get: '+name)
-        self.command('property_get', '-n '+name)
-        
-    def watch_execute(self):
-        """ execute command in watch window """
-        (cmd, expr) = self.ui.windows['watch'].get_command()
-        if cmd == 'exec':
-            self.command('exec', '', expr)
-            print(cmd, '--', expr)
-        elif cmd == 'eval':
-            self.command('eval', '', expr)
-            print(cmd, '--', expr)
-        elif cmd == 'property_get':
-            self.command('property_get', '-d %d -n %s' % (self.curstack,    expr))
-            print(cmd, '-n ', expr)
-        elif cmd == 'context_get':
-            self.command('context_get', ('-d %d' % self.curstack))
-            print(cmd)
-        else:
-            print("no commands", cmd, expr)
-
-    def update(self):
-        self.command('status')
-        if self.status == 'break':
-            self.command('stack_get')
-        elif self.status == 'stopping':
-            print('Program has finished running. (exiting)')
-            vim.command(':!')
-            self.quit()
-        elif self.status == 'starting':
-            print('Execution hasn\'t started yet...')
-        elif self.status == 'running':
-            print('Code is running right now...')
-        elif self.status == 'stopped':
-            print('We\'ve been disconnected! (exiting)')
-            vim.command(':!')
-            self.quit()
-
-    #
-    #
-    #################################################################################################################
-
diff --git a/.vim/dirs/backups/debugger.vim~ b/.vim/dirs/backups/debugger.vim~
deleted file mode 100644
index 738f1cd..0000000
--- a/.vim/dirs/backups/debugger.vim~
+++ /dev/null
@@ -1,37 +0,0 @@
-" DBGp client: a remote debugger interface to the DBGp protocol
-"
-" Script Info and Documentation  {{{
-"=============================================================================
-"    Copyright: Copyright (C) 2010 Jared Forsyth
-"      License:	The MIT License
-
-" Do not source this script when python is not compiled in.
-if !has("python")
-    finish
-endif
-
-" set this to 0 to enable the automatic mappings
-" any other value will disable the mappings
-let g:vim_debug_disable_mappings = 0
-
-python << EOF
-import vim
-try:
-    from vim_debug.commands import debugger_cmd
-    vim.command('let has_debug = 1')
-except ImportError, e:
-    vim.command('let has_debug = 0')
-    print 'python module vim_debug not found...'
-EOF
-
-if !has_debug
-    finish
-endif
-
-command! -nargs=* Dbg python debugger_cmd('<args>')
-
-" Debugger highlighting
-hi DbgCurrent term=reverse ctermfg=White ctermbg=Red gui=reverse
-hi DbgBreakPt term=reverse ctermfg=White ctermbg=Green gui=reverse
-sign define current text=->  texthl=DbgCurrent linehl=DbgCurrent
-sign define breakpt text=B>  texthl=DbgBreakPt linehl=DbgBreakPt
diff --git a/.vim/dirs/backups/ipython_notebook_config.py~ b/.vim/dirs/backups/ipython_notebook_config.py~
deleted file mode 100644
index ca4fd0b..0000000
--- a/.vim/dirs/backups/ipython_notebook_config.py~
+++ /dev/null
@@ -1,662 +0,0 @@
-# Configuration file for ipython-notebook.
-
-c = get_config()
-
-#------------------------------------------------------------------------------
-# NotebookApp configuration
-#------------------------------------------------------------------------------
-
-# NotebookApp will inherit config from: BaseIPythonApplication, Application
-
-# The url for MathJax.js.
-# c.NotebookApp.mathjax_url = ''
-
-# Supply extra arguments that will be passed to Jinja environment.
-# c.NotebookApp.jinja_environment_options = {}
-
-# The IP address the notebook server will listen on.
-# c.NotebookApp.ip = 'localhost'
-
-# DEPRECATED use base_url
-# c.NotebookApp.base_project_url = '/'
-
-# Create a massive crash report when IPython encounters what may be an internal
-# error.  The default is to append a short message to the usual traceback
-# c.NotebookApp.verbose_crash = False
-
-# The random bytes used to secure cookies. By default this is a new random
-# number every time you start the Notebook. Set it to a value in a config file
-# to enable logins to persist across server sessions.
-# 
-# Note: Cookie secrets should be kept private, do not share config files with
-# cookie_secret stored in plaintext (you can read the value from a file).
-# c.NotebookApp.cookie_secret = ''
-
-# The number of additional ports to try if the specified port is not available.
-# c.NotebookApp.port_retries = 50
-
-# Whether to open in a browser after starting. The specific browser used is
-# platform dependent and determined by the python standard library `webbrowser`
-# module, unless it is overridden using the --browser (NotebookApp.browser)
-# configuration option.
-# c.NotebookApp.open_browser = True
-
-# The notebook manager class to use.
-# c.NotebookApp.notebook_manager_class = 'IPython.html.services.notebooks.filenbmanager.FileNotebookManager'
-
-# The date format used by logging formatters for %(asctime)s
-# c.NotebookApp.log_datefmt = '%Y-%m-%d %H:%M:%S'
-
-# The port the notebook server will listen on.
-# c.NotebookApp.port = 8888
-
-# Whether to overwrite existing config files when copying
-# c.NotebookApp.overwrite = False
-
-# Set the Access-Control-Allow-Origin header
-# 
-# Use '*' to allow any origin to access your server.
-# 
-# Takes precedence over allow_origin_pat.
-# c.NotebookApp.allow_origin = ''
-
-# Whether to enable MathJax for typesetting math/TeX
-# 
-# MathJax is the javascript library IPython uses to render math/LaTeX. It is
-# very large, so you may want to disable it if you have a slow internet
-# connection, or for offline use of the notebook.
-# 
-# When disabled, equations etc. will appear as their untransformed TeX source.
-# c.NotebookApp.enable_mathjax = True
-
-# Use a regular expression for the Access-Control-Allow-Origin header
-# 
-# Requests from an origin matching the expression will get replies with:
-# 
-#     Access-Control-Allow-Origin: origin
-# 
-# where `origin` is the origin of the request.
-# 
-# Ignored if allow_origin is set.
-# c.NotebookApp.allow_origin_pat = ''
-
-# The full path to an SSL/TLS certificate file.
-# c.NotebookApp.certfile = u''
-
-# The base URL for the notebook server.
-# 
-# Leading and trailing slashes can be omitted, and will automatically be added.
-# c.NotebookApp.base_url = '/'
-
-# The directory to use for notebooks and kernels.
-# c.NotebookApp.notebook_dir = u'/Users/elsdrm'
-
-# 
-# c.NotebookApp.file_to_run = ''
-
-# The IPython profile to use.
-# c.NotebookApp.profile = u'default'
-
-# paths for Javascript extensions. By default, this is just
-# IPYTHONDIR/nbextensions
-# c.NotebookApp.nbextensions_path = []
-
-# The Logging format template
-# c.NotebookApp.log_format = '[%(name)s]%(highlevel)s %(message)s'
-
-# The name of the IPython directory. This directory is used for logging
-# configuration (through profiles), history storage, etc. The default is usually
-# $HOME/.ipython. This options can also be specified through the environment
-# variable IPYTHONDIR.
-# c.NotebookApp.ipython_dir = u''
-
-# Set the log level by value or name.
-# c.NotebookApp.log_level = 30
-
-# Hashed password to use for web authentication.
-# 
-# To generate, type in a python/IPython shell:
-# 
-#   from IPython.lib import passwd; passwd()
-# 
-# The string should be of the form type:salt:hashed-password.
-# c.NotebookApp.password = u''
-
-# Set the Access-Control-Allow-Credentials: true header
-# c.NotebookApp.allow_credentials = False
-
-# Path to an extra config file to load.
-# 
-# If specified, load this config file in addition to any other IPython config.
-# c.NotebookApp.extra_config_file = u''
-
-# Extra paths to search for serving static files.
-# 
-# This allows adding javascript/css to be available from the notebook server
-# machine, or overriding individual files in the IPython
-# c.NotebookApp.extra_static_paths = []
-
-# Whether to trust or not X-Scheme/X-Forwarded-Proto and X-Real-Ip/X-Forwarded-
-# For headerssent by the upstream reverse proxy. Necessary if the proxy handles
-# SSL
-# c.NotebookApp.trust_xheaders = False
-
-# Whether to install the default config files into the profile dir. If a new
-# profile is being created, and IPython contains config files for that profile,
-# then they will be staged into the new directory.  Otherwise, default config
-# files will be automatically generated.
-# c.NotebookApp.copy_config_files = False
-
-# The full path to a private key file for usage with SSL/TLS.
-# c.NotebookApp.keyfile = u''
-
-# Supply overrides for the tornado.web.Application that the IPython notebook
-# uses.
-# c.NotebookApp.webapp_settings = {}
-
-# Specify what command to use to invoke a web browser when opening the notebook.
-# If not specified, the default browser will be determined by the `webbrowser`
-# standard library module, which allows setting of the BROWSER environment
-# variable to override it.
-# c.NotebookApp.browser = u''
-
-#------------------------------------------------------------------------------
-# IPKernelApp configuration
-#------------------------------------------------------------------------------
-
-# IPython: an enhanced interactive Python shell.
-
-# IPKernelApp will inherit config from: BaseIPythonApplication, Application,
-# InteractiveShellApp
-
-# Run the file referenced by the PYTHONSTARTUP environment variable at IPython
-# startup.
-# c.IPKernelApp.exec_PYTHONSTARTUP = True
-
-# The importstring for the DisplayHook factory
-# c.IPKernelApp.displayhook_class = 'IPython.kernel.zmq.displayhook.ZMQDisplayHook'
-
-# Set the IP or interface on which the kernel will listen.
-# c.IPKernelApp.ip = u''
-
-# Pre-load matplotlib and numpy for interactive use, selecting a particular
-# matplotlib backend and loop integration.
-# c.IPKernelApp.pylab = None
-
-# Create a massive crash report when IPython encounters what may be an internal
-# error.  The default is to append a short message to the usual traceback
-# c.IPKernelApp.verbose_crash = False
-
-# The Kernel subclass to be used.
-# 
-# This should allow easy re-use of the IPKernelApp entry point to configure and
-# launch kernels other than IPython's own.
-# c.IPKernelApp.kernel_class = 'IPython.kernel.zmq.ipkernel.Kernel'
-
-# Run the module as a script.
-# c.IPKernelApp.module_to_run = ''
-
-# The date format used by logging formatters for %(asctime)s
-# c.IPKernelApp.log_datefmt = '%Y-%m-%d %H:%M:%S'
-
-# set the shell (ROUTER) port [default: random]
-# c.IPKernelApp.shell_port = 0
-
-# set the control (ROUTER) port [default: random]
-# c.IPKernelApp.control_port = 0
-
-# Whether to overwrite existing config files when copying
-# c.IPKernelApp.overwrite = False
-
-# Execute the given command string.
-# c.IPKernelApp.code_to_run = ''
-
-# set the stdin (ROUTER) port [default: random]
-# c.IPKernelApp.stdin_port = 0
-
-# Set the log level by value or name.
-# c.IPKernelApp.log_level = 30
-
-# lines of code to run at IPython startup.
-# c.IPKernelApp.exec_lines = []
-
-# Path to an extra config file to load.
-# 
-# If specified, load this config file in addition to any other IPython config.
-# c.IPKernelApp.extra_config_file = u''
-
-# The importstring for the OutStream factory
-# c.IPKernelApp.outstream_class = 'IPython.kernel.zmq.iostream.OutStream'
-
-# Whether to create profile dir if it doesn't exist
-# c.IPKernelApp.auto_create = False
-
-# set the heartbeat port [default: random]
-# c.IPKernelApp.hb_port = 0
-
-# 
-# c.IPKernelApp.transport = 'tcp'
-
-# redirect stdout to the null device
-# c.IPKernelApp.no_stdout = False
-
-# Should variables loaded at startup (by startup files, exec_lines, etc.) be
-# hidden from tools like %who?
-# c.IPKernelApp.hide_initial_ns = True
-
-# dotted module name of an IPython extension to load.
-# c.IPKernelApp.extra_extension = ''
-
-# A file to be run
-# c.IPKernelApp.file_to_run = ''
-
-# The IPython profile to use.
-# c.IPKernelApp.profile = u'default'
-
-# 
-# c.IPKernelApp.parent_appname = u''
-
-# kill this process if its parent dies.  On Windows, the argument specifies the
-# HANDLE of the parent process, otherwise it is simply boolean.
-# c.IPKernelApp.parent_handle = 0
-
-# JSON file in which to store connection info [default: kernel-<pid>.json]
-# 
-# This file will contain the IP, ports, and authentication key needed to connect
-# clients to this kernel. By default, this file will be created in the security
-# dir of the current profile, but can be specified by absolute path.
-# c.IPKernelApp.connection_file = ''
-
-# If true, IPython will populate the user namespace with numpy, pylab, etc. and
-# an ``import *`` is done from numpy and pylab, when using pylab mode.
-# 
-# When False, pylab mode should not import any names into the user namespace.
-# c.IPKernelApp.pylab_import_all = True
-
-# The name of the IPython directory. This directory is used for logging
-# configuration (through profiles), history storage, etc. The default is usually
-# $HOME/.ipython. This options can also be specified through the environment
-# variable IPYTHONDIR.
-# c.IPKernelApp.ipython_dir = u''
-
-# Configure matplotlib for interactive use with the default matplotlib backend.
-# c.IPKernelApp.matplotlib = None
-
-# ONLY USED ON WINDOWS Interrupt this process when the parent is signaled.
-# c.IPKernelApp.interrupt = 0
-
-# Whether to install the default config files into the profile dir. If a new
-# profile is being created, and IPython contains config files for that profile,
-# then they will be staged into the new directory.  Otherwise, default config
-# files will be automatically generated.
-# c.IPKernelApp.copy_config_files = False
-
-# List of files to run at IPython startup.
-# c.IPKernelApp.exec_files = []
-
-# Enable GUI event loop integration with any of ('glut', 'gtk', 'gtk3', 'none',
-# 'osx', 'pyglet', 'qt', 'qt4', 'tk', 'wx').
-# c.IPKernelApp.gui = None
-
-# A list of dotted module names of IPython extensions to load.
-# c.IPKernelApp.extensions = []
-
-# redirect stderr to the null device
-# c.IPKernelApp.no_stderr = False
-
-# The Logging format template
-# c.IPKernelApp.log_format = '[%(name)s]%(highlevel)s %(message)s'
-
-# set the iopub (PUB) port [default: random]
-# c.IPKernelApp.iopub_port = 0
-
-#------------------------------------------------------------------------------
-# ZMQInteractiveShell configuration
-#------------------------------------------------------------------------------
-
-# A subclass of InteractiveShell for ZMQ.
-
-# ZMQInteractiveShell will inherit config from: InteractiveShell
-
-# Use colors for displaying information about objects. Because this information
-# is passed through a pager (like 'less'), and some pagers get confused with
-# color codes, this capability can be turned off.
-# c.ZMQInteractiveShell.color_info = True
-
-# A list of ast.NodeTransformer subclass instances, which will be applied to
-# user input before code is run.
-# c.ZMQInteractiveShell.ast_transformers = []
-
-# 
-# c.ZMQInteractiveShell.history_length = 10000
-
-# Don't call post-execute functions that have failed in the past.
-# c.ZMQInteractiveShell.disable_failing_post_execute = False
-
-# Show rewritten input, e.g. for autocall.
-# c.ZMQInteractiveShell.show_rewritten_input = True
-
-# Set the color scheme (NoColor, Linux, or LightBG).
-# c.ZMQInteractiveShell.colors = 'LightBG'
-
-# 
-# c.ZMQInteractiveShell.separate_in = '\n'
-
-# Deprecated, use PromptManager.in2_template
-# c.ZMQInteractiveShell.prompt_in2 = '   .\\D.: '
-
-# 
-# c.ZMQInteractiveShell.separate_out = ''
-
-# Deprecated, use PromptManager.in_template
-# c.ZMQInteractiveShell.prompt_in1 = 'In [\\#]: '
-
-# Enable deep (recursive) reloading by default. IPython can use the deep_reload
-# module which reloads changes in modules recursively (it replaces the reload()
-# function, so you don't need to change anything to use it). deep_reload()
-# forces a full reload of modules whose code may have changed, which the default
-# reload() function does not.  When deep_reload is off, IPython will use the
-# normal reload(), but deep_reload will still be available as dreload().
-# c.ZMQInteractiveShell.deep_reload = False
-
-# Make IPython automatically call any callable object even if you didn't type
-# explicit parentheses. For example, 'str 43' becomes 'str(43)' automatically.
-# The value can be '0' to disable the feature, '1' for 'smart' autocall, where
-# it is not applied if there are no more arguments on the line, and '2' for
-# 'full' autocall, where all callable objects are automatically called (even if
-# no arguments are present).
-# c.ZMQInteractiveShell.autocall = 0
-
-# 
-# c.ZMQInteractiveShell.separate_out2 = ''
-
-# Deprecated, use PromptManager.justify
-# c.ZMQInteractiveShell.prompts_pad_left = True
-
-# 
-# c.ZMQInteractiveShell.readline_parse_and_bind = ['tab: complete', '"\\C-l": clear-screen', 'set show-all-if-ambiguous on', '"\\C-o": tab-insert', '"\\C-r": reverse-search-history', '"\\C-s": forward-search-history', '"\\C-p": history-search-backward', '"\\C-n": history-search-forward', '"\\e[A": history-search-backward', '"\\e[B": history-search-forward', '"\\C-k": kill-line', '"\\C-u": unix-line-discard']
-
-# Enable magic commands to be called without the leading %.
-# c.ZMQInteractiveShell.automagic = True
-
-# 
-# c.ZMQInteractiveShell.debug = False
-
-# 
-# c.ZMQInteractiveShell.object_info_string_level = 0
-
-# 
-# c.ZMQInteractiveShell.ipython_dir = ''
-
-# 
-# c.ZMQInteractiveShell.readline_remove_delims = '-/~'
-
-# Start logging to the default log file.
-# c.ZMQInteractiveShell.logstart = False
-
-# The name of the logfile to use.
-# c.ZMQInteractiveShell.logfile = ''
-
-# 
-# c.ZMQInteractiveShell.wildcards_case_sensitive = True
-
-# Save multi-line entries as one entry in readline history
-# c.ZMQInteractiveShell.multiline_history = True
-
-# Start logging to the given file in append mode.
-# c.ZMQInteractiveShell.logappend = ''
-
-# 
-# c.ZMQInteractiveShell.xmode = 'Context'
-
-# 
-# c.ZMQInteractiveShell.quiet = False
-
-# Deprecated, use PromptManager.out_template
-# c.ZMQInteractiveShell.prompt_out = 'Out[\\#]: '
-
-# Set the size of the output cache.  The default is 1000, you can change it
-# permanently in your config file.  Setting it to 0 completely disables the
-# caching system, and the minimum value accepted is 20 (if you provide a value
-# less than 20, it is reset to 0 and a warning is issued).  This limit is
-# defined because otherwise you'll spend more time re-flushing a too small cache
-# than working
-# c.ZMQInteractiveShell.cache_size = 1000
-
-# 'all', 'last', 'last_expr' or 'none', specifying which nodes should be run
-# interactively (displaying output from expressions).
-# c.ZMQInteractiveShell.ast_node_interactivity = 'last_expr'
-
-# Automatically call the pdb debugger after every exception.
-# c.ZMQInteractiveShell.pdb = False
-
-#------------------------------------------------------------------------------
-# KernelManager configuration
-#------------------------------------------------------------------------------
-
-# Manages a single kernel in a subprocess on this host.
-# 
-# This version starts kernels with Popen.
-
-# KernelManager will inherit config from: ConnectionFileMixin
-
-# The Popen Command to launch the kernel. Override this if you have a custom
-# kernel. If kernel_cmd is specified in a configuration file, IPython does not
-# pass any arguments to the kernel, because it cannot make any assumptions about
-# the  arguments that the kernel understands. In particular, this means that the
-# kernel does not receive the option --debug if it given on the IPython command
-# line.
-# c.KernelManager.kernel_cmd = []
-
-# Set the kernel's IP address [default localhost]. If the IP address is
-# something other than localhost, then Consoles on other machines will be able
-# to connect to the Kernel, so be careful!
-# c.KernelManager.ip = u''
-
-# 
-# c.KernelManager.transport = 'tcp'
-
-# Should we autorestart the kernel if it dies.
-# c.KernelManager.autorestart = False
-
-#------------------------------------------------------------------------------
-# ProfileDir configuration
-#------------------------------------------------------------------------------
-
-# An object to manage the profile directory and its resources.
-# 
-# The profile directory is used by all IPython applications, to manage
-# configuration, logging and security.
-# 
-# This object knows how to find, create and manage these directories. This
-# should be used by any code that wants to handle profiles.
-
-# Set the profile location directly. This overrides the logic used by the
-# `profile` option.
-# c.ProfileDir.location = u''
-
-#------------------------------------------------------------------------------
-# Session configuration
-#------------------------------------------------------------------------------
-
-# Object for handling serialization and sending of messages.
-# 
-# The Session object handles building messages and sending them with ZMQ sockets
-# or ZMQStream objects.  Objects can communicate with each other over the
-# network via Session objects, and only need to work with the dict-based IPython
-# message spec. The Session will handle serialization/deserialization, security,
-# and metadata.
-# 
-# Sessions support configurable serialization via packer/unpacker traits, and
-# signing with HMAC digests via the key/keyfile traits.
-# 
-# Parameters ----------
-# 
-# debug : bool
-#     whether to trigger extra debugging statements
-# packer/unpacker : str : 'json', 'pickle' or import_string
-#     importstrings for methods to serialize message parts.  If just
-#     'json' or 'pickle', predefined JSON and pickle packers will be used.
-#     Otherwise, the entire importstring must be used.
-# 
-#     The functions must accept at least valid JSON input, and output *bytes*.
-# 
-#     For example, to use msgpack:
-#     packer = 'msgpack.packb', unpacker='msgpack.unpackb'
-# pack/unpack : callables
-#     You can also set the pack/unpack callables for serialization directly.
-# session : bytes
-#     the ID of this Session object.  The default is to generate a new UUID.
-# username : unicode
-#     username added to message headers.  The default is to ask the OS.
-# key : bytes
-#     The key used to initialize an HMAC signature.  If unset, messages
-#     will not be signed or checked.
-# keyfile : filepath
-#     The file containing a key.  If this is set, `key` will be initialized
-#     to the contents of the file.
-
-# Username for the Session. Default is your system username.
-# c.Session.username = u'elsdrm'
-
-# The name of the unpacker for unserializing messages. Only used with custom
-# functions for `packer`.
-# c.Session.unpacker = 'json'
-
-# Threshold (in bytes) beyond which a buffer should be sent without copying.
-# c.Session.copy_threshold = 65536
-
-# The name of the packer for serializing messages. Should be one of 'json',
-# 'pickle', or an import name for a custom callable serializer.
-# c.Session.packer = 'json'
-
-# The maximum number of digests to remember.
-# 
-# The digest history will be culled when it exceeds this value.
-# c.Session.digest_history_size = 65536
-
-# The UUID identifying this session.
-# c.Session.session = u''
-
-# The digest scheme used to construct the message signatures. Must have the form
-# 'hmac-HASH'.
-# c.Session.signature_scheme = 'hmac-sha256'
-
-# execution key, for extra authentication.
-# c.Session.key = ''
-
-# Debug output in the Session
-# c.Session.debug = False
-
-# The maximum number of items for a container to be introspected for custom
-# serialization. Containers larger than this are pickled outright.
-# c.Session.item_threshold = 64
-
-# path to file containing execution key.
-# c.Session.keyfile = ''
-
-# Threshold (in bytes) beyond which an object's buffer should be extracted to
-# avoid pickling.
-# c.Session.buffer_threshold = 1024
-
-# Metadata dictionary, which serves as the default top-level metadata dict for
-# each message.
-# c.Session.metadata = {}
-
-#------------------------------------------------------------------------------
-# InlineBackend configuration
-#------------------------------------------------------------------------------
-
-# An object to store configuration of the inline backend.
-
-# The figure format to enable (deprecated use `figure_formats` instead)
-# c.InlineBackend.figure_format = u''
-
-# A set of figure formats to enable: 'png',  'retina', 'jpeg', 'svg', 'pdf'.
-# c.InlineBackend.figure_formats = set(['png'])
-
-# Extra kwargs to be passed to fig.canvas.print_figure.
-# 
-# Logical examples include: bbox_inches, quality (for jpeg figures), etc.
-# c.InlineBackend.print_figure_kwargs = {'bbox_inches': 'tight'}
-
-# Close all figures at the end of each cell.
-# 
-# When True, ensures that each cell starts with no active figures, but it also
-# means that one must keep track of references in order to edit or redraw
-# figures in subsequent cells. This mode is ideal for the notebook, where
-# residual plots from other cells might be surprising.
-# 
-# When False, one must call figure() to create new figures. This means that
-# gcf() and getfigs() can reference figures created in other cells, and the
-# active figure can continue to be edited with pylab/pyplot methods that
-# reference the current active figure. This mode facilitates iterative editing
-# of figures, and behaves most consistently with other matplotlib backends, but
-# figure barriers between cells must be explicit.
-# c.InlineBackend.close_figures = True
-
-# Subset of matplotlib rcParams that should be different for the inline backend.
-# c.InlineBackend.rc = {'font.size': 10, 'figure.figsize': (6.0, 4.0), 'figure.facecolor': (1, 1, 1, 0), 'savefig.dpi': 72, 'figure.subplot.bottom': 0.125, 'figure.edgecolor': (1, 1, 1, 0)}
-
-#------------------------------------------------------------------------------
-# MappingKernelManager configuration
-#------------------------------------------------------------------------------
-
-# A KernelManager that handles notebook mapping and HTTP error handling
-
-# MappingKernelManager will inherit config from: MultiKernelManager
-
-# 
-# c.MappingKernelManager.root_dir = u'/Users/elsdrm'
-
-# The kernel manager class.  This is configurable to allow subclassing of the
-# KernelManager for customized behavior.
-# c.MappingKernelManager.kernel_manager_class = 'IPython.kernel.ioloop.IOLoopKernelManager'
-
-#------------------------------------------------------------------------------
-# NotebookManager configuration
-#------------------------------------------------------------------------------
-
-# Glob patterns to hide in file and directory listings.
-# c.NotebookManager.hide_globs = [u'__pycache__']
-
-#------------------------------------------------------------------------------
-# FileNotebookManager configuration
-#------------------------------------------------------------------------------
-
-# FileNotebookManager will inherit config from: NotebookManager
-
-# The directory name in which to keep notebook checkpoints
-# 
-# This is a path relative to the notebook's own directory.
-# 
-# By default, it is .ipynb_checkpoints
-# c.FileNotebookManager.checkpoint_dir = '.ipynb_checkpoints'
-
-# Glob patterns to hide in file and directory listings.
-# c.FileNotebookManager.hide_globs = [u'__pycache__']
-
-# Automatically create a Python script when saving the notebook.
-# 
-# For easier use of import, %run and %load across notebooks, a <notebook-
-# name>.py script will be created next to any <notebook-name>.ipynb on each
-# save.  This can also be set with the short `--script` flag.
-# c.FileNotebookManager.save_script = False
-
-# 
-c.FileNotebookManager.notebook_dir = u'/Users/elsdrm/Dropbox/Chen Hsueh-Min/iPyNB'
-
-#------------------------------------------------------------------------------
-# NotebookNotary configuration
-#------------------------------------------------------------------------------
-
-# A class for computing and verifying notebook signatures.
-
-# The secret key with which notebooks are signed.
-# c.NotebookNotary.secret = ''
-
-# The file where the secret key is stored.
-# c.NotebookNotary.secret_file = u''
-
-# The hashing algorithm used to sign notebooks.
-# c.NotebookNotary.algorithm = 'sha256'
diff --git a/.vim/dirs/backups/main.m~ b/.vim/dirs/backups/main.m~
deleted file mode 100755
index 1e3e708..0000000
--- a/.vim/dirs/backups/main.m~
+++ /dev/null
@@ -1,140 +0,0 @@
-function [auc, map, prec10, rprec] = main_ENTP_delta(SVM_flag, numFile, meth, screen_encode_mode, screen_weight_mode, screen_lambda, screen_mode, par)
-% profile on;
-cp = pwd;
-%% Set of path arguments
-% feature dimension
-dim_feat = 36;
-lambda = 1/sqrt(dim_feat);
-if ~exist('screen_lambda', 'var');
-    screen_lambda = 8 * lambda;
-end
-% normalization method before SVM
-if ~exist('meth', 'var');
-    meth = [1 2];
-end
-%   1: sum2one
-%   2: square root
-%   3: cube root
-%   4: tf-idf
-%   5: z-score
-
-pool = 'mean';
-% 'sum'
-% 'max'
-% 'mean'
-% 'mean_std'
-
-if screen_lambda > 1
-    screen_lambda = 1;
-end
-if ~exist('screen_mode', 'var');
-    screen_mode = 'ST3';
-end
-if ~exist('screen_encode_mode', 'var');
-    screen_encode_mode = 4; % 1: original, solve by exact solution of screening
-                            % 2: intersection (vote)
-                            % 3: union
-                            % 4: vote and choose first 'par' high value
-                            % 5: weighted mode
-end
-% naming generation later by string conversion for screen_encode_mode                        
-sc_mode = screen_name_convert(screen_encode_mode)
-
-if isunix
-    rootpath = '~/Z:/';
-else
-    rootpath = 'Z:/';
-end
-% parameters, the number of atoms is decided by numFile x numSeg
-if ~exist('numFile', 'var');
-    numFile = 96;
-end
-numSeg  = 1;
-if ~exist('par', 'var');
-    par = ceil(0.1 * numFile * numSeg);
-else
-    par = ceil(par * numFile * numSeg);
-end
-if ~exist('screen_weight_mode', 'var')
-    screen_weight_mode = 1;
-end
-
-% subdir of output files
-if screen_encode_mode == 0
-    subdir = strcat('delta_D_', num2str(numFile), '_', num2str(numSeg), strcat('/screen_', screen_mode, '_', sc_mode, '_', num2str(par), '/'));
-elseif screen_encode_mode == 5    
-    subdir = strcat('delta_D_', num2str(numFile), '_', num2str(numSeg), strcat('/screen_', screen_mode, '_', sc_mode, '_', num2str(par), '_func_', num2str(screen_weight_mode), '_lambdas_', num2str(screen_lambda), '/'));
-elseif screen_encode_mode ~=2 && screen_encode_mode ~= 4
-    subdir = strcat('delta_D_', num2str(numFile), '_', num2str(numSeg), strcat('/screen_', screen_mode, '_', sc_mode, '_lambdas_', num2str(screen_lambda), '/'));
-else
-    subdir = strcat('delta_D_', num2str(numFile), '_', num2str(numSeg), strcat('/screen_', screen_mode, '_', sc_mode, '_', num2str(par), '_lambdas_', num2str(screen_lambda), '/'));
-end
-
-subdir = [subdir(1:end-1) '_screen_only/'];
-% package path
-SPAMS_path = '../ODL/PC/spams-matlab';
-addpath(genpath('../'));
-
-% feature path
-path_feat_pitch_cal10k = 'Z:/cal10k/EchoNest/segment_pitch/';
-path_feat_timbre_cal10k = 'Z:/cal10k/EchoNest/segment_timbre/';
-path_feat_pitch_MSD = 'Z:/MillionSongDataset/segment_pitch/';
-path_feat_timbre_MSD = 'Z:/MillionSongDataset/segment_timbre/';
-
-% pre-processing path
-path_pre_proc_pitch_cal10k = 'Z:/cal10k/EchoNest/pitch_delta_normalized/';
-path_pre_proc_timbre_cal10k = 'Z:/cal10k/EchoNest/timbre_delta_normalized/';
-path_pre_proc_pitch_MSD = 'Z:/MillionSongDataset/pitch_delta_normalized/';
-path_pre_proc_timbre_MSD = 'Z:/MillionSongDataset/timbre_delta_normalized/';
-
-% dictionary path
-path_pitch_D = strcat('Z:/ICASSP2014_journal_output/result/dictionary/pitch/pitch_delta_D_', num2str(numFile), '_', num2str(numSeg), '_together');
-path_timbre_D = strcat('Z:/ICASSP2014_journal_output/result/dictionary/timbre/timbre_delta_D_', num2str(numFile), '_', num2str(numSeg), '_together');
-
-% codeword path
-path_codeword_pitch  = strcat('Z:/ICASSP2014_journal_output/result/codeword/pitch_/', subdir);
-path_codeword_timbre = strcat('Z:/ICASSP2014_journal_output/result/codeword/timbre/', subdir);
-path_post_proc = strcat('Z:/ICASSP2014_journal_output/result/post_proc/', pool, '/', subdir);
-
-% classification and result path
-path_SVM_res = strcat('Z:/ICASSP2014_journal_output/result/classification/', pool, '/', subdir);
-name_norm = norm_name_convert(meth);
-prefix_res = strcat('auc_opti_', name_norm ,'norm_');
-path_time = strcat('Z:/ICASSP2014_journal_output/result/time_report/', pool, '/', subdir);
-
-%% Pre-processing
-% normalization is required before screening
-% pre_process_main(path_feat_pitch_cal10k, path_pre_proc_pitch_cal10k);
-% pre_process_main(path_feat_timbre_cal10k, path_pre_proc_timbre_cal10k);
-%% Dictionary training
-% normalization is required before screening, and it is done in
-% train_dictionary
-% pitch_D = train_dictionary(path_feat_pitch_MSD, numFile, numSeg);
-% timbre_D = train_dictionary(path_feat_timbre_MSD, numFile, numSeg);
-% save(path_D, 'pitch_D', 'timbre_D');
-
-if ~SVM_flag
-%% L1/L0-solver          
-% cp = pwd;
-% feat 1
-encode(SPAMS_path, path_timbre_D, path_pre_proc_timbre_cal10k, path_codeword_timbre, lambda, screen_lambda, screen_mode, screen_encode_mode, par, screen_weight_mode);
-% feat 2
-encode(SPAMS_path, path_pitch_D, path_pre_proc_pitch_cal10k, path_codeword_pitch, lambda, screen_lambda, screen_mode, screen_encode_mode, par, screen_weight_mode);
-% cd(pwd);
-
-%% Post-processing
-path_feats{1} = path_codeword_pitch;
-path_feats{2} = path_codeword_timbre;
-
-post_proc_main(pool, path_feats, path_post_proc);
-
-end
-%% Classification
-[auc, map, prec10, rprec] = classification_choose_normalization_echonest_optimize_map_main(path_post_proc, path_SVM_res, prefix_res, path_time, meth);
-
-% profile off
-cd(cp);
-% profsave(profile('info'), path_time);
-%% send mail
-% [receiver, title, contents attachment] = ReadMail('./mail_main.txt');
-% MailReport_NAS(receiver, title, contents, attachment);
diff --git a/.vim/dirs/backups/new_debugger.py~ b/.vim/dirs/backups/new_debugger.py~
deleted file mode 100644
index c379fdd..0000000
--- a/.vim/dirs/backups/new_debugger.py~
+++ /dev/null
@@ -1,310 +0,0 @@
-import subprocess
-import textwrap
-import socket
-import vim
-import sys
-import os
-import imp
-
-from ui import DebugUI
-import collections
-
-def vim_init():
-    '''put DBG specific keybindings here -- e.g F1, whatever'''
-    vim.command('ca dbg Dbg')
-
-def vim_quit():
-    '''remove DBG specific keybindings'''
-    vim.command('cuna dbg')
-
-def get_vim(name, default, fn=str):
-    if vim.eval('exists("%s")' % name) == '1':
-        return vim.eval(name)
-    return default
-
-import types
-class Registrar:
-    def __init__(self, args=(), kwds=(), named=True):
-        if named:
-            self.reg = {}
-        else:
-            self.reg = []
-        self.args = args
-        self.kwds = kwds
-        self.named = named
-
-    def register(self, *args, **kwds):
-        def meta(func):
-            self.add(func, args, kwds)
-
-        return meta
-
-    def add(self, func, args, kwds):
-        if self.named:
-            self.reg[args[0]] = {'function':func, 'args':args[1:], 'kwds':kwds}
-        else:
-            self.reg.append({'function':func, 'args':args, 'kwds':kwds})
-        return func
-
-    def bind(self, inst):
-        res = {}
-        for key, value in self.reg.items():
-            value = value.copy()
-            res[key] = value
-            if isinstance(value['function'], collections.Callable):
-                value['function'] = types.MethodType(value['function'], inst, inst.__class__)
-        return res
-
-    __call__ = register
-
-class CmdRegistrar(Registrar):
-    def add(self, func, args, kwds):
-        lead = kwds.get('lead', '')
-
-        disabled_mappings = False
-        if vim.eval("exists('g:vim_debug_disable_mappings')") != "0":
-            disabled_mappings = vim.eval("g:vim_debug_disable_mappings") != "0"
-
-        if lead and not disabled_mappings:
-            vim.command('map <Leader>%s :Dbg %s<cr>' % (lead, args[0]))
-        dct = {'function':func, 'options':kwds}
-        for name in args:
-            self.reg[name] = dct
-
-class Debugger:
-    ''' This is the main debugger class... '''
-    options = {'port':9000, 'max_children':32, 'max_data':'1024', 'minbufexpl':0, 'max_depth':1}
-    def __init__(self):
-        self.started = False
-        self.watching = {}
-        self._type = None
-
-    def init_vim(self):
-        self.ui = DebugUI()
-        self.settings = {}
-        for k,v in self.options.items():
-            self.settings[k] = get_vim(k, v, type(v))
-        vim_init()
-
-    def start_url(self, url):
-        if '?' in url:
-            url += '&'
-        else:
-            url += '?'
-        url += 'XDEBUG_SESSION_START=vim_phpdebug'
-        self._type = 'php'
-        # only linux and mac supported atm
-        command = 'xdg-open' if sys.platform.startswith('linux') else 'open'
-        try:
-            subprocess.Popen((command, url), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
-        except OSError:
-            print('failed to start a browser. aborting debug session')
-            return
-        return self.start()
-
-    def start_py(self, fname):
-        if os.name == 'nt':
-            _,PYDBGP,_ = imp.find_module('dbgp')
-            PYDBGP = PYDBGP + '/../EGG-INFO/scripts/pydbgp.py'
-            subprocess.Popen(('python.exe',PYDBGP, '-d', 'localhost:9000', fname), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
-        else:
-            subprocess.Popen(('pydbgp.py', '-d', 'localhost:9000', fname), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
-
-        self._type = 'python'
-        return self.start()
-
-    def start(self):
-        ## self.breaks = BreakPointManager()
-        self.started = True
-        self.bend = dbgp.DBGP(self.settings, self.ui.windows['log'].write, self._type)
-        for key, value in self.handle.bind(self).items():
-            if isinstance(value['function'], collections.Callable):
-                fn = value['function']
-            else:
-                tmp = self
-                for item in value['function'].split('.'):
-                    tmp = getattr(tmp, item)
-                fn = tmp
-            self.bend.addCommandHandler(key, fn)
-        self.bend.addCommandHandler('<stream>', self.ui.windows['output'].add)
-        if not self.bend.connect():
-            print(textwrap.dedent('''\
-                Unable to connect to debug server. Things to check:
-                    - you refreshed the page during the 5 second
-                        period
-                    - you have the xdebug extension installed (apt-get
-                        install php5-xdebug on ubuntu)
-                    - you set the XDEBUG_SESSION_START cookie
-                    - "xdebug.remote_enable = 1" is in php.ini (not
-                        enabled by default)
-                If you have any questions, look at
-                    http://tech.blog.box.net/2007/06/20/how-to-debug-php-with-vim-and-xdebug-on-linux/
-                '''))
-            return False
-        self.ui.startup()
-
-        self.bend.get_packets(1)
-
-        self.bend.command('feature_set', 'n', 'max_children', 'v', self.settings['max_children'])
-        self.bend.command('feature_set', 'n', 'max_data', 'v', self.settings['max_data'])
-        self.bend.command('feature_set', 'n', 'max_depth', 'v', self.settings['max_depth'])
-        self.bend.command('stdout', 'c', '1')
-        self.bend.command('stderr', 'c', '1')
-        for name in ('max_children', 'max_data', 'max_depth'):
-            self.bend.command('feature_set', 'n', name, 'v', self.settings[name], suppress=True)
-
-        self.bend.command('step_into')
-        self.bend.command('context_get')
-        self.bend.command('stack_get')
-        self.bend.command('status')
-
-        self.ui.go_srcview()
-
-    def set_status(self, status):
-        self.status = status
-        # self.party
-
-    ''' setup + register vim commands '''
-    cmd = CmdRegistrar()
-
-    cmd('over', help='step over next function call', lead='o')('step_over')
-    cmd('into', help='step into next function call', lead='i')('step_into')
-    cmd('out', help='step out of current function call', lead='t')('step_out')
-    cmd('run', help='continue execution until a breakpoint is reached or the program ends', lead='r')('run')
-
-    @cmd('eval', help='eval some code', plain=True)
-    def eval_(self, code):
-        self.bend.command('eval', data=code)
-        self.bend.command('context_get')
-
-    @cmd('quit', 'stop', 'exit', help='exit the debugger')
-    def quit(self):
-        self.bend.close()
-        self.ui.close()
-        vim_quit()
-
-    @cmd('up', help='go up the stack', lead='u')
-    def up(self):
-        self.ui.stack_up()
-
-    @cmd('down', help='go down the stack', lead='d')
-    def down(self):
-        self.ui.stack_down()
-
-    @cmd('watch', help='execute watch functions', lead='w')
-    def watch(self):
-        lines = self.ui.windows['watch'].expressions.buffer
-        self.watching = {}
-        for i, line in enumerate(lines[1:]):
-            if not line.strip():continue
-            # self.ui.windows['log'].write('evalling:' + line)
-            tid = self.bend.command('eval', data=line, suppress=True)
-            self.watching[tid] = i+1
-        self.bend.get_packets()
-
-    @cmd('break', help='set a breakpoint', lead='b')
-    def break_(self):
-        (row, col) = vim.current.window.cursor
-        file = os.path.abspath(vim.current.buffer.name)
-        if not os.path.exists(file):
-            print('Not in a file')
-            return
-        bid = self.ui.break_at(file, row)
-        if bid == -1:
-            tid = self.bend.cid + 1
-            self.ui.queue_break(tid, file, row)
-            self.bend.command('breakpoint_set', 't', 'line', 'f', 'file://' + file, 'n', row, data='')
-        else:
-            tid = self.bend.cid + 1
-            self.ui.queue_break_remove(tid, bid)
-            self.bend.command('breakpoint_remove', 'd', bid)
-
-    @cmd('here', help='continue execution until the cursor (tmp breakpoint)', lead='h')
-    def here(self):
-        (row, col) = vim.current.window.cursor
-        file = os.path.abspath(vim.current.buffer.name)
-        if not os.path.exists(file):
-            print('Not in a file')
-            return
-        tid = self.bend.cid + 1
-        # self.ui.queue_break(tid, file, row)
-        self.bend.command('breakpoint_set', 't', 'line', 'r', '1', 'f', 'file://' + file, 'n', row, data='')
-        self.bend.command('run')
-
-    def commands(self):
-        self._commands = self.cmd.bind(self)
-        return self._commands
-
-    handle = Registrar()
-    @handle('stack_get')
-    def _stack_get(self, node):
-        line = self.ui.windows['stack'].refresh(node)
-        self.ui.set_srcview(line[2], line[3])
-
-    @handle('breakpoint_set')
-    def _breakpoint_set(self, node):
-        self.ui.set_break(int(node.getAttribute('transaction_id')), node.getAttribute('id'))
-        self.ui.go_srcview()
-
-    @handle('breakpoint_remove')
-    def _breakpoint_remove(self, node):
-        self.ui.clear_break(int(node.getAttribute('transaction_id')))
-        self.ui.go_srcview()
-
-    def _status(self, node):
-        if node.getAttribute('reason') == 'ok':
-            self.set_status(node.getAttribute('status'))
-
-    def _change(self, node):
-        if node.getAttribute('reason') == 'ok':
-            self.set_status(node.getAttribute('status'))
-            if self.status != 'stopping':
-                try:
-                    self.bend.command('context_get')
-                    self.bend.command('stack_get')
-                except (EOFError, socket.error):
-                    self.disable()
-            else:
-                self.disable()
-
-    def disable(self):
-        print('Execution has ended; connection closed. type :Dbg quit to exit debugger')
-        self.ui.unhighlight()
-        for cmd in list(self._commands.keys()):
-            if cmd not in ('quit', 'close'):
-                self._commands.pop(cmd)
-
-    @handle('<init>')
-    def _init(self, node):
-        file = node.getAttribute('fileuri')
-        self.ui.set_srcview(file, 1)
-
-    handle('status')(_status)
-    handle('stdout')(_status)
-    handle('stderr')(_status)
-    handle('step_into')(_change)
-    handle('step_out')(_change)
-    handle('step_over')(_change)
-    handle('run')(_change)
-
-    def _log(self, node):
-        self.ui.windows['log'].write(node.toprettyxml(indent='   '))
-        pass # print node
-
-    @handle('eval')
-    def _eval(self, node):
-        id = int(node.getAttribute('transaction_id'))
-        if id in self.watching:
-            self.ui.windows['watch'].set_result(self.watching.pop(id), node)
-            self.ui.windows['watch'].expressions.focus()
-
-    handle('property_get')(_log)
-    handle('property_set')(_log)
-
-    @handle('context_get')
-    def _context_get(self, node):
-        self.ui.windows['scope'].refresh(node)
-
-    handle('feature_set')(_log)
-
-# vim: et sw=4 sts=4
diff --git a/.vim/dirs/backups/py.py~ b/.vim/dirs/backups/py.py~
deleted file mode 100644
index efdeb1b..0000000
--- a/.vim/dirs/backups/py.py~
+++ /dev/null
@@ -1,20 +0,0 @@
-def __init__():
-    pass
-
-class DLien:
-    def __init__(self):
-        print( "I'm pig!" )
-
-    def chop(self):
-        print( "It's not me." )
-
-    def call_father(self):
-        for i in range(3):
-            print( "Father! Help me! " )
-
-if __name__ == '__main__':
-    pigLien = DLien()
-    #pigLien.chop()
-    pigLien.call_father()
-    print( 'Hello world.' )
-    k = 5566
diff --git a/.vim/dirs/backups/spams.py~ b/.vim/dirs/backups/spams.py~
deleted file mode 100644
index 61583ef..0000000
--- a/.vim/dirs/backups/spams.py~
+++ /dev/null
@@ -1,2670 +0,0 @@
-"""
-This module makes some functions of the SPAMS library usable
-with numpy and scipy.
-"""
-
-import spams_wrap
-import numpy as np
-import scipy.sparse as ssp
-
-###########  linalg ##############
-
-def sort(X,mode=True):
-    """
-        sort the elements of X using quicksort
-
-    Args:
-        X: double vector of size n
-        mode: false for decreasing order (true by default)
-
-    Returns:
-        Y: double  vector of size n
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    y = np.copy(X)
-    spams_wrap.sort(y,mode)
-    return y
-
-
-def calcAAt(A):
-    """
-        Compute efficiently AAt = A*A', when A is sparse 
-      and has a lot more columns than rows. In some cases, it is
-      up to 20 times faster than the equivalent python expression
-      AAt=A*A';
-
-    Args:
-        A: double sparse m x n matrix   
-
-    Returns:
-        AAt: double m x m matrix 
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    if  A.ndim != 2:
-        raise ValueError("calcAAt: not a matrix")
-    m = A.shape[0]
-    AAt = np.empty((m,m),dtype=A.dtype,order="FORTRAN")
-    spams_wrap.AAt(A,AAt)
-    return AAt
-
-def calcXAt(X,A):
-    """
-        Compute efficiently XAt = X*A', when A is sparse and has a 
-      lot more columns than rows. In some cases, it is up to 20 times 
-      faster than the equivalent python expression;
-
-    Args:
-        X: double m x n matrix
-        A: double sparse p x n matrix   
-
-    Returns:
-        XAt: double m x p matrix 
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    if  A.ndim != 2:
-        raise ValueError("calcAAt: not a matrix")
-    m = X.shape[0]
-    n = A.shape[0]
-    XAt = np.empty((m,n),dtype=A.dtype,order="FORTRAN")
-    spams_wrap.XAt(A,X,XAt)
-    return XAt
-
-def mult(X,Y,transX = False, transY = False):
-    if transX:
-        m = X.shape[1]
-    else:
-        m = X.shape[0]
-    if transY:
-        n = Y.shape[0]
-    else:
-        n = Y.shape[1]
-    XY = np.empty((m,n),dtype=X.dtype,order="FORTRAN")
-    spams_wrap.mult(X,Y,XY,transX,transY,1,0)
-    return XY
-
-def calcXY(X,Y):
-    """
-        Compute Z=XY using the BLAS library used by SPAMS.
-
-    Args:
-        X: double m x n matrix
-        Y: double n x p matrix   
-
-    Returns:
-        Z: double m x p matrix 
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    return mult(X,Y,False,False)
-
-def calcXYt(X,Y):
-    """
-        Compute Z=XY' using the BLAS library used by SPAMS.
-
-    Args:
-        X: double m x n matrix
-        Y: double p x n matrix   
-
-    Returns:
-        Z: double m x p matrix 
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    return mult(X,Y,False,True)
-
-def calcXtY(X,Y):
-    """
-        Compute Z=X'Y using the BLAS library used by SPAMS.
-
-    Args:
-        X: double n x m matrix
-        Y: double n x p matrix   
-
-    Returns:
-        Z: double m x p matrix 
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    return mult(X,Y,True,False)
-
-def bayer(X,offset):
-    """
-        bayer applies a Bayer pattern to an image X.
-          There are four possible offsets.
-
-    Args:
-        X: double m x n matrix   
-        offset: scalar, 0,1,2 or 3   
-
-    Returns:
-        Y: double m x m matrix 
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    y = np.copy(X)
-    spams_wrap.applyBayerPattern(y,offset)
-    return y
-
-def conjGrad(A,b,x0 = None,tol = 1e-10,itermax = None):
-    """
-        Conjugate gradient algorithm, sometimes faster than the 
-       equivalent python function solve. In order to solve Ax=b;
-
-    Args:
-        A: double square n x n matrix. HAS TO BE POSITIVE DEFINITE
-        b: double vector of length n.
-        x0: double vector of length n. (optional) initial guess.
-        tol: (optional) tolerance.
-        itermax: (optional) maximum number of iterations.
-
-    Returns:
-        x: double vector of length n.
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    n = A.shape[1]
-    if x0 == None:
-        x = np.zeros((n),dtype = A.dtype)
-    else:
-        x = np.copy(x0)
-    if itermax == None:
-        itermax = n
-    spams_wrap.conjugateGradient(A,b,x,tol,itermax)
-    return x
-
-def invSym(A):
-    """
-        returns the inverse of a symmetric matrix A
-
-    Args:
-        A: double n x n matrix   
-
-    Returns:
-        B: double n x n matrix 
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    B = np.copy(A)
-    spams_wrap.invSym(B)
-    return B
-
-def normalize(A):
-    """
-        rescale the columns of X so that they have
-           unit l2-norm.
-
-    Args:
-        X: double m x n matrix   
-
-    Returns:
-        Y: double m x n matrix 
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    B = np.copy(A)
-    spams_wrap.normalize(B)
-    return B
-
-########### END linalg ##############
-##################################################
-
-###########  decomp ##################
-#### constraint_type definitions
-L1COEFFS = spams_wrap.L1COEFFS
-L2ERROR = spams_wrap.L2ERROR
-PENALTY = spams_wrap.PENALTY
-SPARSITY = spams_wrap.SPARSITY
-L2ERROR2 = spams_wrap.L2ERROR2
-PENALTY2 = spams_wrap.PENALTY2
-####
-
-def  sparseProject(U,thrs = 1.0,mode = 1,lambda1 = 0.0,lambda2 = 0.0,
-                   lambda3 = 0.0,pos = 0,numThreads = -1):
-    """
-        sparseProject solves various optimization 
-        problems, including projections on a few convex sets.
-
-        It aims at addressing the following problems
-        for all columns u of U in parallel
-          1) when mode=1 (projection on the l1-ball)
-              min_v ||u-v||_2^2  s.t.  ||v||_1 <= thrs
-          2) when mode=2
-              min_v ||u-v||_2^2  s.t. ||v||_2^2 + lamuda1||v||_1 <= thrs
-          3) when mode=3
-              min_v ||u-v||_2^2  s.t  ||v||_1 + 0.5lamuda1||v||_2^2 <= thrs 
-          4) when mode=4
-              min_v 0.5||u-v||_2^2 + lamuda1||v||_1  s.t  ||v||_2^2 <= thrs
-          5) when mode=5
-              min_v 0.5||u-v||_2^2 + lamuda1||v||_1 +lamuda2 FL(v) + ... 
-                                                      0.5lamuda_3 ||v||_2^2
-             where FL denotes a "fused lasso" regularization term.
-          6) when mode=6
-             min_v ||u-v||_2^2 s.t lamuda1||v||_1 +lamuda2 FL(v) + ...
-                                                0.5lamuda3||v||_2^2 <= thrs
-                                                
-           When pos=true and mode <= 4,
-           it solves the previous problems with positivity constraints 
-
-    Args:
-        U: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to project
-
-    Kwargs:
-        thrs: (parameter)
-        lambda1: (parameter)
-        lambda2: (parameter)
-        lambda3: (parameter)
-        mode: (see above)
-        pos: (optional, false by default)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        V: double m x n matrix (output matrix)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting 
-
-    """
-
-    m = U.shape[0];
-    n = U.shape[1];
-#    paramlist = [('thrs',1.0),('mode',1),('lambda1',0.0),('lambda2',0.0),('lambda3',0.0),('pos',0),('numThreads',-1)]
-    V = np.empty((m,n),dtype=U.dtype,order="FORTRAN")
-    params = (thrs,mode,lambda1,lambda2,lambda3,pos,numThreads)
-    spams_wrap.sparseProject(U,V,thrs,mode,lambda1,lambda2,lambda3,pos,numThreads)
-    return V
-
-def lasso(X,D= None,Q = None,q = None,return_reg_path = False,L= -1,lambda1= None,lambda2= 0.,
-                 mode= spams_wrap.PENALTY,pos= False,ols= False,numThreads= -1,
-                 max_length_path= -1,verbose=False,cholesky= False):
-    """
-        lasso is an efficient implementation of the
-        homotopy-LARS algorithm for solving the Lasso. 
-        
-
-        If the function is called this way spams.lasso(X,D = D, Q = None,...),
-        it aims at addressing the following problems
-        for all columns x of X, it computes one column alpha of A
-        that solves
-          1) when mode=0
-            min_{alpha} ||x-Dalpha||_2^2 s.t. ||alpha||_1 <= lambda1
-          2) when mode=1
-            min_{alpha} ||alpha||_1 s.t. ||x-Dalpha||_2^2 <= lambda1
-          3) when mode=2
-            min_{alpha} 0.5||x-Dalpha||_2^2 + lambda1||alpha||_1 +0.5 lambda2||alpha||_2^2
-            
-        If the function is called this way spams.lasso(X,D = None, Q = Q, q = q,...),
-        it solves the above optimisation problem, when Q=D'D and q=D'x.
-        
-        Possibly, when pos=true, it solves the previous problems
-        with positivity constraints on the vectors alpha
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-        Q: p x p double matrix (Q = D'D)
-        q: p x n double matrix (q = D'X)
-        verbose: verbose mode
-        return_reg_path: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        lambda1: (parameter)
-        lambda2: (optional parameter for solving the Elastic-Net)
-          for mode=0 and mode=1, it adds a ridge on the Gram Matrix
-        L: (optional), maximum number of steps of the homotopy algorithm (can
-          be used as a stopping criterion)
-        pos: (optional, adds non-negativity constraints on the
-          coefficients, false by default)
-        mode: (see above, by default: 2)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        cholesky: (optional, default false),  choose between Cholesky 
-          implementation or one based on the matrix inversion Lemma
-        ols: (optional, default false), perform an orthogonal projection
-          before returning the solution.
-        max_length_path: (optional) maximum length of the path, by default 4*p
-
-    Returns:
-        A: double sparse p x n matrix (output coefficients)
-        path: optional,  returns the regularisation path for the first signal
-          A = spams.lasso(X,return_reg_path = False,...)
-          (A,path) = spams.lasso(X,return_reg_path = True,...)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting (even though the output alpha is double 
-              precision)
-
-    Examples:
-        ::
-
-          import numpy as np
-          m = 5;n = 10;nD = 5
-          np.random.seed(0)
-          X = np.asfortranarray(np.random.normal(size=(m,n)))
-          X = np.asfortranarray(X / np.tile(np.sqrt((X*X).sum(axis=0)),(X.shape[0],1)))
-          D = np.asfortranarray(np.random.normal(size=(100,200)))
-          D = np.asfortranarray(D / np.tile(np.sqrt((D*D).sum(axis=0)),(D.shape[0],1)))
-          alpha = spams.lasso(X,D = D,return_reg_path = FALSE,lambda1 = 0.15)
-
-    """
-
-    # Note : 'L' and 'max_length_path' default to -1 so that their effective default values
-    # will be set in spams.h
-#    paramlist = [('L', -1),('lambda', None),('lambda2', 0.),
-#                 ('mode', spams_wrap.PENALTY),('pos', False),('ols', False),('numThreads', -1),
-#                 ('max_length_path', -1),('verbose',True),('cholesky', False)]
-    
-    if Q != None:
-        if q == None:
-            raise ValueError("lasso : q is needed when Q is given")
-    else:
-        if D == None:
-            raise ValueError("lasso : you must give D or Q and q")
-
-    if lambda1 == None:
-        raise ValueError("lasso : lambda1 must be defined")
-    path = None
-    if(q != None):
-        if return_reg_path:
-            ((indptr,indices,data,shape),path) = spams_wrap.lassoQq(X,Q,q,return_reg_path,L,lambda1,lambda2,mode,pos,ols,numThreads,max_length_path,verbose,cholesky)
-        else:
-            (indptr,indices,data,shape) = spams_wrap.lassoQq(X,Q,q,return_reg_path,L,lambda1,lambda2,mode,pos,ols,numThreads,max_length_path,verbose,cholesky)
-    else:
-        if return_reg_path:
-            ((indptr,indices,data,shape),path) = spams_wrap.lassoD(X,D,return_reg_path,L,lambda1,lambda2,mode,pos,ols,numThreads,max_length_path,verbose,cholesky)
-        else:
-            (indptr,indices,data,shape) = spams_wrap.lassoD(X,D,return_reg_path,L,lambda1,lambda2,mode,pos,ols,numThreads,max_length_path,verbose,cholesky)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    if return_reg_path:
-        return (alpha,path)
-    else:
-        return alpha
-
-def lassoMask(X,D,B,L= -1,lambda1= None,lambda2= 0.,
-                 mode= spams_wrap.PENALTY,pos= False,numThreads= -1,verbose = False):
-    """
-        lasso is a variant of lasso that handles
-        binary masks. It aims at addressing the following problems
-        for all columns x of X, and beta of B, it computes one column alpha of A
-        that solves
-          1) when mode=0
-            min_{alpha} ||diag(beta)(x-Dalpha)||_2^2 s.t. ||alpha||_1 <= lambda1
-          2) when mode=1
-            min_{alpha} ||alpha||_1 s.t. ||diag(beta)(x-Dalpha)||_2^2 
-                                                                 <= lambda1*||beta||_0/m
-          3) when mode=2
-            min_{alpha} 0.5||diag(beta)(x-Dalpha)||_2^2 +
-                                                    lambda1*(||beta||_0/m)*||alpha||_1 +
-                                                    (lambda2/2)||alpha||_2^2
-        Possibly, when pos=true, it solves the previous problems
-        with positivity constraints on the vectors alpha
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-        B: boolean m x n matrix   (mask)
-          p is the number of elements in the dictionary
-        verbose: verbose mode
-
-    Kwargs:
-        lambda1: (parameter)
-        L: (optional, maximum number of elements of each 
-          decomposition)
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        mode: (see above, by default: 2)
-        lambda2: (optional parameter for solving the Elastic-Net)
-          for mode=0 and mode=1, it adds a ridge on the Gram Matrix
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        A: double sparse p x n matrix (output coefficients)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting (even though the output alpha is double 
-              precision)
-
-    """
-
-    # Note : 'L' and 'max_length_path' default to -1 so that their effective default values
-    # will be set in spams.h
-
-    if lambda1 == None:
-        raise ValueError("lassoMask : lambda1 must be defined")
-    (indptr,indices,data,shape) = spams_wrap.lassoMask(X,D,B,L,lambda1,lambda2,mode,pos,numThreads,verbose)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    return alpha
-
-def lassoWeighted(X,D,W,L= -1,lambda1= None,
-                 mode= spams_wrap.PENALTY,pos= False,numThreads= -1,verbose = False):
-    """
-        lassoWeighted is an efficient implementation of the
-        LARS algorithm for solving the weighted Lasso. It is optimized
-        for solving a large number of small or medium-sized 
-        decomposition problem (and not for a single large one).
-
-        It first computes the Gram matrix D'D and then perform
-        a Cholesky-based OMP of the input signals in parallel.
-        For all columns x of X, and w of W, it computes one column alpha of A
-        which is the solution of
-          1) when mode=0
-            min_{alpha} ||x-Dalpha||_2^2   s.t.  
-                                        ||diag(w)alpha||_1 <= lambda1
-          2) when mode=1
-            min_{alpha} ||diag(w)alpha||_1  s.t.
-                                           ||x-Dalpha||_2^2 <= lambda1
-          3) when mode=2
-            min_{alpha} 0.5||x-Dalpha||_2^2  +  
-                                            lambda1||diag(w)alpha||_1 
-        Possibly, when pos=true, it solves the previous problems
-        with positivity constraints on the vectors alpha
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-        W: double p x n matrix   (weights)
-        verbose: verbose mode
-
-    Kwargs:
-        lambda1: (parameter)
-        L: (optional, maximum number of elements of each 
-          decomposition)
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        mode: (see above, by default: 2)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        A: double sparse p x n matrix (output coefficients)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting (even though the output alpha is double 
-              precision)
-
-    """
-
-    # Note : 'L' and 'max_length_path' default to -1 so that their effective default values
-    # will be set in spams.h
-
-    if lambda1 == None:
-        raise ValueError("lassoWeighted : lambda1 must be defined")
-    (indptr,indices,data,shape) = spams_wrap.lassoWeighted(X,D,W,L,lambda1,mode,pos,numThreads,verbose)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    return alpha
-
-
-def omp(X,D,L=None,eps= None,lambda1 = None,return_reg_path = False, numThreads = -1):
-    """
-        omp is an efficient implementation of the
-        Orthogonal Matching Pursuit algorithm. It is optimized
-        for solving a large number of small or medium-sized 
-        decomposition problem (and not for a single large one).
-
-        It first computes the Gram matrix D'D and then perform
-        a Cholesky-based OMP of the input signals in parallel.
-        X=[x^1,...,x^n] is a matrix of signals, and it returns
-        a matrix A=[alpha^1,...,alpha^n] of coefficients.
-        
-        it addresses for all columns x of X, 
-            min_{alpha} ||alpha||_0  s.t  ||x-Dalpha||_2^2 <= eps
-            or
-            min_{alpha} ||x-Dalpha||_2^2  s.t. ||alpha||_0 <= L
-            or
-            min_{alpha} 0.5||x-Dalpha||_2^2 + lambda1||alpha||_0 
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-          All the columns of D should have unit-norm !
-        return_reg_path: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        L: (optional, maximum number of elements in each decomposition, 
-          min(m,p) by default)
-        eps: (optional, threshold on the squared l2-norm of the residual,
-          0 by default
-        lambda1: (optional, penalty parameter, 0 by default
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        A: double sparse p x n matrix (output coefficients)
-          path (optional): double dense p x L matrix (regularization path of the first signal)
-          A = spams.omp(X,D,L,eps,return_reg_path = False,...)
-          (A,path) = spams.omp(X,D,L,eps,return_reg_path = True,...)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-         - single precision setting (even though the output alpha is double 
-           precision)
-         - Passing an int32 vector of length n to L provides
-           a different parameter L for each input signal x_i
-         - Passing a double vector of length n to eps and or lambda1 
-           provides a different parameter eps (or lambda1) for each input signal x_i
-
-    """
-
-    path = None
-    given_L = False
-    given_eps = False
-    given_lambda1 = False
-    if L == None:
-        L = np.array([0],dtype=np.int32)
-    else:
-        given_L = True
-        if str(type(L)) != "<type 'numpy.ndarray'>":
-            L = np.array([L],dtype=np.int32)
-    if eps == None:
-        eps = np.array([0.],dtype=X.dtype)
-    else:
-        given_eps = True
-        if str(type(eps)) != "<type 'numpy.ndarray'>":
-            eps = np.array([eps],dtype=X.dtype)
-    if lambda1 == None:
-        lambda1 = np.array([0.],dtype=X.dtype)
-    else:
-        given_lambda1 = True
-        if str(type(lambda1)) != "<type 'numpy.ndarray'>":
-            lambda1 = np.array([lambda1],dtype=X.dtype)
-    if return_reg_path:
-        ((indptr,indices,data,shape),path) = spams_wrap.omp(X,D,return_reg_path,given_L,L,given_eps,eps,given_lambda1,lambda1,numThreads)
-    else:
-        (indptr,indices,data,shape) = spams_wrap.omp(X,D,return_reg_path,given_L,L,given_eps,eps,given_lambda1,lambda1,numThreads)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    if return_reg_path:
-        return (alpha,path)
-    else:
-        return alpha
-
-
-def ompMask(X,D,B,L=None,eps= None,lambda1 = None,return_reg_path = False, numThreads = -1):
-    """
-        ompMask is a variant of omp that allow using
-        a binary mask B
-        
-
-        for all columns x of X, and columns beta of B, it computes a column 
-            alpha of A by addressing
-            min_{alpha} ||alpha||_0  s.t  ||diag(beta)*(x-Dalpha)||_2^2 
-                                                                  <= eps*||beta||_0/m
-            or
-            min_{alpha} ||diag(beta)*(x-Dalpha)||_2^2  s.t. ||alpha||_0 <= L
-            or
-            min_{alpha} 0.5||diag(beta)*(x-Dalpha)||_2^2  + lambda1||alpha||_0
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-          All the columns of D should have unit-norm !
-        B: boolean m x n matrix   (mask)
-          p is the number of elements in the dictionary
-        return_reg_path: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        L: (optional, maximum number of elements in each decomposition, 
-          min(m,p) by default)
-        eps: (optional, threshold on the squared l2-norm of the residual,
-          0 by default
-        lambda1: (optional, penalty parameter, 0 by default
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        A: double sparse p x n matrix (output coefficients)
-          path (optional): double dense p x L matrix 
-          (regularization path of the first signal)
-          A = spams.ompMask(X,D,B,L,eps,return_reg_path = False,...)
-          (A,path) = spams.ompMask(X,D,B,L,eps,return_reg_path = True,...)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-         - single precision setting (even though the output alpha is double 
-           precision)
-         - Passing an int32 vector of length n to L provides
-           a different parameter L for each input signal x_i
-         - Passing a double vector of length n to eps and or lambda1 
-           provides a different parameter eps (or lambda1) for each input signal x_i
-
-    """
-
-    path = None
-    given_L = False
-    given_eps = False
-    given_lambda1 = False
-    if L == None:
-        L = np.array([0],dtype=np.int32)
-    else:
-        given_L = True
-        if str(type(L)) != "<type 'numpy.ndarray'>":
-            L = np.array([L],dtype=np.int32)
-    if eps == None:
-        eps = np.array([0.],dtype=X.dtype)
-    else:
-        given_eps = True
-        if str(type(eps)) != "<type 'numpy.ndarray'>":
-            eps = np.array([eps],dtype=X.dtype)
-    if lambda1 == None:
-        lambda1 = np.array([0.],dtype=X.dtype)
-    else:
-        given_lambda1 = True
-        if str(type(lambda1)) != "<type 'numpy.ndarray'>":
-            lambda1 = np.array([lambda1],dtype=X.dtype)
-    if return_reg_path:
-        ((indptr,indices,data,shape),path) = spams_wrap.ompMask(X,D,B,return_reg_path,given_L,L,given_eps,eps,given_lambda1,lambda1,numThreads)
-    else:
-        (indptr,indices,data,shape) = spams_wrap.ompMask(X,D,B,return_reg_path,given_L,L,given_eps,eps,given_lambda1,lambda1,numThreads)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    if return_reg_path:
-        return (alpha,path)
-    else:
-        return alpha
-   
-def  cd(X,D,A0,lambda1 = None,mode= spams_wrap.PENALTY,itermax=100,tol = 0.001,numThreads =-1):
-    """
-        cd addresses l1-decomposition problem with a 
-        coordinate descent type of approach.
-
-        It is optimized for solving a large number of small or medium-sized 
-        decomposition problem (and not for a single large one).
-        It first computes the Gram matrix D'D.
-        This method is particularly well adapted when there is low 
-        correlation between the dictionary elements and when one can benefit 
-        from a warm restart.
-        It aims at addressing the two following problems
-        for all columns x of X, it computes a column alpha of A such that
-          2) when mode=1
-            min_{alpha} ||alpha||_1 s.t. ||x-Dalpha||_2^2 <= lambda1
-            For this constraint setting, the method solves a sequence of 
-            penalized problems (corresponding to mode=2) and looks
-            for the corresponding Lagrange multplier with a simple but
-            efficient heuristic.
-          3) when mode=2
-            min_{alpha} 0.5||x-Dalpha||_2^2 + lambda1||alpha||_1 
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-          All the columns of D should have unit-norm !
-        A0: double sparse p x n matrix   (initial guess)
-
-    Kwargs:
-        lambda1: (parameter)
-        mode: (optional, see above, by default 2)
-        itermax: (maximum number of iterations)
-        tol: (tolerance parameter)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        A: double sparse p x n matrix (output coefficients)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting (even though the output alpha 
-              is double precision)
-
-    """
-
-    if lambda1 == None:
-        raise ValueError("cd : lambda1 must be defined")
-    (indptr,indices,data,shape) = spams_wrap.cd(X,D,A0,lambda1,mode,itermax,tol,numThreads)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    return alpha
-
-def somp(X,D,list_groups,L = None,eps = 0.,numThreads = -1):
-    """
-        somp is an efficient implementation of a
-        Simultaneous Orthogonal Matching Pursuit algorithm. It is optimized
-        for solving a large number of small or medium-sized 
-        decomposition problem (and not for a single large one).
-
-        It first computes the Gram matrix D'D and then perform
-        a Cholesky-based OMP of the input signals in parallel.
-        It aims at addressing the following NP-hard problem
-        
-        X is a matrix structured in groups of signals, which we denote
-        by X=[X_1,...,X_n]
-        
-        for all matrices X_i of X, 
-            min_{A_i} ||A_i||_{0,infty}  s.t  ||X_i-D A_i||_2^2 <= eps*n_i
-            where n_i is the number of columns of X_i
-            
-            or
-            
-            min_{A_i} ||X_i-D A_i||_2^2  s.t. ||A_i||_{0,infty} <= L
-
-    Args:
-        X: double m x N matrix   (input signals)
-          m is the signal size
-          N is the total number of signals 
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-          All the columns of D should have unit-norm !
-        list_groups: int32 vector containing the indices (starting at 0)
-          of the first elements of each groups.
-
-    Kwargs:
-        L: (maximum number of elements in each decomposition)
-        eps: (threshold on the squared l2-norm of the residual
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        alpha: double sparse p x N matrix (output coefficients)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-         - single precision setting (even though the output alpha is double 
-           precision)
-
-    """
-
-    if L == None:
-        raise ValueError("somp : L must be defined")
-    (indptr,indices,data,shape) = spams_wrap.somp(X,D,list_groups,L,eps,numThreads)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    return alpha
-
-def l1L2BCD(X,D,alpha0,list_groups,lambda1 = None, mode= spams_wrap.PENALTY, itermax = 100, tol = 1e-3,numThreads = -1):
-    """
-        l1L2BCD is a solver for a 
-        Simultaneous signal decomposition formulation based on block 
-        coordinate descent.
-
-        
-        X is a matrix structured in groups of signals, which we denote
-        by X=[X_1,...,X_n]
-        
-        if mode=2, it solves
-            for all matrices X_i of X, 
-            min_{A_i} 0.5||X_i-D A_i||_2^2 + lambda1/sqrt(n_i)||A_i||_{1,2}  
-            where n_i is the number of columns of X_i
-        if mode=1, it solves
-            min_{A_i} ||A_i||_{1,2} s.t. ||X_i-D A_i||_2^2  <= n_i lambda1
-
-    Args:
-        X: double m x N matrix   (input signals)
-          m is the signal size
-          N is the total number of signals 
-        D: double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-        alpha0: double dense p x N matrix (initial solution)
-        list_groups: int32 vector containing the indices (starting at 0)
-          of the first elements of each groups.
-
-    Kwargs:
-        lambda1: (regularization parameter)
-        mode: (see above, by default 2)
-        itermax: (maximum number of iterations, by default 100)
-        tol: (tolerance parameter, by default 0.001)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-
-    Returns:
-        alpha: double sparse p x N matrix (output coefficients)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-         - single precision setting (even though the output alpha is double 
-           precision)
-
-    """
-
-    if lambda1 == None:
-        raise ValueError("l1L2BCD : lambda1 must be defined")
-    alpha = np.copy(alpha0)
-    spams_wrap.l1L2BCD(X,D,alpha,list_groups,lambda1,mode,itermax,tol,numThreads)
-    return alpha
-
-###########  END decomp ##############
-##################################################
-
-###########  prox ##################
-
-def fistaFlat(
-    Y,X,W0,return_optim_info = False,numThreads =-1,max_it =1000,L0=1.0,
-    fixed_step=False,gamma=1.5,lambda1=1.0,delta=1.0,lambda2=0.,lambda3=0.,
-    a=1.0,b=0.,c=1.0,tol=0.000001,it0=100,max_iter_backtracking=1000,
-    compute_gram=False,lin_admm=False,admm=False,intercept=False,
-    resetflow=False,regul="",loss="",verbose=False,pos=False,clever=False,
-    log=False,ista=False,subgrad=False,logName="",is_inner_weights=False,
-    inner_weights=None,size_group=1,groups = None,sqrt_step=True,transpose=False,linesearch_mode=0):
-    """
-        fistaFlat solves sparse regularized problems.
-
-            X is a design matrix of size m x p
-            X=[x^1,...,x^n]', where the x_i's are the rows of X
-            Y=[y^1,...,y^n] is a matrix of size m x n
-            It implements the algorithms FISTA, ISTA and subgradient descent.
-            
-              - if loss='square' and regul is a regularization function for vectors,
-                the entries of Y are real-valued,  W = [w^1,...,w^n] is a matrix of size p x n
-                For all column y of Y, it computes a column w of W such that
-                  w = argmin 0.5||y- X w||_2^2 + lambda1 psi(w)
-                  
-              - if loss='square' and regul is a regularization function for matrices
-                the entries of Y are real-valued,  W is a matrix of size p x n. 
-                It computes the matrix W such that
-                  W = argmin 0.5||Y- X W||_F^2 + lambda1 psi(W)
-                  
-              - loss='square-missing' same as loss='square', but handles missing data
-                represented by NaN (not a number) in the matrix Y
-                
-              - if loss='logistic' and regul is a regularization function for vectors,
-                the entries of Y are either -1 or +1, W = [w^1,...,w^n] is a matrix of size p x n
-                For all column y of Y, it computes a column w of W such that
-                  w = argmin (1/m)sum_{j=1}^m log(1+e^(-y_j x^j' w)) + lambda1 psi(w),
-                where x^j is the j-th row of X.
-                
-              - if loss='logistic' and regul is a regularization function for matrices
-                the entries of Y are either -1 or +1, W is a matrix of size p x n
-                  W = argmin sum_{i=1}^n(1/m)sum_{j=1}^m log(1+e^(-y^i_j x^j' w^i)) + lambda1 psi(W)
-                  
-              - if loss='multi-logistic' and regul is a regularization function for vectors,
-                the entries of Y are in {0,1,...,N} where N is the total number of classes
-                W = [W^1,...,W^n] is a matrix of size p x Nn, each submatrix W^i is of size p x N
-                for all submatrix WW of W, and column y of Y, it computes
-                  WW = argmin (1/m)sum_{j=1}^m log(sum_{j=1}^r e^(x^j'(ww^j-ww^{y_j}))) + lambda1 sum_{j=1}^N psi(ww^j),
-                where ww^j is the j-th column of WW.
-                
-              - if loss='multi-logistic' and regul is a regularization function for matrices,
-                the entries of Y are in {0,1,...,N} where N is the total number of classes
-                W is a matrix of size p x N, it computes
-                  W = argmin (1/m)sum_{j=1}^m log(sum_{j=1}^r e^(x^j'(w^j-w^{y_j}))) + lambda1 psi(W)
-                where ww^j is the j-th column of WW.
-                
-              - loss='cur' useful to perform sparse CUR matrix decompositions, 
-                  W = argmin 0.5||Y-X*W*X||_F^2 + lambda1 psi(W)
-                  
-                  
-            The function psi are those used by proximalFlat (see documentation)
-            
-            This function can also handle intercepts (last row of W is not regularized),
-            and/or non-negativity constraints on W, and sparse matrices for X
-
-    Args:
-        Y: double dense m x n matrix
-        X: double dense or sparse m x p matrix   
-        W0: double dense p x n matrix or p x Nn matrix (for multi-logistic loss)
-          initial guess
-        return_optim_info: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        loss: (choice of loss, see above)
-        regul: (choice of regularization, see function proximalFlat)
-        lambda1: (regularization parameter)
-        lambda2: (optional, regularization parameter, 0 by default)
-        lambda3: (optional, regularization parameter, 0 by default)
-        verbose: (optional, verbosity level, false by default)
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        transpose: (optional, transpose the matrix in the regularization function)
-        size_group: (optional, for regularization functions assuming a group
-          structure)
-        groups: (int32, optional, for regularization functions assuming a group
-          structure, see proximalFlat)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        max_it: (optional, maximum number of iterations, 100 by default)
-        it0: (optional, frequency for computing duality gap, every 10 iterations by default)
-        tol: (optional, tolerance for stopping criteration, which is a relative duality gap
-          if it is available, or a relative change of parameters).
-        gamma: (optional, multiplier for increasing the parameter L in fista, 1.5 by default)
-        L0: (optional, initial parameter L in fista, 0.1 by default, should be small enough)
-        fixed_step: (deactive the line search for L in fista and use L0 instead)
-        linesearch_mode: (line-search scheme when ista=true:
-        0: default, monotonic backtracking scheme
-        1: monotonic backtracking scheme, with restart at each iteration
-        2: Barzilai-Borwein step sizes (similar to SparSA by Wright et al.) 
-        3: non-monotonic backtracking
-        compute_gram: (optional, pre-compute X^TX, false by default).
-        intercept: (optional, do not regularize last row of W, false by default).
-        ista: (optional, use ista instead of fista, false by default).
-        subgrad: (optional, if not ista, use subradient descent instead of fista, false by default).
-        a: 
-        b: (optional, if subgrad, the gradient step is a/(t+b)
-          also similar options as proximalFlat
-          
-          the function also implements the ADMM algorithm via an option admm=true. It is not documented
-          and you need to look at the source code to use it.
-        delta: undocumented; modify at your own risks!
-        c: undocumented; modify at your own risks!
-        max_iter_backtracking: undocumented; modify at your own risks!
-        lin_admm: undocumented; modify at your own risks!
-        admm: undocumented; modify at your own risks!
-        resetflow: undocumented; modify at your own risks!
-        clever: undocumented; modify at your own risks!
-        log: undocumented; modify at your own risks!
-        logName: undocumented; modify at your own risks!
-        is_inner_weights: undocumented; modify at your own risks!
-        inner_weights: undocumented; modify at your own risks!
-        sqrt_step: undocumented; modify at your own risks!
-
-    Returns:
-        W: double dense p x n matrix or p x Nn matrix (for multi-logistic loss)
-        optim: optional, double dense 4 x n matrix.
-          first row: values of the objective functions.
-          third row: values of the relative duality gap (if available)
-          fourth row: number of iterations
-        optim_info: vector of size 4, containing information of the optimization.
-          W = spams.fistaFlat(Y,X,W0,return_optim_info = False,...)
-          (W,optim_info) = spams.fistaFlat(Y,X,W0,return_optim_info = True,...)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        Valid values for the regularization parameter (regul) are:
-          "l0", "l1", "l2", "linf", "l2-not-squared", "elastic-net", "fused-lasso",
-          "group-lasso-l2", "group-lasso-linf", "sparse-group-lasso-l2",
-          "sparse-group-lasso-linf", "l1l2", "l1linf", "l1l2+l1", "l1linf+l1",
-          "tree-l0", "tree-l2", "tree-linf", "graph", "graph-ridge", "graph-l2",
-          "multi-task-tree", "multi-task-graph", "l1linf-row-column", "trace-norm",
-          "trace-norm-vec", "rank", "rank-vec", "none"
-
-    """
-
-
-#    paramlist = [("numThreads" ,-1), ("max_it" , 1000),('L0',1.0),
-#                 ('fixed_step',False),
-#                 ('gamma',1.5),('lambda',1.0),('delta',1.0),('lambda2',0.),
-#                 ('lambda3',0.),('a',1.0),('b',0.),('c',1.0),('tol',0.000001),
-#                 ('it0',100),('max_iter_backtracking',1000),
-#                 ('compute_gram',False),('lin_admm',False),('admm',False),
-#                 ('intercept',False),('resetflow',False),('regul',""),
-#                 ('loss',""),('verbose',False),('pos',False),
-#                 ('clever',False),('log',False),('ista',False),
-#                 ('subgrad',False),('logName',''),('is_inner_weights',False),
-#                 ('inner_weights',np.array([0.])),('eval',False),('size_group',1),
-#                 ('sqrt_step',True),('transpose',False),('linesearch_mode',0)]
-#
-##    params = __param_struct(paramlist,param)
-#    W = np.empty((W0.shape[0],W0.shape[1]),dtype=W0.dtype,order="FORTRAN")
-    if groups == None:
-        groups = np.array([],dtype=np.int32,order="FORTRAN")
-    if inner_weights == None:
-        inner_weights = np.array([0.],dtype=X.dtype)
-    W = np.zeros((W0.shape[0],W0.shape[1]),dtype=W0.dtype,order="FORTRAN")
-    optim_info = spams_wrap.fistaFlat(Y,X,W0,W,groups,numThreads ,max_it ,L0,fixed_step,gamma,lambda1,delta,lambda2,lambda3,a,b,c,tol,it0,max_iter_backtracking,compute_gram,lin_admm,admm,intercept,resetflow,regul,loss,verbose,pos,clever,log,ista,subgrad,logName,is_inner_weights,inner_weights,size_group,sqrt_step,transpose,linesearch_mode)
-    if return_optim_info:
-        return(W,optim_info)
-    else:
-        return W
-
-def fistaTree(
-    Y,X,W0,tree,return_optim_info = False,numThreads =-1,max_it =1000,L0=1.0,
-    fixed_step=False,gamma=1.5,lambda1=1.0,delta=1.0,lambda2=0.,lambda3=0.,
-    a=1.0,b=0.,c=1.0,tol=0.000001,it0=100,max_iter_backtracking=1000,
-    compute_gram=False,lin_admm=False,admm=False,intercept=False,
-    resetflow=False,regul="",loss="",verbose=False,pos=False,clever=False,
-    log=False,ista=False,subgrad=False,logName="",is_inner_weights=False,
-    inner_weights=None,size_group=1,sqrt_step=True,transpose=False,linesearch_mode=0):
-    """
-        fistaTree solves sparse regularized problems.
-
-            X is a design matrix of size m x p
-            X=[x^1,...,x^n]', where the x_i's are the rows of X
-            Y=[y^1,...,y^n] is a matrix of size m x n
-            It implements the algorithms FISTA, ISTA and subgradient descent for solving
-            
-              min_W  loss(W) + lambda1 psi(W)
-              
-            The function psi are those used by proximalTree (see documentation)
-            for the loss functions, see the documentation of fistaFlat
-            
-            This function can also handle intercepts (last row of W is not regularized),
-            and/or non-negativity constraints on W and sparse matrices X
-
-    Args:
-        Y: double dense m x n matrix
-        X: double dense or sparse m x p matrix   
-        W0: double dense p x n matrix or p x Nn matrix (for multi-logistic loss)
-          initial guess
-        tree: named list (see documentation of proximalTree)
-        return_optim_info: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        loss: (choice of loss, see above)
-        regul: (choice of regularization, see function proximalFlat)
-        lambda1: (regularization parameter)
-        lambda2: (optional, regularization parameter, 0 by default)
-        lambda3: (optional, regularization parameter, 0 by default)
-        verbose: (optional, verbosity level, false by default)
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        transpose: (optional, transpose the matrix in the regularization function)
-        size_group: (optional, for regularization functions assuming a group
-          structure)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        max_it: (optional, maximum number of iterations, 100 by default)
-        it0: (optional, frequency for computing duality gap, every 10 iterations by default)
-        tol: (optional, tolerance for stopping criteration, which is a relative duality gap
-          if it is available, or a relative change of parameters).
-        gamma: (optional, multiplier for increasing the parameter L in fista, 1.5 by default)
-        L0: (optional, initial parameter L in fista, 0.1 by default, should be small enough)
-        fixed_step: (deactive the line search for L in fista and use L0 instead)
-        compute_gram: (optional, pre-compute X^TX, false by default).
-        intercept: (optional, do not regularize last row of W, false by default).
-        ista: (optional, use ista instead of fista, false by default).
-        subgrad: (optional, if not ista, use subradient descent instead of fista, false by default).
-        a: 
-        b: (optional, if subgrad, the gradient step is a/(t+b)
-          also similar options as proximalTree
-          
-          the function also implements the ADMM algorithm via an option admm=true. It is not documented
-          and you need to look at the source code to use it.
-        delta: undocumented; modify at your own risks!
-        c: undocumented; modify at your own risks!
-        max_iter_backtracking: undocumented; modify at your own risks!
-        lin_admm: undocumented; modify at your own risks!
-        admm: undocumented; modify at your own risks!
-        resetflow: undocumented; modify at your own risks!
-        clever: undocumented; modify at your own risks!
-        log: undocumented; modify at your own risks!
-        logName: undocumented; modify at your own risks!
-        is_inner_weights: undocumented; modify at your own risks!
-        inner_weights: undocumented; modify at your own risks!
-        sqrt_step: undocumented; modify at your own risks!
-
-    Returns:
-        W: double dense p x n matrix or p x Nn matrix (for multi-logistic loss)
-        optim: optional, double dense 4 x n matrix.
-          first row: values of the objective functions.
-          third row: values of the relative duality gap (if available)
-          fourth row: number of iterations
-        optim_info: vector of size 4, containing information of the optimization.
-          W = spams.fistaTree(Y,X,W0,tree,return_optim_info = False,...)
-          (W,optim_info) = spams.fistaTree(Y,X,W0,tree,return_optim_info = True,...)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        Valid values for the regularization parameter (regul) are:
-          "l0", "l1", "l2", "linf", "l2-not-squared", "elastic-net", "fused-lasso",
-          "group-lasso-l2", "group-lasso-linf", "sparse-group-lasso-l2",
-          "sparse-group-lasso-linf", "l1l2", "l1linf", "l1l2+l1", "l1linf+l1",
-          "tree-l0", "tree-l2", "tree-linf", "graph", "graph-ridge", "graph-l2",
-          "multi-task-tree", "multi-task-graph", "l1linf-row-column", "trace-norm",
-          "trace-norm-vec", "rank", "rank-vec", "none"
-
-    """
-
-
-    if(len(tree) != 4):
-        raise ValueError("fistaTree : tree should be a list of 4 elements")
-    if inner_weights == None:
-        inner_weights = np.array([0.],dtype=X.dtype)
-    eta_g = tree['eta_g']
-    groups = tree['groups']
-    own_variables = tree['own_variables']
-    N_own_variables = tree['N_own_variables']
-    W = np.zeros((W0.shape[0],W0.shape[1]),dtype=W0.dtype,order="FORTRAN")
-    optim_info = spams_wrap.fistaTree(Y,X,W0,W,eta_g,groups,own_variables,N_own_variables,numThreads ,max_it ,L0,fixed_step,gamma,lambda1,delta,lambda2,lambda3,a,b,c,tol,it0,max_iter_backtracking,compute_gram,lin_admm,admm,intercept,resetflow,regul,loss,verbose,pos,clever,log,ista,subgrad,logName,is_inner_weights,inner_weights,size_group,sqrt_step,transpose,linesearch_mode)
-    if return_optim_info:
-        return(W,optim_info)
-    else:
-        return W
-
-def fistaGraph(
-    Y,X,W0,graph,return_optim_info = False,numThreads =-1,max_it =1000,L0=1.0,
-    fixed_step=False,gamma=1.5,lambda1=1.0,delta=1.0,lambda2=0.,lambda3=0.,
-    a=1.0,b=0.,c=1.0,tol=0.000001,it0=100,max_iter_backtracking=1000,
-    compute_gram=False,lin_admm=False,admm=False,intercept=False,
-    resetflow=False,regul="",loss="",verbose=False,pos=False,clever=False,
-    log=False,ista=False,subgrad=False,logName="",is_inner_weights=False,
-    inner_weights=None,size_group=1,sqrt_step=True,transpose=False,linesearch_mode=0):
-    """
-        fistaGraph solves sparse regularized problems.
-
-            X is a design matrix of size m x p
-            X=[x^1,...,x^n]', where the x_i's are the rows of X
-            Y=[y^1,...,y^n] is a matrix of size m x n
-            It implements the algorithms FISTA, ISTA and subgradient descent.
-            
-            It implements the algorithms FISTA, ISTA and subgradient descent for solving
-            
-              min_W  loss(W) + lambda1 psi(W)
-              
-            The function psi are those used by proximalGraph (see documentation)
-            for the loss functions, see the documentation of fistaFlat
-            
-            This function can also handle intercepts (last row of W is not regularized),
-            and/or non-negativity constraints on W.
-
-    Args:
-        Y: double dense m x n matrix
-        X: double dense or sparse m x p matrix   
-        W0: double dense p x n matrix or p x Nn matrix (for multi-logistic loss)
-          initial guess
-        graph: struct (see documentation of proximalGraph)
-        return_optim_info: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        loss: (choice of loss, see above)
-        regul: (choice of regularization, see function proximalFlat)
-        lambda1: (regularization parameter)
-        lambda2: (optional, regularization parameter, 0 by default)
-        lambda3: (optional, regularization parameter, 0 by default)
-        verbose: (optional, verbosity level, false by default)
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        max_it: (optional, maximum number of iterations, 100 by default)
-        it0: (optional, frequency for computing duality gap, every 10 iterations by default)
-        tol: (optional, tolerance for stopping criteration, which is a relative duality gap
-          if it is available, or a relative change of parameters).
-        gamma: (optional, multiplier for increasing the parameter L in fista, 1.5 by default)
-        L0: (optional, initial parameter L in fista, 0.1 by default, should be small enough)
-        fixed_step: (deactive the line search for L in fista and use L0 instead)
-        compute_gram: (optional, pre-compute X^TX, false by default).
-        intercept: (optional, do not regularize last row of W, false by default).
-        ista: (optional, use ista instead of fista, false by default).
-        subgrad: (optional, if not ista, use subradient descent instead of fista, false by default).
-        a: 
-        b: (optional, if subgrad, the gradient step is a/(t+b)
-          also similar options as proximalTree
-          
-          the function also implements the ADMM algorithm via an option admm=true. It is not documented
-          and you need to look at the source code to use it.
-        delta: undocumented; modify at your own risks!
-        c: undocumented; modify at your own risks!
-        max_iter_backtracking: undocumented; modify at your own risks!
-        lin_admm: undocumented; modify at your own risks!
-        admm: undocumented; modify at your own risks!
-        resetflow: undocumented; modify at your own risks!
-        clever: undocumented; modify at your own risks!
-        log: undocumented; modify at your own risks!
-        logName: undocumented; modify at your own risks!
-        is_inner_weights: undocumented; modify at your own risks!
-        inner_weights: undocumented; modify at your own risks!
-        sqrt_step: undocumented; modify at your own risks!
-        size_group: undocumented; modify at your own risks!
-        transpose: undocumented; modify at your own risks!
-
-    Returns:
-        W: double dense p x n matrix or p x Nn matrix (for multi-logistic loss)
-        optim: optional, double dense 4 x n matrix.
-          first row: values of the objective functions.
-          third row: values of the relative duality gap (if available)
-          fourth row: number of iterations
-        optim_info: vector of size 4, containing information of the optimization.
-          W = spams.fistaGraph(Y,X,W0,graph,return_optim_info = False,...)
-          (W,optim_info) = spams.fistaGraph(Y,X,W0,graph,return_optim_info = True,...)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        Valid values for the regularization parameter (regul) are:
-          "l0", "l1", "l2", "linf", "l2-not-squared", "elastic-net", "fused-lasso",
-          "group-lasso-l2", "group-lasso-linf", "sparse-group-lasso-l2",
-          "sparse-group-lasso-linf", "l1l2", "l1linf", "l1l2+l1", "l1linf+l1",
-          "tree-l0", "tree-l2", "tree-linf", "graph", "graph-ridge", "graph-l2",
-          "multi-task-tree", "multi-task-graph", "l1linf-row-column", "trace-norm",
-          "trace-norm-vec", "rank", "rank-vec", "none"
-
-    """
-
-
-    if(len(graph) != 3):
-        raise ValueError("fistaGraph : graph should be a list of 3 elements")
-    eta_g = graph['eta_g']
-    groups = graph['groups']
-    if groups == None:
-        groups = np.array([],dtype=np.int32,order="FORTRAN")
-    if inner_weights == None:
-        inner_weights = np.array([0.],dtype=X.dtype)
-    groups_var = graph['groups_var']
-    W = np.zeros((W0.shape[0],W0.shape[1]),dtype=W0.dtype,order="FORTRAN")
-    optim_info = spams_wrap.fistaGraph(Y,X,W0,W,eta_g,groups,groups_var,numThreads ,max_it ,L0,fixed_step,gamma,lambda1,delta,lambda2,lambda3,a,b,c,tol,it0,max_iter_backtracking,compute_gram,lin_admm,admm,intercept,resetflow,regul,loss,verbose,pos,clever,log,ista,subgrad,logName,is_inner_weights,inner_weights,size_group,sqrt_step,transpose,linesearch_mode)
-    if return_optim_info:
-        return(W,optim_info)
-    else:
-        return W
-
-def proximalFlat(U,return_val_loss = False,numThreads =-1,lambda1=1.0,lambda2=0.,
-                 lambda3=0.,intercept=False,resetflow=False,regul="",verbose=False,
-                 pos=False,clever=True,size_group=1,groups = None,transpose=False):
-    """
-        proximalFlat computes proximal operators. Depending
-            on the value of regul, it computes 
-            
-
-        Given an input matrix U=[u^1,\ldots,u^n], it computes a matrix 
-        V=[v^1,\ldots,v^n] such that
-        if one chooses a regularization functions on vectors, it computes
-        for each column u of U, a column v of V solving
-        if regul='l0'
-            argmin 0.5||u-v||_2^2 + lambda1||v||_0
-        if regul='l1'
-            argmin 0.5||u-v||_2^2 + lambda1||v||_1
-        if regul='l2'
-            argmin 0.5||u-v||_2^2 + 0.5lambda1||v||_2^2
-        if regul='elastic-net'
-            argmin 0.5||u-v||_2^2 + lambda1||v||_1 + lambda1_2||v||_2^2
-        if regul='fused-lasso'
-            argmin 0.5||u-v||_2^2 + lambda1 FL(v) + ...
-                              ...  lambda1_2||v||_1 + lambda1_3||v||_2^2
-        if regul='linf'
-            argmin 0.5||u-v||_2^2 + lambda1||v||_inf
-        if regul='l1-constraint'
-            argmin 0.5||u-v||_2^2 s.t. ||v||_1 <= lambda1
-        if regul='l2-not-squared'
-            argmin 0.5||u-v||_2^2 + lambda1||v||_2
-        if regul='group-lasso-l2'  
-            argmin 0.5||u-v||_2^2 + lambda1 sum_g ||v_g||_2 
-            where the groups are either defined by groups or by size_group,
-        if regul='group-lasso-linf'
-            argmin 0.5||u-v||_2^2 + lambda1 sum_g ||v_g||_inf
-        if regul='sparse-group-lasso-l2'  
-            argmin 0.5||u-v||_2^2 + lambda1 sum_g ||v_g||_2 + lambda1_2 ||v||_1
-            where the groups are either defined by groups or by size_group,
-        if regul='sparse-group-lasso-linf'
-            argmin 0.5||u-v||_2^2 + lambda1 sum_g ||v_g||_inf + lambda1_2 ||v||_1
-        if regul='trace-norm-vec' 
-            argmin 0.5||u-v||_2^2 + lambda1 ||mat(v)||_* 
-           where mat(v) has size_group rows
-           
-        if one chooses a regularization function on matrices
-        if regul='l1l2',  V= 
-            argmin 0.5||U-V||_F^2 + lambda1||V||_{1/2}
-        if regul='l1linf',  V= 
-            argmin 0.5||U-V||_F^2 + lambda1||V||_{1/inf}
-        if regul='l1l2+l1',  V= 
-            argmin 0.5||U-V||_F^2 + lambda1||V||_{1/2} + lambda1_2||V||_{1/1}
-        if regul='l1linf+l1',  V= 
-            argmin 0.5||U-V||_F^2 + lambda1||V||_{1/inf} + lambda1_2||V||_{1/1}
-        if regul='l1linf+row-column',  V= 
-            argmin 0.5||U-V||_F^2 + lambda1||V||_{1/inf} + lambda1_2||V'||_{1/inf}
-        if regul='trace-norm',  V= 
-            argmin 0.5||U-V||_F^2 + lambda1||V||_*
-        if regul='rank',  V= 
-            argmin 0.5||U-V||_F^2 + lambda1 rank(V)
-        if regul='none',  V= 
-            argmin 0.5||U-V||_F^2 
-            
-        for all these regularizations, it is possible to enforce non-negativity constraints
-        with the option pos, and to prevent the last row of U to be regularized, with
-        the option intercept
-
-    Args:
-        U: double m x n matrix   (input signals)
-          m is the signal size
-        return_val_loss: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        lambda1: (regularization parameter)
-        regul: (choice of regularization, see above)
-        lambda2: (optional, regularization parameter)
-        lambda3: (optional, regularization parameter)
-        verbose: (optional, verbosity level, false by default)
-        intercept: (optional, last row of U is not regularized,
-          false by default)
-        transpose: (optional, transpose the matrix in the regularization function)
-        size_group: (optional, for regularization functions assuming a group
-          structure). It is a scalar. When groups is not specified, it assumes
-          that the groups are the sets of consecutive elements of size size_group
-        groups: (int32, optional, for regularization functions assuming a group
-          structure. It is an int32 vector of size m containing the group indices of the
-          variables (first group is 1).
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        resetflow: undocumented; modify at your own risks!
-        clever: undocumented; modify at your own risks!
-
-    Returns:
-        V: double m x n matrix (output coefficients)
-        val_regularizer: double 1 x n vector (value of the regularization
-          term at the optimum).
-        val_loss: vector of size U.shape[1]
-          alpha = spams.proximalFlat(U,return_val_loss = False,...)
-          (alpha,val_loss) = spams.proximalFlat(U,return_val_loss = True,...)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        Valid values for the regularization parameter (regul) are:
-          "l0", "l1", "l2", "linf", "l2-not-squared", "elastic-net", "fused-lasso",
-          "group-lasso-l2", "group-lasso-linf", "sparse-group-lasso-l2",
-          "sparse-group-lasso-linf", "l1l2", "l1linf", "l1l2+l1", "l1linf+l1",
-          "tree-l0", "tree-l2", "tree-linf", "graph", "graph-ridge", "graph-l2",
-          "multi-task-tree", "multi-task-graph", "l1linf-row-column", "trace-norm",
-          "trace-norm-vec", "rank", "rank-vec", "none"
-
-    """
-
-
-#    paramlist = [("numThreads" ,-1), ('lambda',1.0),('lambda2',0.),
-#                 ('lambda3',0.),('intercept',False),('resetflow',False),
-#                 ('regul',""),('verbose',False),('pos',False),
-#                 ('clever',True),('eval',return_val_loss),
-#                 ('size_group',1),('transpose',False)]
-#    params = __param_struct(paramlist,param)
-
-    if groups == None:
-        groups = np.array([],dtype=np.int32,order="FORTRAN")
-
-    eval = return_val_loss
-    alpha = np.zeros((U.shape[0],U.shape[1]),dtype=U.dtype,order="FORTRAN")
-    val_loss = spams_wrap.proximalFlat(U,alpha,groups,numThreads ,lambda1,lambda2,lambda3,intercept,resetflow,regul,verbose,pos,clever,eval,size_group,transpose)
-    if return_val_loss:
-        return(alpha,val_loss)
-    else:
-        return alpha
-
-def proximalTree(U,tree,return_val_loss = False,numThreads =-1,lambda1=1.0,lambda2=0.,
-                 lambda3=0.,intercept=False,resetflow=False,regul="",verbose=False,
-                 pos=False,clever=True,size_group=1,transpose=False):
-    """
-        proximalTree computes a proximal operator. Depending
-            on the value of regul, it computes 
-            
-
-        Given an input matrix U=[u^1,\ldots,u^n], and a tree-structured set of groups T,
-        it returns a matrix V=[v^1,\ldots,v^n]:
-        
-        when the regularization function is for vectors,
-        for every column u of U, it compute a column v of V solving
-        if regul='tree-l0'
-            argmin 0.5||u-v||_2^2 + lambda1 \sum_{g \in T} \delta^g(v)
-        if regul='tree-l2'
-          for all i, v^i = 
-            argmin 0.5||u-v||_2^2 + lambda1\sum_{g \in T} \eta_g||v_g||_2
-        if regul='tree-linf'
-          for all i, v^i = 
-            argmin 0.5||u-v||_2^2 + lambda1\sum_{g \in T} \eta_g||v_g||_inf
-            
-        when the regularization function is for matrices:
-        if regul='multi-task-tree'
-           V=argmin 0.5||U-V||_F^2 + lambda1 \sum_{i=1}^n\sum_{g \in T} \eta_g||v^i_g||_inf + ...
-                                               lambda1_2 \sum_{g \in T} \eta_g max_{j in g}||V_j||_{inf}
-                                               
-        it can also be used with any non-tree-structured regularization addressed by proximalFlat
-        
-        for all these regularizations, it is possible to enforce non-negativity constraints
-        with the option pos, and to prevent the last row of U to be regularized, with
-        the option intercept
-
-    Args:
-        U: double m x n matrix   (input signals)
-          m is the signal size
-        tree: named list 
-          with four fields, eta_g, groups, own_variables and N_own_variables.
-          
-          The tree structure requires a particular organization of groups and variables
-          * Let us denote by N = |T|, the number of groups.
-          the groups should be ordered T={g1,g2,\ldots,gN} such that if gi is included
-          in gj, then j <= i. g1 should be the group at the root of the tree 
-          and contains every variable.
-          * Every group is a set of  contiguous indices for instance 
-          gi={3,4,5} or gi={4,5,6,7} or gi={4}, but not {3,5};
-          * We define root(gi) as the indices of the variables that are in gi,
-          but not in its descendants. For instance for
-          T={ g1={1,2,3,4},g2={2,3},g3={4} }, then, root(g1)={1}, 
-          root(g2)={2,3}, root(g3)={4},
-          We assume that for all i, root(gi) is a set of contigous variables
-          * We assume that the smallest of root(gi) is also the smallest index of gi.
-          
-          For instance, 
-          T={ g1={1,2,3,4},g2={2,3},g3={4} }, is a valid set of groups.
-          but we can not have
-          T={ g1={1,2,3,4},g2={1,2},g3={3} }, since root(g1)={4} and 4 is not the
-          smallest element in g1.
-          
-          We do not lose generality with these assumptions since they can be fullfilled for any
-          tree-structured set of groups after a permutation of variables and a correct ordering of the
-          groups.
-          see more examples in test_ProximalTree.m of valid tree-structured sets of groups.
-          
-          The first fields sets the weights for every group
-          tree['eta_g']            double N vector 
-          
-          The next field sets inclusion relations between groups 
-          (but not between groups and variables):
-          tree['groups']           sparse (double or boolean) N x N matrix  
-          the (i,j) entry is non-zero if and only if i is different than j and 
-          gi is included in gj.
-          the first column corresponds to the group at the root of the tree.
-          
-          The next field define the smallest index of each group gi, 
-          which is also the smallest index of root(gi)
-          tree['own_variables']    int32 N vector
-          
-          The next field define for each group gi, the size of root(gi)
-          tree['N_own_variables']  int32 N vector 
-          
-          examples are given in test_ProximalTree.m
-          
-        return_val_loss: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        lambda1: (regularization parameter)
-        regul: (choice of regularization, see above)
-        lambda2: (optional, regularization parameter)
-        lambda3: (optional, regularization parameter)
-        verbose: (optional, verbosity level, false by default)
-        intercept: (optional, last row of U is not regularized,
-          false by default)
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        transpose: (optional, transpose the matrix in the regularization function)
-        size_group: (optional, for regularization functions assuming a group
-          structure). It is a scalar. When groups is not specified, it assumes
-          that the groups are the sets of consecutive elements of size size_group
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        resetflow: undocumented; modify at your own risks!
-        clever: undocumented; modify at your own risks!
-
-    Returns:
-        V: double m x n matrix (output coefficients)
-        val_regularizer: double 1 x n vector (value of the regularization
-          term at the optimum).
-        val_loss: vector of size U.shape[1]
-          alpha = spams.proximalTree(U,tree,return_val_loss = False,...)
-          (alpha,val_loss) = spams.proximalTree(U,tree,return_val_loss = True,...)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        Valid values for the regularization parameter (regul) are:
-          "l0", "l1", "l2", "linf", "l2-not-squared", "elastic-net", "fused-lasso",
-          "group-lasso-l2", "group-lasso-linf", "sparse-group-lasso-l2",
-          "sparse-group-lasso-linf", "l1l2", "l1linf", "l1l2+l1", "l1linf+l1",
-          "tree-l0", "tree-l2", "tree-linf", "graph", "graph-ridge", "graph-l2",
-          "multi-task-tree", "multi-task-graph", "l1linf-row-column", "trace-norm",
-          "trace-norm-vec", "rank", "rank-vec", "none"
-
-    """
-
-
-#    paramlist = [("numThreads" ,-1), ('lambda',1.0),('lambda2',0.),
-#                 ('lambda3',0.),('intercept',False),('resetflow',False),
-#                 ('regul',""),('verbose',False),('pos',False),
-#                 ('clever',True),('eval',return_val_loss),
-#                 ('size_group',1),('transpose',False)]
-#    params = __param_struct(paramlist,param)
-    eval = return_val_loss
-    alpha = np.zeros((U.shape[0],U.shape[1]),dtype=U.dtype,order="FORTRAN")
-    if(len(tree) != 4):
-        raise ValueError("proximalTree : tree should be a named list of 4 elements")
-    eta_g = tree['eta_g']
-    groups = tree['groups']
-    own_variables = tree['own_variables']
-    N_own_variables = tree['N_own_variables']
-    val_loss = spams_wrap.proximalTree(U,alpha,eta_g,groups,own_variables,N_own_variables,numThreads ,lambda1,lambda2,lambda3,intercept,resetflow,regul,verbose,pos,clever,eval,size_group,transpose)
-    if return_val_loss:
-        return(alpha,val_loss)
-    else:
-        return alpha
-
-def proximalGraph(U,graph,return_val_loss = False,numThreads =-1,lambda1=1.0,lambda2=0.,
-                 lambda3=0.,intercept=False,resetflow=False,regul="",verbose=False,
-                 pos=False,clever=True,eval= None,size_group=1,transpose=False):
-    """
-        proximalGraph computes a proximal operator. Depending
-            on the value of regul, it computes 
-            
-
-        Given an input matrix U=[u^1,\ldots,u^n], and a set of groups G,
-        it computes a matrix V=[v^1,\ldots,v^n] such that
-        
-        if regul='graph'
-        for every column u of U, it computes a column v of V solving
-            argmin 0.5||u-v||_2^2 + lambda1\sum_{g \in G} \eta_g||v_g||_inf
-            
-        if regul='graph+ridge'
-        for every column u of U, it computes a column v of V solving
-            argmin 0.5||u-v||_2^2 + lambda1\sum_{g \in G} \eta_g||v_g||_inf + lambda1_2||v||_2^2
-            
-            
-        if regul='multi-task-graph'
-           V=argmin 0.5||U-V||_F^2 + lambda1 \sum_{i=1}^n\sum_{g \in G} \eta_g||v^i_g||_inf + ...
-                                               lambda1_2 \sum_{g \in G} \eta_g max_{j in g}||V_j||_{inf}
-                                               
-        it can also be used with any regularization addressed by proximalFlat
-        
-        for all these regularizations, it is possible to enforce non-negativity constraints
-        with the option pos, and to prevent the last row of U to be regularized, with
-        the option intercept
-
-    Args:
-        U: double p x n matrix   (input signals)
-          m is the signal size
-        graph: struct
-          with three fields, eta_g, groups, and groups_var
-          
-          The first fields sets the weights for every group
-          graph.eta_g            double N vector 
-          
-          The next field sets inclusion relations between groups 
-          (but not between groups and variables):
-          graph.groups           sparse (double or boolean) N x N matrix  
-          the (i,j) entry is non-zero if and only if i is different than j and 
-          gi is included in gj.
-          
-          The next field sets inclusion relations between groups and variables
-          graph.groups_var       sparse (double or boolean) p x N matrix
-          the (i,j) entry is non-zero if and only if the variable i is included 
-          in gj, but not in any children of gj.
-          
-          examples are given in test_ProximalGraph.m
-          
-        return_val_loss: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        lambda1: (regularization parameter)
-        regul: (choice of regularization, see above)
-        lambda2: (optional, regularization parameter)
-        lambda3: (optional, regularization parameter)
-        verbose: (optional, verbosity level, false by default)
-        intercept: (optional, last row of U is not regularized,
-          false by default)
-        pos: (optional, adds positivity constraints on the
-          coefficients, false by default)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        resetflow: undocumented; modify at your own risks!
-        clever: undocumented; modify at your own risks!
-        size_group: undocumented; modify at your own risks!
-        transpose: undocumented; modify at your own risks!
-
-    Returns:
-        V: double p x n matrix (output coefficients)
-        val_regularizer: double 1 x n vector (value of the regularization
-          term at the optimum).
-        val_loss: vector of size U.shape[1]
-          alpha = spams.proximalGraph(U,graph,return_val_loss = False,...)
-          (alpha,val_loss) = spams.proximalGraph(U,graph,return_val_loss = True,...)
-
-    Authors:
-    Julien MAIRAL, 2010 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        Valid values for the regularization parameter (regul) are:
-          "l0", "l1", "l2", "linf", "l2-not-squared", "elastic-net", "fused-lasso",
-          "group-lasso-l2", "group-lasso-linf", "sparse-group-lasso-l2",
-          "sparse-group-lasso-linf", "l1l2", "l1linf", "l1l2+l1", "l1linf+l1",
-          "tree-l0", "tree-l2", "tree-linf", "graph", "graph-ridge", "graph-l2",
-          "multi-task-tree", "multi-task-graph", "l1linf-row-column", "trace-norm",
-          "trace-norm-vec", "rank", "rank-vec", "none"
-
-    """
-
-
-    eval = return_val_loss
-    if(len(graph) != 3):
-        raise ValueError("proximalGraph : tree should be a named list of 3 elements")
-    eta_g = graph['eta_g']
-    groups = graph['groups']
-    groups_var = graph['groups_var']
-    alpha = np.zeros((U.shape[0],U.shape[1]),dtype=U.dtype,order="FORTRAN")
-    val_loss = spams_wrap.proximalGraph(U,alpha,eta_g,groups,groups_var,numThreads ,lambda1,lambda2,lambda3,intercept,resetflow,regul,verbose,pos,clever,eval,size_group,transpose)
-    if return_val_loss:
-        return(alpha,val_loss)
-    else:
-        return alpha
-
-
-###########  END prox ##############
-##################################################
-
-###########  dictLearn ##################
-def __allTrainDL(X,return_model= None,model= None,in_memory= False,
-                 D = None,graph= None, tree = None,numThreads = -1,
-                 tol = 0.000001,fixed_step = True,ista = False,
-                 batchsize = -1,K= -1,lambda1= None,lambda2= 10e-10,lambda3 = 0.,iter=-1,t0=1e-5,
-                 mode=spams_wrap.PENALTY,regul= "none",posAlpha=False,posD=False,expand=False,modeD=spams_wrap.L2,
-                 whiten=False,clean=True,verbose=True,gamma1=0.,gamma2=0.,rho=1.0,iter_updateD=1,
-                 stochastic_deprecated=False,modeParam=0,batch=False,log_deprecated=False,logName=''):
-
-#    paramlist = [("D",np.array([[],[]],dtype=np.float64,order="FORTRAN")),("numThreads" ,-1),("batchsize", -1),
-#                 ("K", -1),('lambda', None),('lambda2', 10e-10),
-#                 ('iter',-1),('t0',1e-5),('mode',spams_wrap.PENALTY),
-#                 ('posAlpha',False),('posD',False),('expand',False),
-#                 ('modeD',spams_wrap.L2),('whiten',False),('clean',True),
-#                 ('verbose',True),('gamma1',0.),('gamma2',0.),
-#                 ('rho',1.0),('iter_updateD',1.),('stochastic_deprecated',False),
-#                 ('modeParam',0),('batch',False),('log_deprecated',False),
-#                 ('logName','')
-#                 ]
-#    params = __param_struct(paramlist,param)
-    if D == None:
-        D = np.array([[],[]],dtype=X.dtype,order="FORTRAN")
-    if lambda1 == None:
-        raise ValueError("trainDL : lambda1 must be defined")
-
-    if tree == None and graph == None:
-        eta_g = np.array([],dtype=X.dtype,order="FORTRAN")
-        groups = ssp.csc_matrix(np.array([[False],[False]],dtype=np.bool,order="FORTRAN"))
-    if tree != None:
-        if not ('eta_g' in tree and 'groups' in tree and 
-                'own_variables' in tree and 'N_own_variables' in tree):
-            raise ValueError("structTrainDL : incorrect tree structure")
-        if graph != None:
-            raise ValueError("structTrainDL : only one of tree or graph can be given")
-        eta_g = tree['eta_g']
-        groups = tree['groups']
-        own_variables = tree['own_variables']
-        N_own_variables = tree['N_own_variables']
-    else:
-        own_variables = np.array([],dtype=np.int32,order="FORTRAN")
-        N_own_variables = np.array([],dtype=np.int32,order="FORTRAN")
-
-    if graph != None:
-        if not ('eta_g' in graph and 'groups' in graph and 'groups_var' in graph):
-            raise ValueError("structTrainDL : incorrect graph structure")
-        eta_g = graph['eta_g']
-        groups = graph['groups']
-        groups_var = graph['groups_var']
-    else:
-        groups_var = ssp.csc_matrix(np.array([[False],[False]],dtype=np.bool,order="FORTRAN"))
-
-    if model == None:
-        m_A = np.array([[],[]],dtype=X.dtype,order="FORTRAN")
-        m_B = np.array([[],[]],dtype=X.dtype,order="FORTRAN")
-        m_iter = 0
-    else:
-        m_A = model['A']
-        m_B = model['B']
-        m_iter = int(model['iter'])
-    x = spams_wrap.alltrainDL(
-        X,in_memory,return_model,m_A,m_B,m_iter,D,
-        eta_g, groups, groups_var, own_variables, N_own_variables,
-        numThreads,tol,fixed_step,ista,batchsize,K,lambda1,lambda2,lambda3,
-        iter,t0,mode,regul,posAlpha,posD,
-        expand,modeD,whiten,clean,verbose,gamma1,gamma2,rho,iter_updateD,
-        stochastic_deprecated,modeParam,batch,log_deprecated,logName)
-
-    if return_model:
-        (D,A,B,iter) = x
-        model = {'A' : A, 'B' : B, 'iter' : iter[0]}
-        return (D,model)
-    else:
-        return x
-
-def trainDL(
-    X,return_model= False,model= None,D = None,
-    numThreads = -1,batchsize = -1,K= -1,lambda1= None,
-    lambda2= 10e-10,iter=-1,t0=1e-5,mode=spams_wrap.PENALTY,posAlpha=False,posD=False,
-    expand=False,modeD=spams_wrap.L2,whiten=False,clean=True,verbose=True,gamma1=0.,gamma2=0.,
-    rho=1.0,iter_updateD=None,stochastic_deprecated=False,modeParam=0,batch=False,
-    log_deprecated=False,logName=''):
-    """
-        trainDL is an efficient implementation of the
-        dictionary learning technique presented in
-        
-
-        "Online Learning for Matrix Factorization and Sparse Coding"
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        arXiv:0908.0050
-        
-        "Online Dictionary Learning for Sparse Coding"      
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        ICML 2009.
-        
-        Note that if you use mode=1 or 2, if the training set has a
-        reasonable size and you have enough memory on your computer, you 
-        should use trainDL_Memory instead.
-        
-        
-        It addresses the dictionary learning problems
-           1) if mode=0
-        min_{D in C} (1/n) sum_{i=1}^n (1/2)||x_i-Dalpha_i||_2^2  s.t. ...
-                                                     ||alpha_i||_1 <= lambda1
-           2) if mode=1
-        min_{D in C} (1/n) sum_{i=1}^n  ||alpha_i||_1  s.t.  ...
-                                              ||x_i-Dalpha_i||_2^2 <= lambda1
-           3) if mode=2
-        min_{D in C} (1/n) sum_{i=1}^n (1/2)||x_i-Dalpha_i||_2^2 + ... 
-                                     lambda1||alpha_i||_1 + lambda1_2||alpha_i||_2^2
-           4) if mode=3, the sparse coding is done with OMP
-        min_{D in C} (1/n) sum_{i=1}^n (1/2)||x_i-Dalpha_i||_2^2  s.t. ... 
-                                                     ||alpha_i||_0 <= lambda1
-           5) if mode=4, the sparse coding is done with OMP
-        min_{D in C} (1/n) sum_{i=1}^n  ||alpha_i||_0  s.t.  ...
-                                              ||x_i-Dalpha_i||_2^2 <= lambda1
-           6) if mode=5, the sparse coding is done with OMP
-        min_{D in C} (1/n) sum_{i=1}^n 0.5||x_i-Dalpha_i||_2^2 +lambda1||alpha_i||_0  
-        
-        
-        C is a convex set verifying
-           1) if modeD=0
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 <= 1 }
-           2) if modeD=1
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 + ... 
-                                                     gamma1||d_j||_1 <= 1 }
-           3) if modeD=2
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 + ... 
-                                     gamma1||d_j||_1 + gamma2 FL(d_j) <= 1 }
-           4) if modeD=3
-              C={  D in Real^{m x p}  s.t.  forall j,  (1-gamma1)||d_j||_2^2 + ... 
-                                     gamma1||d_j||_1 <= 1 }
-                                     
-        Potentially, n can be very large with this algorithm.
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        return_model: 
-          if true the function will return the model
-          as a named list ('A' = A, 'B' = B, 'iter' = n)
-        model: None or model (as A,B,iter) to use as initialisation
-
-    Kwargs:
-        D: (optional) double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-          When D is not provided, the dictionary is initialized 
-          with random elements from the training set.
-        K: (size of the dictionary, optional is D is provided)
-        lambda1: (parameter)
-        lambda2: (optional, by default 0)
-        iter: (number of iterations).  If a negative number is 
-          provided it will perform the computation during the
-          corresponding number of seconds. For instance iter=-5
-          learns the dictionary during 5 seconds.
-        mode: (optional, see above, by default 2) 
-        posAlpha: (optional, adds positivity constraints on the
-          coefficients, false by default, not compatible with 
-          mode =3,4)
-        modeD: (optional, see above, by default 0)
-        posD: (optional, adds positivity constraints on the 
-          dictionary, false by default, not compatible with 
-          modeD=2)
-        gamma1: (optional parameter for modeD >= 1)
-        gamma2: (optional parameter for modeD = 2)
-        batchsize: (optional, size of the minibatch, by default 
-          512)
-        iter_updateD: (optional, number of BCD iterations for the dictionary
-          update step, by default 1)
-        modeParam: (optimization mode).
-          1) if modeParam=0, the optimization uses the 
-          parameter free strategy of the ICML paper
-          2) if modeParam=1, the optimization uses the 
-          parameters rho as in arXiv:0908.0050
-          3) if modeParam=2, the optimization uses exponential 
-          decay weights with updates of the form 
-          A_{t} <- rho A_{t-1} + alpha_t alpha_t^T
-        rho: (optional) tuning parameter (see paper arXiv:0908.0050)
-        t0: (optional) tuning parameter (see paper arXiv:0908.0050)
-        clean: (optional, true by default. prunes 
-          automatically the dictionary from unused elements).
-        verbose: (optional, true by default, increase verbosity)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        expand: undocumented; modify at your own risks!
-        whiten: undocumented; modify at your own risks!
-        stochastic_deprecated: undocumented; modify at your own risks!
-        batch: undocumented; modify at your own risks!
-        log_deprecated: undocumented; modify at your own risks!
-        logName: undocumented; modify at your own risks!
-
-    Returns:
-        D: double m x p matrix   (dictionary)
-        model: the model as A B iter
-          D = spams.trainDL(X,return_model = False,...)
-          (D,model) = spams.trainDL(X,return_model = True,...)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting 
-
-    """
-
-
-    if iter_updateD == None:
-        if batch:
-            iter_updateD = 5
-        else:
-            iter_updateD = 1
-    lambda3 = 0.
-    regul = None
-    return __allTrainDL(X,return_model,model,False,D,None,None,numThreads,0.000001,True,False,batchsize,K,lambda1,lambda2,lambda3,iter,t0,mode,regul,posAlpha,posD,expand,modeD,whiten,clean,verbose,gamma1,gamma2,rho,iter_updateD,stochastic_deprecated,modeParam,batch,log_deprecated,logName)
-
-def structTrainDL(
-    X,return_model= False,model= None,D = None,
-    graph = None, tree = None,
-    numThreads = -1,tol = 0.000001,fixed_step = True,ista = False,batchsize = -1,K= -1,lambda1= None,
-    lambda2= 10e-10,lambda3 = 0.,iter=-1,t0=1e-5,regul = "none",posAlpha=False,posD=False,
-    expand=False,modeD=spams_wrap.L2,whiten=False,clean=True,verbose=True,gamma1=0.,gamma2=0.,
-    rho=1.0,iter_updateD=None,stochastic_deprecated=False,modeParam=0,batch=False,
-    log_deprecated=False,logName=''):
-    """
-        structTrainDL is an efficient implementation of the
-        dictionary learning technique presented in
-        
-
-        "Online Learning for Matrix Factorization and Sparse Coding"
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        arXiv:0908.0050
-        
-        "Online Dictionary Learning for Sparse Coding"      
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        ICML 2009.
-        
-        
-        It addresses the dictionary learning problems
-           min_{D in C} (1/n) sum_{i=1}^n 0.5||x_i-Dalpha_i||_2^2 + lambda1 psi(alpha)
-           where the regularization function psi depends on regul
-           (see proximalFlat for the description of psi,
-            and regul below for allowed values of regul)
-            
-        C is a convex set verifying
-           1) if modeD=0
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 <= 1 }
-           2) if modeD=1
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 + ... 
-                                                     gamma1||d_j||_1 <= 1 }
-           3) if modeD=2
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 + ... 
-                                     gamma1||d_j||_1 + gamma2 FL(d_j) <= 1 }
-           4) if modeD=3
-              C={  D in Real^{m x p}  s.t.  forall j,  (1-gamma1)||d_j||_2^2 + ... 
-                                     gamma1||d_j||_1 <= 1 }
-                                     
-        Potentially, n can be very large with this algorithm.
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        return_model: 
-          if true the function will return the model
-          as a named list ('A' = A, 'B' = B, 'iter' = n)
-        model: None or model (as A,B,iter) to use as initialisation
-
-    Kwargs:
-        D: (optional) double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-          When D is not provided, the dictionary is initialized 
-          with random elements from the training set.
-        K: (size of the dictionary, optional is D is provided)
-        lambda1: (parameter)
-        lambda2: (optional, by default 0)
-        lambda3: (optional, regularization parameter, 0 by default)
-        iter: (number of iterations).  If a negative number is 
-          provided it will perform the computation during the
-          corresponding number of seconds. For instance iter=-5
-          learns the dictionary during 5 seconds.
-        regul: choice of regularization : one of
-          'l0' 'l1' 'l2' 'linf' 'none' 'elastic-net' 'fused-lasso'
-          'graph' 'graph-ridge' 'graph-l2' 'tree-l0' 'tree-l2' 'tree-linf' 
-        tree: struct (see documentation of proximalTree);
-          needed for regul of graph kind.
-        graph: struct (see documentation of proximalGraph);
-          needed for regul of tree kind.
-        posAlpha: (optional, adds positivity constraints on the
-          coefficients, false by default.
-        modeD: (optional, see above, by default 0)
-        posD: (optional, adds positivity constraints on the 
-          dictionary, false by default, not compatible with 
-          modeD=2)
-        gamma1: (optional parameter for modeD >= 1)
-        gamma2: (optional parameter for modeD = 2)
-        batchsize: (optional, size of the minibatch, by default 
-          512)
-        iter_updateD: (optional, number of BCD iterations for the dictionary
-          update step, by default 1)
-        modeParam: (optimization mode).
-          1) if modeParam=0, the optimization uses the 
-          parameter free strategy of the ICML paper
-          2) if modeParam=1, the optimization uses the 
-          parameters rho as in arXiv:0908.0050
-          3) if modeParam=2, the optimization uses exponential 
-          decay weights with updates of the form 
-          A_{t} <- rho A_{t-1} + alpha_t alpha_t^T
-        ista: (optional, use ista instead of fista, false by default).
-        tol: (optional, tolerance for stopping criteration, which is a relative duality gap
-        fixed_step: (deactive the line search for L in fista and use K instead)
-        rho: (optional) tuning parameter (see paper arXiv:0908.0050)
-        t0: (optional) tuning parameter (see paper arXiv:0908.0050)
-        clean: (optional, true by default. prunes 
-          automatically the dictionary from unused elements).
-        verbose: (optional, true by default, increase verbosity)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        expand: undocumented; modify at your own risks!
-        whiten: undocumented; modify at your own risks!
-        stochastic_deprecated: undocumented; modify at your own risks!
-        batch: undocumented; modify at your own risks!
-        log_deprecated: undocumented; modify at your own risks!
-        logName: undocumented; modify at your own risks!
-
-    Returns:
-        D: double m x p matrix   (dictionary)
-        model: the model as A B iter
-          D = spams.structTrainDL(X,return_model = False,...)
-          (D,model) = spams.structTrainDL(X,return_model = True,...)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting 
-
-    """
-
-
-    if iter_updateD == None:
-        if batch:
-            iter_updateD = 5
-        else:
-            iter_updateD = 1
-    if regul == None:
-        regul = "none"
-    return __allTrainDL(X,return_model,model,False,D,graph,tree,numThreads,tol,fixed_step,ista,batchsize,K,lambda1,lambda2,lambda3,iter,t0,spams_wrap.FISTAMODE,regul,posAlpha,posD,expand,modeD,whiten,clean,verbose,gamma1,gamma2,rho,iter_updateD,stochastic_deprecated,modeParam,batch,log_deprecated,logName)
-
-def trainDL_Memory(X,D = None,numThreads = -1,batchsize = -1,
-                   K= -1,lambda1= None,iter=-1,t0=1e-5,mode=spams_wrap.PENALTY,
-                   posD=False,expand=False,modeD=spams_wrap.L2,whiten=False,clean=True,gamma1=0.,gamma2=0.,rho=1.0,iter_updateD=1,stochastic_deprecated=False,modeParam=0,batch=False,log_deprecated=False,logName=''):
-    """
-        trainDL_Memory is an efficient but memory consuming 
-        variant of the dictionary learning technique presented in
-        
-
-        "Online Learning for Matrix Factorization and Sparse Coding"
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        arXiv:0908.0050
-        
-        "Online Dictionary Learning for Sparse Coding"      
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        ICML 2009.
-        
-        Contrary to the approaches above, the algorithm here 
-           does require to store all the coefficients from all the training
-           signals. For this reason this variant can not be used with large
-           training sets, but is more efficient than the regular online
-           approach for training sets of reasonable size.
-           
-        It addresses the dictionary learning problems
-           1) if mode=1
-        min_{D in C} (1/n) sum_{i=1}^n  ||alpha_i||_1  s.t.  ...
-                                            ||x_i-Dalpha_i||_2^2 <= lambda1
-           2) if mode=2
-        min_{D in C} (1/n) sum_{i=1}^n (1/2)||x_i-Dalpha_i||_2^2 + ... 
-                                                         lambda1||alpha_i||_1  
-                                                         
-        C is a convex set verifying
-           1) if modeD=0
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 <= 1 }
-           1) if modeD=1
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 + ... 
-                                                     gamma1||d_j||_1 <= 1 }
-           1) if modeD=2
-              C={  D in Real^{m x p}  s.t.  forall j,  ||d_j||_2^2 + ... 
-                                     gamma1||d_j||_1 + gamma2 FL(d_j) <= 1 }
-                                     
-        Potentially, n can be very large with this algorithm.
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-
-    Kwargs:
-        D: (optional) double m x p matrix   (dictionary)
-          p is the number of elements in the dictionary
-          When D is not provided, the dictionary is initialized 
-          with random elements from the training set.
-        K: (size of the dictionary, optional is D is provided)
-        lambda1: (parameter)
-        iter: (number of iterations).  If a negative number is 
-          provided it will perform the computation during the
-          corresponding number of seconds. For instance iter=-5
-          learns the dictionary during 5 seconds.
-        mode: (optional, see above, by default 2) 
-        modeD: (optional, see above, by default 0)
-        posD: (optional, adds positivity constraints on the 
-          dictionary, false by default, not compatible with 
-          modeD=2)
-        gamma1: (optional parameter for modeD >= 1)
-        gamma2: (optional parameter for modeD = 2)
-        batchsize: (optional, size of the minibatch, by default 
-          512)
-        iter_updateD: (optional, number of BCD iterations for the dictionary 
-          update step, by default 1)
-        modeParam: (optimization mode).
-          1) if modeParam=0, the optimization uses the 
-          parameter free strategy of the ICML paper
-          2) if modeParam=1, the optimization uses the 
-          parameters rho as in arXiv:0908.0050
-          3) if modeParam=2, the optimization uses exponential 
-          decay weights with updates of the form 
-          A_{t} <- rho A_{t-1} + alpha_t alpha_t^T
-        rho: (optional) tuning parameter (see paper arXiv:0908.0050)
-        t0: (optional) tuning parameter (see paper arXiv:0908.0050)
-        clean: (optional, true by default. prunes 
-          automatically the dictionary from unused elements).
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        expand: undocumented; modify at your own risks!
-        whiten: undocumented; modify at your own risks!
-        stochastic_deprecated: undocumented; modify at your own risks!
-        batch: undocumented; modify at your own risks!
-        log_deprecated: undocumented; modify at your own risks!
-        logName: undocumented; modify at your own risks!
-
-    Returns:
-        D: double m x p matrix   (dictionary)
-        model: the model as A B iter
-          D = spams.trainDL_Memory(X,...)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    Note:
-        this function admits a few experimental usages, which have not
-        been extensively tested:
-            - single precision setting (even though the output alpha is double 
-              precision)
-
-    """
-
-    lambda2= 10e-10
-    verbose = False
-    posAlpha = False
-    regul = None
-    lambda3 = 0.
-    return __allTrainDL(X,False,None,True,D,None,None,numThreads,0.000001,True,False,batchsize,K,lambda1,lambda2,lambda3,iter,t0,mode,regul,posAlpha,posD,expand,modeD,whiten,clean,verbose,gamma1,gamma2,rho,iter_updateD,stochastic_deprecated,modeParam,batch,log_deprecated,logName)
-
-def nmf(X,return_lasso= False,model= None,
-        numThreads = -1,batchsize = -1,K= -1,
-        iter=-1,t0=1e-5,clean=True,rho=1.0,modeParam=0,batch=False):
-    """
-        trainDL is an efficient implementation of the
-        non-negative matrix factorization technique presented in 
-        
-
-        "Online Learning for Matrix Factorization and Sparse Coding"
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        arXiv:0908.0050
-        
-        "Online Dictionary Learning for Sparse Coding"      
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        ICML 2009.
-        
-        Potentially, n can be very large with this algorithm.
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        return_lasso: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        K: (number of required factors)
-        iter: (number of iterations).  If a negative number 
-          is provided it will perform the computation during the
-          corresponding number of seconds. For instance iter=-5
-          learns the dictionary during 5 seconds.
-        batchsize: (optional, size of the minibatch, by default 
-          512)
-        modeParam: (optimization mode).
-          1) if modeParam=0, the optimization uses the 
-          parameter free strategy of the ICML paper
-          2) if modeParam=1, the optimization uses the 
-          parameters rho as in arXiv:0908.0050
-          3) if modeParam=2, the optimization uses exponential 
-          decay weights with updates of the form  
-          A_{t} <- rho A_{t-1} + alpha_t alpha_t^T
-        rho: (optional) tuning parameter (see paper 
-          arXiv:0908.0050)
-        t0: (optional) tuning parameter (see paper 
-          arXiv:0908.0050)
-        clean: (optional, true by default. prunes automatically 
-          the dictionary from unused elements).
-        batch: (optional, false by default, use batch learning 
-          instead of online learning)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        model: struct (optional) learned model for "retraining" the data.
-
-    Returns:
-        U: double m x p matrix   
-        V: double p x n matrix   (optional)
-        model: struct (optional) learned model to be used for 
-          "retraining" the data.
-          U = spams.nmf(X,return_lasso = False,...)
-          (U,V) = spams.nmf(X,return_lasso = True,...)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-
-    lambda1 = 0
-
-    U = trainDL(X,model = model,numThreads = numThreads,batchsize = batchsize,
-                K = K,iter = iter, t0 = t0, clean = clean, rho = rho,verbose=False, 
-                modeParam = modeParam,batch = batch, lambda1 = lambda1,
-                mode = spams_wrap.PENALTY, posAlpha=True,posD=True,whiten=False)
-    if not return_lasso:
-        return U
-
-    if ssp.issparse(X):
-        raise ValueError("sparse matrix for lasso not yet implemented")
-    else:
-        V = lasso(X,D = U,return_reg_path = False, numThreads = numThreads,
-                  lambda1 = lambda1,mode = spams_wrap.PENALTY, pos=True)
-    return(U,V)
-
-def nnsc(X,return_lasso= False,model= None,lambda1= None,
-         numThreads = -1,batchsize = -1,K= -1,
-        iter=-1,t0=1e-5,clean=True,rho=1.0,modeParam=0,batch=False):
-    """
-        trainDL is an efficient implementation of the
-        non-negative sparse coding technique presented in 
-        
-
-        "Online Learning for Matrix Factorization and Sparse Coding"
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        arXiv:0908.0050
-        
-        "Online Dictionary Learning for Sparse Coding"      
-        by Julien Mairal, Francis Bach, Jean Ponce and Guillermo Sapiro
-        ICML 2009.
-        
-        Potentially, n can be very large with this algorithm.
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-        return_lasso: 
-          if true the function will return a tuple of matrices.
-
-    Kwargs:
-        K: (number of required factors)
-        lambda1: (parameter)
-        iter: (number of iterations).  If a negative number 
-          is provided it will perform the computation during the
-          corresponding number of seconds. For instance iter=-5
-          learns the dictionary during 5 seconds.
-        batchsize: (optional, size of the minibatch, by default 
-          512)
-        modeParam: (optimization mode).
-          1) if modeParam=0, the optimization uses the 
-          parameter free strategy of the ICML paper
-          2) if modeParam=1, the optimization uses the 
-          parameters rho as in arXiv:0908.0050
-          3) if modeParam=2, the optimization uses exponential 
-          decay weights with updates of the form 
-          A_{t} <- rho A_{t-1} + alpha_t alpha_t^T
-        rho: (optional) tuning parameter (see paper
-          arXiv:0908.0050)
-        t0: (optional) tuning parameter (see paper 
-          arXiv:0908.0050)
-        clean: (optional, true by default. prunes automatically 
-          the dictionary from unused elements).
-        batch: (optional, false by default, use batch learning 
-          instead of online learning)
-        numThreads: (optional, number of threads for exploiting
-          multi-core / multi-cpus. By default, it takes the value -1,
-          which automatically selects all the available CPUs/cores).
-        model: struct (optional) learned model for "retraining" the data.
-
-    Returns:
-        U: double m x p matrix   
-        V: double p x n matrix   (optional)
-        model: struct (optional) learned model to be used for 
-          "retraining" the data.
-          U = spams.nnsc(X,return_lasso = False,...)
-          (U,V) = spams.nnsc(X,return_lasso = True,...)
-
-    Authors:
-    Julien MAIRAL, 2009 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    if lambda1 == None:
-        raise ValueError("nnsc : lambda1 must be defined")
-    U = trainDL(X,model = model,numThreads = numThreads,batchsize = batchsize,
-                K = K,iter = iter, t0 = t0, clean = clean, rho = rho,verbose=False, 
-                modeParam = modeParam,batch = batch, lambda1 = lambda1,
-                mode = spams_wrap.PENALTY, posAlpha=True,posD=True,whiten=False)
-    if not return_lasso:
-        return U
-    V = lasso(X,D = U,return_reg_path = False, numThreads = numThreads,
-                  lambda1 = lambda1,mode = spams_wrap.PENALTY)
-    return(U,V)
-
-### from arch ###
-
-def archetypalAnalysis(X, p = 10, Z0 = None, returnAB = False, robust=False, epsilon=1e-3, computeXtX=False, stepsFISTA=3, stepsAS=50, randominit=False,numThreads=-1):
-    """
-        documentation to appear soon
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-
-    Returns:
-        Z: double %
-
-    Authors:
-    Yuansi Chen and Julien MAIRAL, 2014 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    if Z0 == None:
-        (Z,(indptr,indices,data,shape),(indptr2,indices2,data2,shape2)) = spams_wrap.archetypalAnalysis(X, p, robust, epsilon, computeXtX, stepsFISTA, stepsAS, randominit,numThreads)
-    else:
-        (Z,(indptr,indices,data,shape),(indptr2,indices2,data2,shape2)) = spams_wrap.archetypalAnalysisInit(X, Z0, robust, epsilon, computeXtX, stepsFISTA, stepsAS,numThreads)
-    if (returnAB):
-        A = ssp.csc_matrix((data,indices,indptr),shape)
-        B = ssp.csc_matrix((data2,indices2,indptr2),shape2)
-        return (Z,A,B)
-    else:
-        return Z
-
-def decompSimplex(X, Z, computeXtX=False,numThreads=-1):
-    """
-        documentation to appear soon
-
-    Args:
-        X: double m x n matrix   (input signals)
-          m is the signal size
-          n is the number of signals to decompose
-
-    Returns:
-        Z: double %
-
-    Authors:
-    Yuansi Chen and Julien MAIRAL, 2014 (spams, matlab interface and documentation)
-    Jean-Paul CHIEZE 2011-2012 (python interface)
-
-    """
-
-    (indptr,indices,data,shape) = spams_wrap.decompSimplex(X,Z,computeXtX,numThreads)
-    alpha = ssp.csc_matrix((data,indices,indptr),shape)
-    return alpha
-
-###########  END dictLearn ##############
-def im2col_sliding(A,m,n,RGB = False):
-    mm = A.shape[0]
-    nn = A.shape[1]
-    M = m * n
-    N =  (mm - m + 1) * (nn -n + 1)
-    B = np.empty((M,N),dtype=A.dtype,order="FORTRAN")
-    spams_wrap.im2col_sliding(A,B,m,n,RGB)
-    return B
-
-def displayPatches(D):
-    V = 1
-    (n,K) = D.shape
-    sizeEdge = np.sqrt(n)
-    if int(sizeEdge) != sizeEdge:
-        V = 3
-        sizeEdge=np.sqrt(n/V)
-        
-        
-#    for ii in xrange(0,D.shape[1]):
-#        if D[0,ii] > 0:
-#            D[:,ii] = - D[:,ii]
-    p = 4.5
-    M = np.max(D)
-    m = np.min(D)
-    if (m >= 0):
-        me = 0
-        sig = np.sqrt(np.mean(D * D))
-    else:
-        me = np.mean(D)
-        sig = np.sqrt(np.mean((D - me) * (D -me)))
-    D = D - me
-    D = np.minimum(np.maximum(D, -p * sig),p * sig)
-    M = np.max(D)
-    m = np.min(D)
-    D = (D - m)/ (M - m)
-    nb1 = np.sqrt(K)
-    nBins = int(nb1)
-    if nBins != nb1:
-        nBins += 1
-    tmp = np.zeros(((sizeEdge+1)*nBins+1,(sizeEdge+1)*nBins+1,V),order = 'F')
-#    patch = np.zeros(sizeEdge,sizeEdge)
-    mm = sizeEdge * sizeEdge
-    for ii in xrange(0,nBins):
-        for jj in xrange(0,nBins):
-            io = ii
-            jo = jj
-            offsetx = 0
-            offsety = 0
-            ii = (ii + offsetx) % nBins
-            jj = (jj + offsety) % nBins
-            ix = io*nBins+jo
-            if ix >= K:
-                break
-            patchCol = D[0:n,ix]
-            patchCol = patchCol.reshape((sizeEdge,sizeEdge,V),order= 'F')
-            tmp[ii * (sizeEdge+1)+ 1 : (ii + 1)*(sizeEdge+1),
-                jj * (sizeEdge+1)+1:(jj + 1) * (sizeEdge+1),:] = patchCol;
-            ii = io
-            jj = jo
- #   tmp = 255 * tmp
-    return tmp
-
-##################################################
-# graph
-def simpleGroupTree(degrees):
-    """
-        makes a structure representing a tree given the
-      degree of each level.
-
-    Args:
-        degrees: int vector; degrees(i) is the number of children of each node at level i
-
-    Returns:
-        group_struct: list, one element for each node
-          an element is itsel a 4 elements list :
-          nodeid (int >= 0), weight (double), array of vars attached to the node
-          (here equal to [nodeid]), array of children (nodeid's)
-
-    Authors:
-    Jean-Paul CHIEZE, 2012
-
-    """
-
-    gstruct = spams_wrap.simpleGroupTree(degrees)
-    return gstruct
-def readGroupStruct(file):
-    """
-        reads a text file describing "simply" the structure of groups
-       of variables needed by proximalGraph, proximalTree, fistaGraph,
-       fistaTree and structTrainDL and builds the corresponding group structure.
-
-        weight is a float
-        variables-list : a space separated list of integers, maybe empty,
-            but '[' and '] must be present. Numbers in the range (0 - Nv-1)
-        children-list : a space separated list of node-id's
-            If the list is empty, '->' may be omitted.
-        The data must obey some rules : 
-            - A group contains the variables of the corresponding node and of the whole subtree.
-            - Variables attached to a node are those that are not int the subtree.
-            - If the data destination is a Graph, there may be several independant trees,
-               and a varibale may appear in several trees.
-        If the destination is a Tree, there must be only one tree, the root node
-            must have id == 0 and each variable must appear only once.
-
-    Args:
-        file: the file name
-
-    Returns:
-        groups: list, one element for each node
-          an element is itsel a 4 elements list:
-          nodeid (int >= 0), weight (double), array of vars of the node,
-          array of children (nodeid's)
-
-    Authors:
-    Jean-Paul CHIEZE, 2012
-
-    """
-
-    gstruct = spams_wrap.readGroupStruct(file)
-    return gstruct
-def groupStructOfString(s):
-    """
-        decode a multi-line string describing "simply" the structure of groups
-       of variables needed by proximalGraph, proximalTree, fistaGraph,
-       fistaTree and structTrainDL and builds the corresponding group structure.
-
-        Each line describes a group of variables as a node of a tree.
-        It has up to 4 fields separated by spaces:
-            node-id node-weight [variables-list] -> children-list
-        Let's define Ng = number of groups, and Nv = number of variables.
-        node-id must be in the range (0 - Ng-1), and there must be Ng nodes
-        weight is a float
-        variables-list : a space separated list of integers, maybe empty,
-             but '[' and '] must be present. Numbers in the range (0 - Nv-1)
-        children-list : a space separated list of node-id's
-            If the list is empty, '->' may be omitted.
-        The data must obey some rules : 
-            - A group contains the variables of the corresponding node and of the whole subtree.
-            - Variables attached to a node are those that are not int the subtree.
-            - If the data destination is a Graph, there may be several independant trees,
-              and a varibale may appear in several trees.
-        If the destination is a Tree, there must be only one tree, the root node
-        must have id == 0 and each variable must appear only once.
-
-    Args:
-        s: the multi-lines string
-
-    Returns:
-        groups: list, one element for each node
-          an element is itsel a 4 elements list:
-          nodeid (int >= 0), weight (double), array of vars of the node,
-          array of children (nodeid's)
-
-    Authors:
-    Jean-Paul CHIEZE, 2012
-
-    """
-
-    gstruct = spams_wrap.groupStructOfString(s)
-    return gstruct
-
-def graphOfGroupStruct(gstruct):
-    """
-        converts a group structure into the graph structure
-       used by proximalGraph, fistaGraph or structTrainDL
-
-    Args:
-        gstruct: the structure of groups as a list, one element per node
-          an element is itself a 4 elements list:
-          nodeid (>= 0), weight (double), array of vars associated to the node,
-          array of children (nodeis's)
-
-    Returns:
-        graph: struct (see documentation of proximalGraph)
-
-    Authors:
-    Jean-Paul CHIEZE, 2012
-
-    """
-
-    (eta_g,groups,groups_var) =  spams_wrap.graphOfGroupStruct(gstruct)
-    (indptr,indices,data,shape) = groups
-    groups = ssp.csc_matrix((data,indices,indptr),shape)
-    (indptr,indices,data,shape) = groups_var
-    groups_var = ssp.csc_matrix((data,indices,indptr),shape)
-    graph = {'eta_g': eta_g,'groups' : groups,'groups_var' : groups_var}
-    return graph
-
-def treeOfGroupStruct(gstruct):
-    """
-        converts a group structure into the tree structure
-       used by proximalTree, fistaTree or structTrainDL
-
-    Args:
-        gstruct: the structure of groups as a list, one element per node
-          an element is itself a 4 lements list:
-          nodeid (>= 0), weight (double), array of vars associated to the node,
-          array of children (nodeis's)
-
-    Returns:
-        permutations: permutation vector that must be applied to the result of the
-          programm using the tree. Empty if no permutation is needed.
-        tree: named list (see documentation of proximalTree)
-        nbvars: number of variables in the tree
-          (permutations,tree,nbvars) = spams.treeOfGroupStruct(gstruct)
-
-    Authors:
-    Jean-Paul CHIEZE, 2012
-
-    """
-
-    (nbvars,perm,eta_g,groups,own_variables,N_own_variables) =  spams_wrap.treeOfGroupStruct(gstruct)
-    (indptr,indices,data,shape) = groups
-    groups = ssp.csc_matrix((data,indices,indptr),shape)
-    tree = {'eta_g': eta_g,'groups' : groups,'own_variables' : own_variables,
-                'N_own_variables' : N_own_variables}
-    return (perm,tree,nbvars)
diff --git a/.vim/dirs/backups/spyder.ini~ b/.vim/dirs/backups/spyder.ini~
deleted file mode 100644
index 98e2225..0000000
--- a/.vim/dirs/backups/spyder.ini~
+++ /dev/null
@@ -1,563 +0,0 @@
-[main]
-single_instance = True
-animated_docks = True
-lightwindow/position = (30, 30)
-lightwindow/prefs_dialog_size = (745, 411)
-cpu_usage/enable = False
-vertical_tabs = False
-tear_off_menus = False
-window/is_fullscreen = False
-window/size = (1260, 740)
-lightwindow/is_maximized = False
-memory_usage/timeout = 2000
-lightwindow/is_fullscreen = False
-use_custom_margin = True
-custom_margin = 0
-window/prefs_dialog_size = (745, 411)
-window/is_maximized = True
-show_internal_console_if_traceback = True
-lightwindow/size = (650, 400)
-vertical_dockwidget_titlebars = False
-cpu_usage/timeout = 2000
-open_files_port = 21128
-window/position = (10, 10)
-memory_usage/enable = True
-version = 9.0.0
-crash = False
-current_version = 2.3.1
-windows_style = macintosh (aqua)
-historylog_filename = /Users/elsdrm/.spyder2-py3/history.log
-window/state = '000000ff00000000fd000000010000000000000780000003c7fc0200000001fc0000002c000003c70000016100fffffffc0100000004fb0000002400500072006f006a006500630074004500780070006c006f007200650072005f006400770000000000ffffffff0000004e00fffffffb000000120045006400690074006f0072005f006400770100000000000005a50000009d00fffffffb00000024004f00750074006c0069006e0065004500780070006c006f007200650072005f006400770000000000ffffffff0000006400fffffffc000005a6000001da000000f400fffffffc0200000002fc0000002c000001d2000000c501000014fa000000000200000008fb00000024004f0062006a0065006300740049006e00730070006500630074006f0072005f006400770100000000ffffffff0000008a00fffffffb00000026005600610072006900610062006c0065004500780070006c006f007200650072005f006400770100000000ffffffff000000b000fffffffb0000001a004f006e006c0069006e006500480065006c0070005f006400770000000000ffffffff0000003c00fffffffb00000016004500780070006c006f007200650072005f006400770100000000ffffffff0000008300fffffffb0000001c00460069006e00640049006e00460069006c00650073005f006400770000000000ffffffff000000d600fffffffb0000001c0042007200650061006b0070006f0069006e00740073005f006400770000000000ffffffff0000006400fffffffb0000001600500072006f00660069006c00650072005f006400770000000000ffffffff000000a700fffffffb0000001200500079006c0069006e0074005f006400770000000000ffffffff000000a700fffffffc000001ff000001f40000009b01000014fa000000030200000004fb000000140043006f006e0073006f006c0065005f006400770000000000ffffffff0000006400fffffffb0000002400450078007400650072006e0061006c0043006f006e0073006f006c0065005f006400770100000000ffffffff0000008600fffffffb0000001a0048006900730074006f00720079004c006f0067005f006400770100000000ffffffff0000008600fffffffb0000002200490050007900740068006f006e0043006f006e0073006f006c0065005f006400770100000000ffffffff0000008600ffffff00000000000003c700000004000000040000000800000008fc0000000100000002000000080000001800660069006c0065005f0074006f006f006c0062006100720100000000ffffffff0000000000000000000000180065006400690074005f0074006f006f006c0062006100720000000000ffffffff00000000000000000000001c007300650061007200630068005f0074006f006f006c0062006100720000000000ffffffff00000000000000000000001c0073006f0075007200630065005f0074006f006f006c0062006100720000000000ffffffff00000000000000000000001600720075006e005f0074006f006f006c00620061007201000000a1ffffffff00000000000000000000001a00640065006200750067005f0074006f006f006c0062006100720100000168ffffffff000000000000000000000018006d00610069006e005f0074006f006f006c0062006100720100000255ffffffff0000000000000000000000300047006c006f00620061006c00200077006f0072006b0069006e00670020006400690072006500630074006f007200790100000300ffffffff0000000000000000'
-window/statusbar = True
-
-[quick_layouts]
-place_holder = 
-
-[editor_appearance]
-cursor/width = 2
-completion/size = (300, 180)
-
-[shell_appearance]
-cursor/width = 2
-completion/size = (300, 180)
-
-[internal_console]
-max_line_count = 300
-font/bold = False
-external_editor/path = SciTE
-light_background = True
-codecompletion/case_sensitive = True
-wrap = True
-font/italic = False
-codecompletion/enter_key = True
-external_editor/gotoline = -goto:
-working_dir_history = 30
-font/size = 12
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-calltips = True
-working_dir_adjusttocontents = False
-codecompletion/auto = False
-first_time = True
-
-[console]
-max_line_count = 500
-font/bold = False
-ets_backend = qt4
-pyqt/api_version = 2
-colorize_sys_stderr = True
-codecompletion/case_sensitive = True
-font/italic = False
-codecompletion/enter_key = True
-matplotlib/backend/enabled = True
-matplotlib/backend/value = Qt4Agg
-font/size = 12
-qt/install_inputhook = False
-show_icontext = False
-umd/enabled = True
-pyqt/ignore_sip_setapi_errors = False
-codecompletion/auto = True
-object_inspector = True
-qt/api = default
-show_elapsed_time = False
-umd/namelist = ['guidata', 'guiqwt']
-pythonstartup/default = True
-light_background = True
-wrap = True
-merge_output_channels = True
-umd/verbose = True
-monitor/enabled = True
-pythonexecutable/default = True
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-calltips = True
-single_tab = True
-pythonstartup/custom = False
-pythonexecutable/custom = False
-pythonexecutable = /usr/local/opt/python3/bin/python3.4
-pythonstartup = /usr/local/lib/python3.4/site-packages/spyderlib/scientific_startup.py
-first_time = True
-
-[ipython_console]
-font/bold = False
-pylab/backend = 0
-use_gui_completion = True
-autocall = 0
-font/italic = False
-pylab/inline/resolution = 72
-out_prompt = 
-pylab/autoload = False
-font/size = 13
-startup/use_run_file = False
-dark_color = False
-show_calltips = True
-in_prompt = 
-startup/run_file = 
-pylab/inline/width = 6
-object_inspector = True
-pylab = False
-ask_before_closing = True
-pylab/inline/figure_format = 0
-startup/run_lines = 
-light_color = True
-use_pager = False
-buffer_size = 500
-font/family = 'Consolas'
-pylab/inline/height = 4
-show_banner = True
-greedy_completer = False
-symbolic_math = False
-first_time = False
-
-[variable_explorer]
-autorefresh/timeout = 2000
-exclude_private = True
-exclude_uppercase = True
-collvalue = False
-exclude_unsupported = True
-minmax = False
-autorefresh = True
-check_all = False
-inplace = False
-exclude_capitalized = False
-truncate = True
-remote_editing = False
-excluded_names = ['nan', 'inf', 'infty', 'little_endian', 'colorbar_doc', 'typecodes', '__builtins__', '__main__', '__doc__', 'NaN', 'Inf', 'Infinity', 'sctypes', 'rcParams', 'rcParamsDefault', 'sctypeNA', 'typeNA', 'False_', 'True_']
-first_time = True
-
-[editor]
-font/bold = False
-outline_explorer = True
-tab_stop_width = 40
-printer_header/font/size = 12
-code_analysis/pep8 = False
-highlight_current_line = True
-fullpath_sorting = True
-max_recent_files = 20
-wrapflag = True
-indent_chars = *    *
-check_eol_chars = True
-close_quotes = False
-edge_line_column = 79
-object_inspector = True
-save_all_before_run = True
-todo_list = True
-edge_line = True
-printer_header/font/family = ['Sans Serif', 'DejaVu Sans', 'Bitstream Vera Sans', 'Bitstream Charter', 'Lucida Grande', 'MS Shell Dlg 2', 'Calibri', 'Verdana', 'Geneva', 'Lucid', 'Arial', 'Helvetica', 'Avant Garde', 'Times', 'sans-serif']
-wrap = False
-tab_always_indent = False
-line_numbers = True
-toolbox_panel = True
-show_tab_bar = True
-realtime_analysis/timeout = 2500
-occurence_highlighting = True
-onsave_analysis = False
-codecompletion/case_sensitive = True
-font/italic = False
-codecompletion/enter_key = True
-add_colons = True
-font/size = 12
-focus_to_editor = True
-close_parentheses = True
-auto_unindent = True
-printer_header/font/italic = False
-codecompletion/auto = True
-always_remove_trailing_spaces = False
-occurence_highlighting/timeout = 1500
-intelligent_backspace = True
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-highlight_current_cell = True
-calltips = True
-realtime_analysis = True
-code_analysis/pyflakes = True
-printer_header/font/bold = False
-go_to_definition = True
-color_scheme_name = 'Spyder'
-splitter_state = '000000ff00000000000000010000051e01000000070100000001'
-recent_files = ['/Users/elsdrm/.spyder2-py3/temp.py']
-filenames = ['/Users/elsdrm/.spyder2-py3/temp.py']
-first_time = True
-layout_settings = {'sizes': [1445], 'splitsettings': [(False, '/Users/elsdrm/.spyder2-py3/temp.py', [8])], 'hexstate': '000000ff00000000000000010000010600000000070100000001'}
-windows_layout_settings = []
-
-[historylog]
-font/bold = False
-font/size = 12
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-max_entries = 100
-wrap = True
-enable = True
-font/italic = False
-go_to_eof = True
-color_scheme_name = 'Spyder'
-first_time = False
-
-[inspector]
-font/bold = False
-math = True
-connect/ipython_console = False
-rich_text/font/family = ['Sans Serif', 'DejaVu Sans', 'Bitstream Vera Sans', 'Bitstream Charter', 'Lucida Grande', 'MS Shell Dlg 2', 'Calibri', 'Verdana', 'Geneva', 'Lucid', 'Arial', 'Helvetica', 'Avant Garde', 'Times', 'sans-serif']
-rich_text/font/size = 12
-rich_text/font/italic = False
-font/italic = False
-automatic_import = True
-font/size = 12
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-wrap = True
-enable = True
-connect/editor = False
-max_history_entries = 20
-connect/python_console = False
-rich_text/font/bold = False
-color_scheme_name = 'Spyder'
-rich_mode = False
-first_time = True
-
-[onlinehelp]
-enable = True
-zoom_factor = 0.8
-max_history_entries = 20
-first_time = True
-
-[outline_explorer]
-enable = True
-show_fullpath = False
-show_all_files = False
-show_comments = True
-expanded_state = {-7733910932431574741: True}
-first_time = True
-scrollbar_position = (0, 0)
-visibility = False
-
-[project_explorer]
-enable = True
-show_hscrollbar = True
-name_filters = ['*.py', '*.pyw', '*.ipy', '*.pyx', '*.pxd', '*.pxi', '*.c', '*.h', '*.cc', '*.cpp', '*.cxx', '*.h', '*.hh', '*.hpp', '*.hxx', '*.cl', '*.f', '*.for', '*.f77', '*.f90', '*.f95', '*.f2k', '*.pro', '*.m', '*.jl', '*.patch', '*.diff', '*.rej', '*.bat', '*.cmd', '*.txt', '*.txt', '*.rst', '*.po', '*.pot', '*.nsi', '*.nsh', '*.css', '*.htm', '*.html', '*.xml', '*.js', '*.enaml', '*.properties', '*.session', '*.ini', '*.inf', '*.reg', '*.cfg', '*.desktop', '*.txt', '*.spydata', '*.mat', '*.pickle', '*.pkl', '*.npy', '*.json', '*.npz', '*.csv', '*.png', '*.ico', '*.svg', 'README', 'INSTALL', 'LICENSE', 'CHANGELOG']
-show_all = False
-font/family = None
-workspace = None
-expanded_state = None
-first_time = True
-scrollbar_position = (0, 0)
-
-[arrayeditor]
-font/bold = False
-font/size = 12
-font/italic = False
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-
-[texteditor]
-font/bold = False
-font/size = 12
-font/italic = False
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-
-[dicteditor]
-font/bold = False
-font/size = 12
-font/italic = False
-font/family = ['Monospace', 'DejaVu Sans Mono', 'Consolas', 'Monaco', 'Bitstream Vera Sans Mono', 'Andale Mono', 'Liberation Mono', 'Courier New', 'Courier', 'monospace', 'Fixed', 'Terminal']
-
-[explorer]
-wrap = True
-show_hidden = True
-show_all = False
-enable = True
-show_icontext = False
-show_toolbar = True
-name_filters = ['*.py', '*.pyw', '*.ipy', '*.pyx', '*.pxd', '*.pxi', '*.c', '*.h', '*.cc', '*.cpp', '*.cxx', '*.h', '*.hh', '*.hpp', '*.hxx', '*.cl', '*.f', '*.for', '*.f77', '*.f90', '*.f95', '*.f2k', '*.pro', '*.m', '*.jl', '*.patch', '*.diff', '*.rej', '*.bat', '*.cmd', '*.txt', '*.txt', '*.rst', '*.po', '*.pot', '*.nsi', '*.nsh', '*.css', '*.htm', '*.html', '*.xml', '*.js', '*.enaml', '*.properties', '*.session', '*.ini', '*.inf', '*.reg', '*.cfg', '*.desktop', '*.txt', '*.spydata', '*.mat', '*.pickle', '*.pkl', '*.npy', '*.json', '*.npz', '*.csv', '*.png', '*.ico', '*.svg', 'README', 'INSTALL', 'LICENSE', 'CHANGELOG']
-font/family = None
-first_time = True
-
-[find_in_files]
-search_text = ['']
-include_regexp = True
-exclude_regexp = True
-include = ['\\.py$|\\.pyw$|\\.ipy$|\\.pyx$|\\.pxd$|\\.pxi$|\\.c$|\\.h$|\\.cc$|\\.cpp$|\\.cxx$|\\.h$|\\.hh$|\\.hpp$|\\.hxx$|\\.cl$|\\.f$|\\.for$|\\.f77$|\\.f90$|\\.f95$|\\.f2k$|\\.pro$|\\.m$|\\.jl$|\\.patch$|\\.diff$|\\.rej$|\\.bat$|\\.cmd$|\\.txt$|\\.txt$|\\.rst$|\\.po$|\\.pot$|\\.nsi$|\\.nsh$|\\.css$|\\.htm$|\\.html$|\\.xml$|\\.js$|\\.enaml$|\\.properties$|\\.session$|\\.ini$|\\.inf$|\\.reg$|\\.cfg$|\\.desktop$|README|INSTALL', '\\.pyw?$|\\.ipy$|\\.txt$|\\.rst$', '.']
-search_text_samples = ['(^|#)[ ]*(TODO|FIXME|XXX|HINT|TIP|@todo)([^#]*)']
-exclude = ['\\.pyc$|\\.pyo$|\\.orig$|\\.hg|\\.svn|\\bbuild\\b', '\\.pyc$|\\.pyo$|\\.orig$|\\.hg|\\.svn']
-supported_encodings = ['utf-8', 'iso-8859-1', 'cp1252']
-enable = True
-search_text_regexp = True
-more_options = True
-in_python_path = False
-search_path = None
-include_idx = None
-exclude_idx = None
-first_time = True
-
-[workingdir]
-working_dir_history = 20
-editor/new/browse_scriptdir = False
-editor/new/browse_workdir = True
-editor/open/auto_set_to_basedir = False
-editor/open/browse_scriptdir = True
-editor/open/browse_workdir = False
-editor/save/auto_set_to_basedir = False
-startup/use_last_directory = True
-working_dir_adjusttocontents = False
-startup/use_fixed_directory = False
-startup/fixed_directory = /Users/elsdrm
-
-[shortcuts]
-editor/move line up = Alt+Up
-_/switch to/from layout 3 = Shift+Alt+F3
-_/debug continue = Ctrl+F12
-pylint/run analysis = F8
-profiler/run profiler = F10
-editor/duplicate line = Shift+Alt+Up
-_/close pane = Shift+Ctrl+F4
-_/debug exit = Ctrl+Shift+F12
-editor/delete line = Ctrl+D
-editor/inspect current object = Ctrl+I
-editor/blockcomment = Ctrl+4
-_/quit = Ctrl+Q
-editor/go to line = Ctrl+L
-_/set layout 1 = Ctrl+Shift+Alt+F1
-_/set layout 2 = Ctrl+Shift+Alt+F2
-_/switch to historylog = Ctrl+Shift+L
-editor/unblockcomment = Ctrl+5
-_/debug step over = Ctrl+F10
-_/switch to/from layout 1 = Shift+Alt+F1
-editor/show/hide project explorer = Ctrl+Alt+P
-editor/next cursor position = Ctrl+Alt+Right
-_/switch to ipython_console = Ctrl+Shift+I
-editor/go to definition = Ctrl+G
-editor/file list management = Ctrl+E
-console/clear line = Shift+Escape
-_/fullscreen mode = F11
-_/switch to console = Ctrl+Shift+C
-_/switch to/from layout 2 = Shift+Alt+F2
-editor/find previous = Shift+F3
-_/switch to inspector = Ctrl+Shift+H
-editor/close file = Ctrl+W
-editor/find text = Ctrl+F
-editor/run = F5
-editor/last edit location = Ctrl+Alt+Shift+Left
-editor/copy line = Shift+Alt+Down
-editor/configure = F6
-editor/conditional breakpoint = Shift+F12
-console/inspect current object = Ctrl+I
-_/maximize pane = Ctrl+Alt+Shift+M
-_/switch to onlinehelp = Ctrl+Shift+D
-editor/find next = F3
-editor/re-run last script = Ctrl+F6
-_/switch to editor = Ctrl+Shift+E
-editor/new file = Ctrl+N
-editor/code completion = Meta+Space
-_/set layout 3 = Ctrl+Shift+Alt+F3
-editor/run selection = F9
-editor/print = Ctrl+P
-editor/toggle comment = Ctrl+1
-_/switch to variable_explorer = Ctrl+Shift+V
-editor/previous cursor position = Ctrl+Alt+Left
-editor/save all = Ctrl+Shift+S
-console/clear shell = Ctrl+L
-editor/close all = Ctrl+Shift+W
-editor/breakpoint = F12
-_/switch to breakpoints = Ctrl+Shift+B
-_/switch to outline_explorer = Ctrl+Shift+O
-_/debug step return = Ctrl+Shift+F11
-editor/save file = Ctrl+S
-editor/open file = Ctrl+O
-editor/show/hide outline = Ctrl+Alt+O
-editor/replace text = Ctrl+H
-_/switch to project_explorer = Ctrl+Shift+P
-editor/move line down = Alt+Down
-editor/debug with winpdb = F7
-_/preferences = Ctrl+Alt+Shift+P
-editor/debug = Ctrl+F5
-editor/go to next file = Ctrl+Shift+Tab
-_/debug step into = Ctrl+F11
-editor/go to previous file = Ctrl+Tab
-
-[color_schemes]
-zenburn/instance = ('#dcdccc', False, True)
-idle/unmatched_p = #ff9999
-pydev/keyword = ('#0000ff', False, False)
-spyder/normal = ('#000000', False, False)
-spyder/ctrlclick = #0000ff
-idle/normal = ('#000000', False, False)
-monokai/sideareas = #2a2b24
-zenburn/keyword = ('#dfaf8f', True, False)
-scintilla/number = ('#007f7f', False, False)
-pydev/comment = ('#c0c0c0', False, False)
-zenburn/string = ('#cc9393', False, False)
-scintilla/ctrlclick = #0000ff
-spyder/dark/builtin = ('#aa00aa', False, False)
-spyder/dark/sideareas = #282828
-pydev/sideareas = #efefef
-idle/ctrlclick = #0000ff
-pydev/background = #ffffff
-zenburn/unmatched_p = #bd6e76
-emacs/number = ('#800000', False, False)
-emacs/matched_p = #009800
-pydev/currentline = #e8f2fe
-monokai/ctrlclick = #0000ff
-idle/currentcell = #feefff
-monokai/keyword = ('#f92672', False, False)
-idle/builtin = ('#900090', False, False)
-spyder/dark/string = ('#11a642', False, True)
-scintilla/unmatched_p = #ff9999
-pydev/string = ('#00aa00', False, True)
-spyder/dark/ctrlclick = #0000ff
-spyder/background = #ffffff
-zenburn/normal = ('#dcdccc', False, False)
-spyder/dark/occurence = #abab67
-spyder/occurence = #ffff99
-idle/comment = ('#dd0000', False, True)
-idle/instance = ('#777777', True, True)
-spyder/currentcell = #fdfdde
-spyder/number = ('#800000', False, False)
-idle/sideareas = #efefef
-pydev/unmatched_p = #ff99992
-emacs/keyword = ('#3c51e8', False, False)
-zenburn/currentline = #333333
-emacs/background = #000000
-spyder/dark/unmatched_p = #c80000
-emacs/sideareas = #555555
-monokai/definition = ('#a6e22e', False, False)
-zenburn/ctrlclick = #0000ff
-emacs/unmatched_p = #c80000
-spyder/dark/comment = ('#7f7f7f', False, False)
-monokai/unmatched_p = #bd6e76
-pydev/currentcell = #eff8fe
-monokai/currentcell = #3d3d3d
-monokai/string = ('#e6db74', False, False)
-spyder/dark/currentline = #2b2b43
-idle/string = ('#00aa00', False, False)
-zenburn/background = #3f3f3f
-monokai/background = #2a2b24
-emacs/currentline = #2b2b43
-monokai/comment = ('#75715e', False, True)
-idle/matched_p = #99ff99
-monokai/number = ('#ae81ff', False, False)
-scintilla/comment = ('#007f00', False, False)
-scintilla/definition = ('#007f7f', True, False)
-idle/keyword = ('#ff7700', True, False)
-spyder/definition = ('#000000', True, False)
-emacs/currentcell = #1c1c2d
-spyder/dark/matched_p = #009800
-names = ['Custom', 'Emacs', 'IDLE', 'Monokai', 'Pydev', 'Scintilla', 'Spyder', 'Spyder/Dark', 'Zenburn']
-spyder/keyword = ('#0000ff', False, False)
-spyder/unmatched_p = #ff9999
-idle/background = #ffffff
-emacs/builtin = ('#900090', False, False)
-monokai/occurence = #666666
-spyder/dark/background = #131926
-spyder/dark/currentcell = #31314e
-monokai/currentline = #484848
-pydev/matched_p = #99ff99
-scintilla/keyword = ('#00007f', True, False)
-spyder/string = ('#00aa00', False, False)
-spyder/dark/normal = ('#ffffff', False, False)
-monokai/normal = ('#ddddda', False, False)
-emacs/instance = ('#ffffff', False, True)
-monokai/builtin = ('#ae81ff', False, False)
-pydev/builtin = ('#900090', False, False)
-idle/definition = ('#0000ff', False, False)
-spyder/comment = ('#adadad', False, True)
-spyder/currentline = #f7ecf8
-pydev/ctrlclick = #0000ff
-zenburn/builtin = ('#efef8f', False, False)
-idle/number = ('#924900', False, False)
-idle/currentline = #f2e6f3
-emacs/occurence = #abab67
-pydev/definition = ('#000000', True, False)
-spyder/matched_p = #99ff99
-scintilla/builtin = ('#000000', False, False)
-spyder/dark/number = ('#c80000', False, False)
-spyder/dark/definition = ('#ffffff', True, False)
-scintilla/background = #ffffff
-emacs/ctrlclick = #0000ff
-scintilla/currentline = #e1f0d1
-emacs/definition = ('#ff8040', True, False)
-spyder/sideareas = #efefef
-zenburn/number = ('#8cd0d3', False, False)
-emacs/string = ('#00aa00', False, True)
-pydev/occurence = #ffff99
-zenburn/comment = ('#7f9f7f', False, True)
-zenburn/currentcell = #2c2c2c
-scintilla/string = ('#7f007f', False, False)
-pydev/instance = ('#000000', False, True)
-zenburn/matched_p = #688060
-scintilla/occurence = #ffff99
-zenburn/definition = ('#efef8f', False, False)
-spyder/instance = ('#924900', False, True)
-scintilla/sideareas = #efefef
-idle/occurence = #e8f2fe
-emacs/comment = ('#005100', False, False)
-scintilla/currentcell = #edfcdc
-pydev/normal = ('#000000', False, False)
-zenburn/occurence = #7a738f
-spyder/builtin = ('#900090', False, False)
-scintilla/matched_p = #99ff99
-monokai/instance = ('#ddddda', False, True)
-spyder/dark/keyword = ('#558eff', False, False)
-emacs/normal = ('#ffffff', False, False)
-spyder/dark/instance = ('#be5f00', False, True)
-scintilla/instance = ('#000000', False, True)
-monokai/matched_p = #688060
-scintilla/normal = ('#000000', False, False)
-pydev/number = ('#800000', False, False)
-zenburn/sideareas = #3f3f3f
-custom/background = '#ffffff'
-custom/currentline = '#f7ecf8'
-custom/currentcell = '#fdfdde'
-custom/occurence = '#ffff99'
-custom/ctrlclick = '#0000ff'
-custom/sideareas = '#efefef'
-custom/matched_p = '#99ff99'
-custom/unmatched_p = '#ff9999'
-custom/normal = ('#000000', False, False)
-custom/keyword = ('#0000ff', False, False)
-custom/builtin = ('#900090', False, False)
-custom/definition = ('#000000', True, False)
-custom/comment = ('#adadad', False, True)
-custom/string = ('#00aa00', False, False)
-custom/number = ('#800000', False, False)
-custom/instance = ('#924900', False, True)
-
-[run]
-breakpoints = {}
-open_on_firstrun = False
-default/wdir/use_fixed_directory = False
-default/wdir/use_script_directory = True
-default/interpreter/current = True
-default/interpreter/dedicated = False
-default/interpreter/systerm = False
-default/wdir/fixed_directory = /Users/elsdrm
-
-[dicteditor_header]
-font/family = None
-
-[profiler]
-max_entries = 50
-first_time = False
-
-[pylint]
-max_entries = 50
-first_time = False
-save_before = True
-
-[breakpoints]
-first_time = False
-
diff --git a/.vim/dirs/backups/subwindows.py~ b/.vim/dirs/backups/subwindows.py~
deleted file mode 100644
index 7211edc..0000000
--- a/.vim/dirs/backups/subwindows.py~
+++ /dev/null
@@ -1,148 +0,0 @@
-from .window import VimWindow
-from . import errors
-import base64
-
-class StackWindow(VimWindow):
-    '''Keeps track of the current execution stack'''
-    name = 'STACK'
-    dtext = '[[Execution Stack - most recent call first]]'
-    def __init__(self, name = None):
-        VimWindow.__init__(self, name)
-        self.at = 0
-
-    def refresh(self, node):
-        self.at = 0
-        stack = node.getElementsByTagName('stack')
-        self.stack = list(list(map(item.getAttribute, ('level', 'where', 'filename', 'lineno'))) for item in stack)
-        self.clear()
-        tpl = '%-2s %-15s %s:%s' 
-        lines = list(tpl % tuple(item) for item in self.stack)
-        self.writelines(lines)
-        self.highlight(0)
-        return self.stack[0]
-
-    def on_create(self):
-        self.command('highlight CurStack term=reverse ctermfg=White ctermbg=Red gui=reverse')
-        self.highlight(0)
-
-    def highlight(self, num):
-        self.command('syntax clear')
-        self.command('syntax region CurStack start="^%d " end="$"' % num)
-
-class LogWindow(VimWindow):
-    '''I don't actually know what this does...'''
-    name = 'LOG'
-    dtext = '[[Logs all traffic]]'
-
-    def on_create(self):
-        self.command('set nowrap fdm=marker fmr={{{,}}} fdl=0')
-
-class OutputWindow(VimWindow):
-    '''Logs the stdout + stderr'''
-    name = 'STDOUT_STDERR'
-    dtext = '[[Stdout and Stderr are copied here for your convenience]]\n'
-
-    def on_create(self):
-        self.command('set wrap fdm=marker fmr={{{,}}} fdl=0')
-        self.command('setlocal wfw')
-        self.last = 'stdout'
-
-    def add(self, type, text):
-        # TODO: highlight stderr
-        if type != self.last:
-            self.last = type
-            if type == 'stderr':
-                self.write('[[STDERR]]')
-            else:
-                self.write('[[STDOUT]]')
-        lines = text.split('\n')
-        self.buffer[-1] += lines[0]
-        for line in lines[1:]:
-            self.buffer.append(line)
-        self.command('normal G')
-
-class WatchWindow:
-    ''' window for watch expressions '''
-
-    def __init__(self):
-        self.expressions = VimWindow('WATCH')
-        self.expressions.dtext = '[[Type expressions here]]'
-        self.results = VimWindow('RESULTS')
-        self.results.dtext = '[[type \w for them to be evaluated]]'
-
-    def create(self, where=None):
-        self.expressions.create('leftabove new')
-        self.results.create('vertical belowright new')
-
-    def destroy(self):
-        self.expressions.destroy()
-        self.results.destroy()
-
-    def set_result(self, line, node):
-        l = len(self.results.buffer)
-        for a in range(len(self.results.buffer)-1, line):
-            self.results.buffer.append('')
-        errors = node.getElementsByTagName('error')
-        if len(errors):
-            res = 'ERROR: ' + str(get_child_text(errors[0], 'message'))
-        else:
-            prop = node.getElementsByTagName('property')[0]
-            res = str(get_text(prop))
-            if not res:
-                res = str(get_child_text(prop, 'value'))
-        self.results.buffer[line] = res
-
-def get_text(node):
-    if not hasattr(node.firstChild, 'data'):
-        return ''
-    data = node.firstChild.data
-    if node.getAttribute('encoding') == 'base64':
-        return base64.decodestring(data)
-    return data
-
-def get_child_text(node, child_tag):
-    tags = node.getElementsByTagName(child_tag)
-    if not tags:
-        return ''
-    return get_text(tags[0])
-
-class ScopeWindow(VimWindow):
-    ''' lists the current scope (context) '''
-
-    name = 'SCOPE'
-    dtext = '[[Current scope variables...]]'
-
-    def refresh(self, node):
-        self.clear()
-        for child in node.getElementsByTagName('property'):
-            name = child.getAttribute('fullname')
-            type = child.getAttribute('type')
-            children = child.getAttribute('children')
-            if not name:
-                text = get_child_text(child, 'value')
-                name = get_child_text(child, 'fullname')
-            else:
-                if not child.firstChild:
-                    text = ''
-                elif hasattr(child.firstChild, 'data'):
-                    text = child.firstChild.data
-                else:
-                    text = ''
-                if child.hasAttribute('encoding') and child.getAttribute('encoding') == 'base64':
-                    text = base64.decodestring(text)
-            self.write('%-20s = %-10s /* type: %s */' % (name, text, type))
-
-help_text = '''\
-[ Function Keys ]                 |                      
-  <F1>   resize                   | [ Normal Mode ]      
-  <F2>   step into                |   ,e  eval           
-  <F3>   step over                |                      
-  <F4>   step out                 |                      
-  <F5>   run                      | [ Command Mode ]     
-  <F6>   quit debugging           | :Bp toggle breakpoint
-                                  | :Up stack up         
-  <F11>  get all context          | :Dn stack down       
-  <F12>  get property at cursor   |                      
-'''
-
-# vim: et sw=4 sts=4
diff --git a/.vim/dirs/backups/test.cpp~ b/.vim/dirs/backups/test.cpp~
deleted file mode 100644
index 109e033..0000000
--- a/.vim/dirs/backups/test.cpp~
+++ /dev/null
@@ -1,20 +0,0 @@
-#include <iostream>
-#include <vector>
-using namespace std;
-
-int main()
-{
-	void* p = nullptr;
-	vector<int> vec;
-
-	vec.push_back( 5 );
-	vec.push_back( 5 );
-	vec.push_back( 8 );
-	for ( auto &i : vec ) {
-		cout << i << endl;
-	}
-
-	cout << "hello world" << endl;
-
-	return 0;
-}
diff --git a/.vim/dirs/backups/ui.py~ b/.vim/dirs/backups/ui.py~
deleted file mode 100644
index 5662aad..0000000
--- a/.vim/dirs/backups/ui.py~
+++ /dev/null
@@ -1,199 +0,0 @@
-import os
-import vim
-
-from .subwindows import WatchWindow, StackWindow, ScopeWindow, OutputWindow, LogWindow
-
-class DebugUI:
-    """ DEBUGUI class """
-    def __init__(self, minibufexpl = 0):
-        """ initialize object """
-        self.windows = {
-            'watch':WatchWindow(),
-            'stack':StackWindow(),
-            'scope':ScopeWindow(),
-            'output':OutputWindow(),
-            'log':LogWindow(),
-            # 'status':StatusWindow()
-        }
-        self.mode     = 0 # normal mode
-        self.file     = None
-        self.line     = None
-        self.winbuf   = {}
-        self.breaks   = {}
-        self.waiting  = {}
-        self.toremove = {}
-        self.cursign  = None
-        self.sessfile = "/tmp/debugger_vim_saved_session." + str(os.getpid())
-        self.minibufexpl = minibufexpl
-
-    def startup(self):
-        """ change mode to debug """
-        if self.mode == 1: # is debug mode ?
-            return
-        self.mode = 1
-        if self.minibufexpl == 1:
-            vim.command('CMiniBufExplorer')         # close minibufexplorer if it is open
-        # save session
-        vim.command('mksession! ' + self.sessfile)
-        for i in range(1, len(vim.windows)+1):
-            vim.command(str(i)+'wincmd w')
-            self.winbuf[i] = vim.eval('bufnr("%")') # save buffer number, mksession does not do job perfectly
-                                                    # when buffer is not saved at all.
-
-        vim.command('silent topleft new')           # create srcview window (winnr=1)
-        for i in range(2, len(vim.windows)+1):
-            vim.command(str(i)+'wincmd w')
-            vim.command('hide')
-        self.create()
-        vim.command('1wincmd w') # goto srcview window(nr=1, top-left)
-        self.cursign = '1'
-
-        self.set_highlight()
-
-    def close(self):
-        """ restore mode to normal """
-        if self.mode == 0: # is normal mode ?
-            return
-
-        vim.command('sign unplace 1')
-        vim.command('sign unplace 2')
-        for bid in list(self.breaks.keys()):
-            file, line, tid = self.breaks.pop(bid)
-            vim.command('sign unplace %d file=%s' % (tid, file))
-
-        # destory all created windows
-        self.destroy()
-
-        # restore session
-        vim.command('source ' + self.sessfile)
-        os.system('rm -f ' + self.sessfile)
-
-        self.set_highlight()
-
-        self.winbuf.clear()
-        self.file = None
-        self.line = None
-        self.mode = 0
-        self.cursign = None
-
-        if self.minibufexpl == 1:
-            vim.command('MiniBufExplorer')                 # close minibufexplorer if it is open
-
-    def create(self):
-        """ create windows """
-        self.windows['output'].create('vertical belowright new')
-        self.windows['scope'].create('aboveleft new')
-        self.windows['log'].create('aboveleft new')
-        self.windows['stack'].create('aboveleft new')
-        self.windows['watch'].create('aboveleft new')
-        width = self.windows['output'].width + self.windows['scope'].width
-        self.windows['output'].command('vertical res %d' % (width/2))
-        self.windows['watch'].results.command('vertical res %d' % (width/4))
-
-    def set_highlight(self):
-        """ set vim highlight of debugger sign """
-        vim.command("highlight DbgCurrent term=reverse ctermfg=White ctermbg=Red gui=reverse")
-        vim.command("highlight DbgBreakPt term=reverse ctermfg=White ctermbg=Green gui=reverse")
-
-    def unhighlight(self):
-        self.windows['stack'].clear()
-        self.windows['stack'].write('\n\n!!!!!---- Debugging has ended. Type `:dbg quit` to exit ----!!!!!\n\n')
-        self.windows['stack'].command('syntax clear')
-        self.windows['stack'].command('syntax region CurStack start="^!!!!!---- " end="$"')
-        self.go_srcview()
-        vim.command('sign unplace ' + self.cursign)
-
-    def stack_up(self):
-        stack = self.windows['stack']
-        if stack.at > 0:
-            stack.at -= 1
-            stack.highlight(stack.at)
-            item = stack.stack[stack.at]
-            self.set_srcview(item[2], item[3])
-
-    def stack_down(self):
-        stack = self.windows['stack']
-        if stack.at < len(stack.stack)-1:
-            stack.at += 1
-            stack.highlight(stack.at)
-            item = stack.stack[stack.at]
-            self.set_srcview(item[2], item[3])
-
-    def queue_break(self, tid, file, line):
-        self.waiting[tid] = file, line
-
-    def queue_break_remove(self, tid, bid):
-        self.toremove[tid] = bid
-
-    def set_break(self, tid, bid):
-        if tid in self.waiting:
-            file, line = self.waiting[tid]
-            self.breaks[bid] = file, line, tid
-            vim.command('sign place %d name=breakpt line=%d file=%s' % (tid, line, file))
-        else:
-            pass # print 'failed to set breakpoint... %d : %s' % (tid, self.waiting)
-
-    def clear_break(self, tid):
-        bid = self.toremove.pop(tid)
-        if bid in self.breaks:
-            file, line, tid = self.breaks.pop(bid)
-            vim.command('sign unplace %d file=%s' % (tid, file))
-        else:
-            print('failed to remove', bid)
-
-    def break_at(self, file, line):
-        # self.windows['log'].write('looking for %s line %s in %s' % (file, line, self.breaks))
-        for bid, value in self.breaks.items():
-            if value[:2] == (file, line):
-                return bid
-        return -1
-
-    def destroy(self):
-        """ destroy windows """
-        for window in list(self.windows.values()):
-            window.destroy()
-
-    def go_srcview(self):
-        vim.command('1wincmd w')
-
-    def next_sign(self):
-        if self.cursign == '1':
-            return '2'
-        else:
-            return '1'
-
-    def set_srcview(self, file, line):
-        """ set srcview windows to file:line and replace current sign """
-        if os.name == 'nt':
-            file = os.path.normpath(file)
-            file = file[6:]
-        else:
-            pass
-
-        if file.startswith('file:'):
-            file = file[len('file:'):]
-            if file.startswith('///'):
-                file = file[2:]
-
-        if file == self.file and self.line == line:
-            return
-
-        nextsign = self.next_sign()
-
-        if file != self.file:
-            self.file = file
-            self.go_srcview()
-            vim.command('silent edit! ' + file)
-
-        cmd = 'sign place %s name=current line=%s file=%s' % (nextsign, line, file)
-
-        vim.command(str(cmd))
-        vim.command('sign unplace ' + self.cursign)
-
-        vim.command('sign jump ' + nextsign + ' file='+file)
-        #vim.command('normal z.')
-
-        self.line = line
-        self.cursign = nextsign
-
-# vim: et sw=4 sts=4
diff --git "a/.vim/dirs/tmp/test.cpp (\350\210\207 MAClab-iMac \350\241\235\347\252\201\347\232\204\350\244\207\346\234\254 2014-11-23).swp" "b/.vim/dirs/tmp/test.cpp (\350\210\207 MAClab-iMac \350\241\235\347\252\201\347\232\204\350\244\207\346\234\254 2014-11-23).swp"
deleted file mode 100644
index fbeabd6..0000000
Binary files "a/.vim/dirs/tmp/test.cpp (\350\210\207 MAClab-iMac \350\241\235\347\252\201\347\232\204\350\244\207\346\234\254 2014-11-23).swp" and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%.bashrc b/.vim/dirs/undos/%Users%elsdrm%.bashrc
deleted file mode 100644
index c6610ee..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%.bashrc and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme b/.vim/dirs/undos/%Users%elsdrm%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme
deleted file mode 100644
index 18ddca6..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%.spyder2-py3%spyder.ini b/.vim/dirs/undos/%Users%elsdrm%.spyder2-py3%spyder.ini
deleted file mode 100644
index 342189c..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%.spyder2-py3%spyder.ini and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%.ssh%known_hosts b/.vim/dirs/undos/%Users%elsdrm%.ssh%known_hosts
deleted file mode 100644
index 510ac8c..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%.ssh%known_hosts and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%.zsh_profile b/.vim/dirs/undos/%Users%elsdrm%.zsh_profile
deleted file mode 100644
index 9f32751..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%.zsh_profile and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%.zshrc b/.vim/dirs/undos/%Users%elsdrm%.zshrc
deleted file mode 100644
index e688842..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%.zshrc and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%.zshrc.old b/.vim/dirs/undos/%Users%elsdrm%.zshrc.old
deleted file mode 100644
index 1af233f..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%.zshrc.old and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Downloads%ConferenceProgram.html b/.vim/dirs/undos/%Users%elsdrm%Downloads%ConferenceProgram.html
deleted file mode 100644
index 53ffc6e..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Downloads%ConferenceProgram.html and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Downloads%output.txt b/.vim/dirs/undos/%Users%elsdrm%Downloads%output.txt
deleted file mode 100644
index 9fa8e38..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Downloads%output.txt and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Downloads%spams-python%build%lib.macosx-10.10-intel-2.7%spams.py b/.vim/dirs/undos/%Users%elsdrm%Downloads%spams-python%build%lib.macosx-10.10-intel-2.7%spams.py
deleted file mode 100644
index c44772d..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Downloads%spams-python%build%lib.macosx-10.10-intel-2.7%spams.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.bash_profile b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.bash_profile
deleted file mode 100644
index b2c92a6..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.bash_profile and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.git%COMMIT_EDITMSG
deleted file mode 100644
index 5f5d954..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.gitignore b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.gitignore
deleted file mode 100644
index 93a48e4..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.gitignore and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_default%ipython_notebook_config.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_default%ipython_notebook_config.py
deleted file mode 100644
index 69fbf02..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_default%ipython_notebook_config.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_nbserver%ipython_notebook_config.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_nbserver%ipython_notebook_config.py
deleted file mode 100644
index 558eaad..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.ipython%profile_nbserver%ipython_notebook_config.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%.git%COMMIT_EDITMSG
deleted file mode 100644
index 4660827..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme
deleted file mode 100644
index 6714061..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.oh-my-zsh%themes%bureau_elsdrm.zsh-theme and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%Conque-Shell%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%Conque-Shell%.git%COMMIT_EDITMSG
deleted file mode 100644
index 7c3724c..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%Conque-Shell%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%.git%COMMIT_EDITMSG
deleted file mode 100644
index 09001e1..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%README.rst b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%README.rst
deleted file mode 100644
index ec75314..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%README.rst and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%debugger.vim b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%debugger.vim
deleted file mode 100644
index e014128..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%debugger.vim and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%_commands.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%_commands.py
deleted file mode 100644
index 8da7e27..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%_commands.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%commands.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%commands.py
deleted file mode 100644
index f4f01a7..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%commands.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%debugger.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%debugger.py
deleted file mode 100644
index 8a22257..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%debugger.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%new_debugger.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%new_debugger.py
deleted file mode 100644
index 1d1d839..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%new_debugger.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%subwindows.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%subwindows.py
deleted file mode 100644
index b36754b..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%subwindows.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%ui.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%ui.py
deleted file mode 100644
index a2b26eb..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vim%bundle%vim-debug%plugin%vim_debug%ui.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vimrc b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vimrc
deleted file mode 100644
index 169694a..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.vimrc and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.zshrc b/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.zshrc
deleted file mode 100644
index 50aad61..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%.unix_settings%.zshrc and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%.git%COMMIT_EDITMSG
deleted file mode 100644
index 2e227ae..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%demo_callgraph_png.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%demo_callgraph_png.sh
deleted file mode 100644
index a82e9c9..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%demo_callgraph_png.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%example.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%example.py
deleted file mode 100644
index b29f49c..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_pycallgraph%example.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood%demo_snakefood.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood%demo_snakefood.sh
deleted file mode 100755
index d342d6b..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood%demo_snakefood.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood.sh
deleted file mode 100644
index 0701d43..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%meeting_20141217%demo_snakefood.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%COMMIT_EDITMSG
deleted file mode 100644
index abc8cdf..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%config b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%config
deleted file mode 100755
index b6c118e..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%shared_note%.git%config and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%week_report%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%week_report%.git%COMMIT_EDITMSG
deleted file mode 100644
index 28d068a..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipython_notebook%week_report%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipythonnotebook%.git%COMMIT_EDITMSG b/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipythonnotebook%.git%COMMIT_EDITMSG
deleted file mode 100644
index b9e5f38..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%Chen Hsueh-Min%ipythonnotebook%.git%COMMIT_EDITMSG and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo.sh
deleted file mode 100644
index aa96ec9..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_includeC++.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_includeC++.sh
deleted file mode 100644
index 3bd7844..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_includeC++.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_loadPyx.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_loadPyx.py
deleted file mode 100644
index ab27754..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_loadPyx.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_py2so_includeC++.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_py2so_includeC++.sh
deleted file mode 100755
index 2193cf7..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%demo_py2so_includeC++.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%iostream.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%iostream.py
deleted file mode 100644
index 26fe941..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%iostream.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%vector.pyx b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%vector.pyx
deleted file mode 100644
index 6cc33f3..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%vector.pyx and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%wahaaa.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%wahaaa.py
deleted file mode 100644
index e203191..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%cython_demo%wahaaa.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_laplace.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_laplace.sh
deleted file mode 100644
index 07f2ae4..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_laplace.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_laplace.sh b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_laplace.sh
deleted file mode 100755
index f5efd98..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_laplace.sh and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_scipy.weave.py b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_scipy.weave.py
deleted file mode 100644
index 9deed89..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%demo_scipy.weave.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%laplace.cxx b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%laplace.cxx
deleted file mode 100644
index b34cfd1..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%demo_scipy.weave%laplace.cxx and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%test.m b/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%test.m
deleted file mode 100644
index 5430097..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%Dropbox%meeting_20141217%test.m and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%main.m b/.vim/dirs/undos/%Users%elsdrm%main.m
deleted file mode 100755
index 96f9ca8..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%main.m and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%py.py b/.vim/dirs/undos/%Users%elsdrm%py.py
deleted file mode 100644
index 72ebf1f..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%py.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%sandbox%py.py b/.vim/dirs/undos/%Users%elsdrm%sandbox%py.py
deleted file mode 100644
index 20fdec9..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%sandbox%py.py and /dev/null differ
diff --git a/.vim/dirs/undos/%Users%elsdrm%test.cpp b/.vim/dirs/undos/%Users%elsdrm%test.cpp
deleted file mode 100644
index 906d727..0000000
Binary files a/.vim/dirs/undos/%Users%elsdrm%test.cpp and /dev/null differ
diff --git a/.vim/dirs/undos/%home%elsdrm%LASSO_screening%.gitignore b/.vim/dirs/undos/%home%elsdrm%LASSO_screening%.gitignore
deleted file mode 100644
index ae7fa41..0000000
Binary files a/.vim/dirs/undos/%home%elsdrm%LASSO_screening%.gitignore and /dev/null differ
diff --git a/.vim/dirs/undos/%private%etc%shells b/.vim/dirs/undos/%private%etc%shells
deleted file mode 100644
index d4cf64f..0000000
Binary files a/.vim/dirs/undos/%private%etc%shells and /dev/null differ
diff --git a/.vim/dirs/undos/%private%tmp%zshecl2719 b/.vim/dirs/undos/%private%tmp%zshecl2719
deleted file mode 100644
index 3028cf9..0000000
Binary files a/.vim/dirs/undos/%private%tmp%zshecl2719 and /dev/null differ
diff --git a/.vim/dirs/undos/%private%tmp%zshecl668 b/.vim/dirs/undos/%private%tmp%zshecl668
deleted file mode 100644
index 081b726..0000000
Binary files a/.vim/dirs/undos/%private%tmp%zshecl668 and /dev/null differ
diff --git a/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.KSFxxI b/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.KSFxxI
deleted file mode 100644
index 7e7a8c7..0000000
Binary files a/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.KSFxxI and /dev/null differ
diff --git a/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.UBER8s b/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.UBER8s
deleted file mode 100644
index 250177e..0000000
Binary files a/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.UBER8s and /dev/null differ
diff --git a/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.o9QeFK b/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.o9QeFK
deleted file mode 100644
index 7bf11cd..0000000
Binary files a/.vim/dirs/undos/%private%var%folders%9p%m2_jpyp57g774zz9k1x57rs80000gw%T%chsh.o9QeFK and /dev/null differ
diff --git a/.vim/dirs/undos/%usr%local%lib%python2.7%site-packages%pymatbridge%pymatbridge.py b/.vim/dirs/undos/%usr%local%lib%python2.7%site-packages%pymatbridge%pymatbridge.py
deleted file mode 100644
index 336beb5..0000000
Binary files a/.vim/dirs/undos/%usr%local%lib%python2.7%site-packages%pymatbridge%pymatbridge.py and /dev/null differ
diff --git a/.vim/dirs/undos/%usr%local%lib%python3.4%site-packages%IPython%nbconvert%templates%latex%article.tplx b/.vim/dirs/undos/%usr%local%lib%python3.4%site-packages%IPython%nbconvert%templates%latex%article.tplx
deleted file mode 100644
index ed1880e..0000000
Binary files a/.vim/dirs/undos/%usr%local%lib%python3.4%site-packages%IPython%nbconvert%templates%latex%article.tplx and /dev/null differ
diff --git a/.vim/dirs/viminfo b/.vim/dirs/viminfo
deleted file mode 100644
index c3f1480..0000000
--- a/.vim/dirs/viminfo
+++ /dev/null
@@ -1,919 +0,0 @@
-# This viminfo file was generated by Vim 7.4.
-# You may edit it if you're careful!
-
-# Value of 'encoding' when this file was written
-*encoding=utf-8
-
-
-# hlsearch on (H) or off (h):
-~h
-# Last Search Pattern:
-~MSle0~/print
-
-# Last Substitute Search Pattern:
-~MSle0&DBGP
-
-# Last Substitute String:
-$
-
-# Command Line History (newest to oldest):
-:wq
-:q
-:h 'g:pymode_lint_options_pylint'
-:33
-:262
-:w
-:187
-:q!
-:PymodeRun
-:16
-:o demo_py2so.sh
-:sp 
-:h surround
-:113
-:112
-:81
-:ConqueTermSplit zsh
-:Q
-:qa
-:o .zshrc
-:vs
-:pwd
-:19
-:39
-:W
-:s
-:vs .zshrc
-:28
-:o .bashrc
-:o .bash_profile
-:20
-:44
-
-# Search String History (newest to oldest):
-? \s\+$
-?/print
-?/pycall
-?/60
-?/1200
-?/ipython
-?/#include
-?/DLien
-?/NORMAL_SYM
-?/visual
-?/select
-?/#
-?/bg
-?/blue
-?/49
-?/NORMAL
-?/reset_
-?/nvm_prompt
-?/_LIBER
-?/PS1
-?/killer
-?/gg
-?/bindkey
-?/plugin
-?/map
-?/key
-?/vi-cmd
-?/10
-?/hello
-?/time
-
-# Expression History (newest to oldest):
-
-# Input Line History (newest to oldest):
-
-# Input Line History (newest to oldest):
-
-# Registers:
-""0	CHAR	0
-	 
-"1	CHAR	0
-	
-	def time_test(nx=500, ny=500, eps=1.0e-16, n_iter=100, stepper='numeric'):
-	    g = Grid(nx, ny)
-	    g.setBCFunc(BC)
-	    s = LaplaceSolver(g, stepper)
-	    t = time.clock()
-	    s.solve(n_iter=n_iter, eps=eps)
-	    return time.clock() - t
-	    
-	
-	def main(n=500, n_iter=100):
-	    print 
-"2	LINE	0
-	
-"3	LINE	0
-	                                                                                    
-"4	LINE	0
-	                                                                                    
-"5	LINE	0
-	cdef extern from "<vector>" namespace "std":
-	    cdef cppclass vector[T]:
-	        vector()
-	        void push_back(T&)
-	        T& push_back(T&)
-	        size_t size()
-"6	LINE	0
-	    v.push_back( 5566 )
-"7	LINE	0
-	cythonized_module = cythonize('vector.pyx', language='c++')
-"8	LINE	0
-	
-"9	LINE	0
-	from Cython.Build import cythonize
-"j	CHAR	0
-	jjjjkkVjjjjjjjjjjj\cc
-"l	CHAR	0
-	ll
-"u	CHAR	0
-	i
-"w	CHAR	0
-	ww
-"-	CHAR	0
-	()
-
-# File marks:
-'0  129  0  ~/.zshrc
-'1  121  32  ~/.zshrc
-'2  8  5  ~/py.py
-'3  145  0  ~/.zshrc
-'4  139  49  ~/.zshrc
-'5  11  5  ~/test.cpp
-'6  1  0  ~/NERD_tree_1
-'7  1  0  ~/Dropbox/meeting_20141217/.git/MERGE_MSG
-'8  19  0  ~/Dropbox/meeting_20141217/demo_cython/vector.pyx
-'9  16  0  ~/Dropbox/meeting_20141217/demo_cython/wahaaa.py
-
-# Jumplist (newest first):
--'  129  0  ~/.zshrc
--'  1  0  ~/.zshrc
--'  121  32  ~/.zshrc
--'  8  0  ~/.zshrc
--'  8  5  ~/py.py
--'  1  0  ~/py.py
--'  145  0  ~/.zshrc
--'  139  49  ~/.zshrc
--'  11  5  ~/test.cpp
--'  1  0  ~/test.cpp
--'  1  0  ~/NERD_tree_1
--'  5  0  ~/NERD_tree_1
--'  1  0  ~/Dropbox/meeting_20141217/.git/MERGE_MSG
--'  19  0  ~/Dropbox/meeting_20141217/demo_cython/vector.pyx
--'  1  0  ~/Dropbox/meeting_20141217/demo_cython/vector.pyx
--'  16  0  ~/Dropbox/meeting_20141217/demo_cython/wahaaa.py
--'  1  0  ~/Dropbox/meeting_20141217/demo_cython/wahaaa.py
--'  296  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  309  15  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  311  14  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  314  10  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  315  10  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  293  14  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  262  20  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  254  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  255  43  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  253  48  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  155  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  187  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  49  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  1  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  34  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  19  5  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  23  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  321  2  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
--'  1  0  /private/tmp/zshvIF2N7
--'  169  12  ~/Dropbox/meeting_20141217/demo_scipy.weave/laplace.cxx
--'  1  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/laplace.cxx
--'  157  4  ~/Dropbox/meeting_20141217/demo_scipy.weave/laplace.cxx
--'  2  26  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_laplace.sh
--'  1  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_laplace.sh
--'  1  8  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_snakefood/demo_snakefood.sh
--'  1  23  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_snakefood.sh
--'  6  23  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  4  0  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  11  0  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  13  8  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  32  137  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  1  50  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/demo_callgraph_png.sh
--'  1  29  ~/Dropbox/meeting_20141217/demo_laplace.sh
--'  1017  2  ~/Dropbox/meeting_20141217/fdep_21jun2010/fdep.m
--'  1  0  ~/Dropbox/meeting_20141217/fdep_21jun2010/fdep.m
--'  400  0  ~/.bash_history
--'  342  0  ~/.bash_history
--'  290  13  ~/.bash_history
--'  271  13  ~/.bash_history
--'  1  0  ~/.bash_history
--'  130  30  ~/.zshrc
--'  1  0  /usr/local/lib/python2.7/site-packages/pymatbridge/publish.py
--'  128  0  /usr/local/lib/python2.7/site-packages/pymatbridge/publish.py
--'  153  8  /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
--'  151  8  /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
--'  61  63  /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
--'  5  0  /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
--'  1  0  /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
--'  131  0  /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
--'  231  0  /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
--'  11  17  /private/etc/shells
--'  1  0  /private/etc/shells
--'  1  1  /private/tmp/zshecl92998
--'  1  0  ~/Dropbox/meeting_20141217/cython_demo/demo_loadPyx.py
--'  19  0  ~/Dropbox/meeting_20141217/cython_demo/vector.pyx
--'  1  0  ~/Dropbox/meeting_20141217/cython_demo/vector.pyx
--'  17  0  ~/Dropbox/meeting_20141217/cython_demo/vector.pyx
--'  1  0  ~/Dropbox/meeting_20141217/cython_demo/demo_py2so_includeC++.sh
--'  5  0  ~/Dropbox/meeting_20141217/cython_demo/demo_py2so_includeC++.sh
--'  18  21  ~/Dropbox/meeting_20141217/cython_demo/vector.pyx
--'  1  0  ~/Dropbox/meeting_20141217/cython_demo/vector.cpp
--'  1  0  ~/Dropbox/meeting_20141217/cython_demo/vector.c
--'  21  4  ~/Dropbox/meeting_20141217/cython_demo/vector.pyx
--'  3  0  ~/Dropbox/meeting_20141217/cython_demo/demo_loadPyx.py
--'  5  0  ~/Dropbox/meeting_20141217/cython_demo/demo_loadPyx.py
--'  1  0  /private/tmp/zshvIF2N7
--'  169  12  ~/Dropbox/meeting_20141217/demo_scipy.weave/laplace.cxx
--'  1  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/laplace.cxx
--'  157  4  ~/Dropbox/meeting_20141217/demo_scipy.weave/laplace.cxx
--'  2  26  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_laplace.sh
--'  1  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_laplace.sh
--'  1  8  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_snakefood/demo_snakefood.sh
--'  1  23  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_snakefood.sh
--'  6  23  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  4  0  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  11  0  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  13  8  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  32  137  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
--'  1  50  ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/demo_callgraph_png.sh
--'  1  29  ~/Dropbox/meeting_20141217/demo_laplace.sh
--'  296  0  ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
-
-# History of marks within files (newest to oldest):
-
-> ~/.zshrc
-	"	129	0
-	^	138	34
-	.	138	33
-	+	109	0
-	+	114	0
-	+	108	0
-	+	110	0
-	+	111	0
-	+	112	0
-	+	112	0
-	+	113	0
-	+	125	20
-	+	124	18
-	+	25	0
-	+	25	0
-	+	39	28
-	+	45	0
-	+	45	28
-	+	45	27
-	+	21	26
-	+	25	32
-	+	29	27
-	+	20	19
-	+	20	0
-	+	20	0
-	+	20	39
-	+	20	39
-	+	20	41
-	+	20	15
-	+	20	5
-	+	33	39
-	+	33	54
-	+	33	5
-	+	20	0
-	+	33	51
-	+	45	26
-	+	45	0
-	+	45	0
-	+	45	71
-	+	45	0
-	+	44	58
-	+	45	42
-	+	42	77
-	+	21	18
-	+	25	24
-	+	29	20
-	+	43	26
-	+	33	4
-	+	33	4
-	+	26	24
-	+	21	10
-	+	22	11
-	+	26	17
-	+	29	12
-	+	30	0
-	+	124	0
-	+	124	0
-	+	123	20
-	+	124	20
-	+	123	18
-	+	124	19
-	+	130	31
-	+	131	33
-	+	129	31
-	+	26	28
-	+	43	26
-	+	114	0
-	+	117	0
-	+	114	0
-	+	117	0
-	+	117	19
-	+	117	24
-	+	117	19
-	+	117	0
-	+	25	0
-	+	86	32
-	+	117	0
-	+	117	0
-	+	115	0
-	+	116	0
-	+	112	0
-	+	118	0
-	+	119	0
-	+	48	42
-	+	48	68
-	+	48	20
-	+	48	23
-	+	48	0
-	+	47	0
-	+	48	0
-	+	145	16
-	+	144	0
-	+	119	0
-	+	128	0
-	+	119	0
-	+	122	0
-	+	119	0
-	+	128	16
-	+	128	141
-	+	133	49
-	+	136	31
-	+	137	33
-	+	138	33
-
-> ~/py.py
-	"	8	5
-	^	1	7
-	.	1	6
-	+	3	0
-	+	1	15
-	+	2	7
-	+	1	6
-
-> ~/Dropbox/.unix_settings/.vim/bundle/python-mode/doc/pymode.txt
-	"	368	48
-
-> ~/test.cpp
-	"	11	5
-
-> ~/NERD_tree_1
-	"	1	0
-	.	1	0
-	+	1	0
-
-> ~/Dropbox/meeting_20141217/.git/MERGE_MSG
-	"	1	0
-
-> ~/Dropbox/meeting_20141217/demo_cython/vector.pyx
-	"	19	0
-
-> ~/Dropbox/meeting_20141217/demo_cython/wahaaa.py
-	"	16	0
-
-> ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_scipy.weave.py
-	"	296	0
-	^	309	18
-	.	49	0
-	+	296	0
-	+	308	10
-	+	309	13
-	+	309	26
-	+	312	14
-	+	315	0
-	+	315	9
-	+	316	10
-	+	294	14
-	+	262	21
-	+	254	0
-	+	255	42
-	+	253	48
-	+	155	0
-	+	187	0
-	+	49	0
-	+	262	20
-	+	311	0
-	+	296	0
-	+	49	0
-
-> /private/tmp/zshvIF2N7
-	"	1	0
-
-> ~/Dropbox/meeting_20141217/demo_scipy.weave/laplace.cxx
-	"	169	12
-	^	169	13
-	.	169	12
-	+	168	20
-	+	169	12
-
-> ~/Dropbox/meeting_20141217/demo_scipy.weave/demo_laplace.sh
-	"	2	26
-	^	2	27
-	.	2	26
-	+	2	26
-
-> ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_snakefood/demo_snakefood.sh
-	"	1	8
-	^	1	12
-	.	1	8
-	+	1	8
-
-> ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_snakefood.sh
-	"	1	23
-	^	1	24
-	.	1	23
-	+	1	23
-
-> ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/example.py
-	"	6	23
-	^	6	24
-	.	6	23
-	+	10	29
-	+	11	54
-	+	12	23
-	+	13	62
-	+	15	60
-	+	18	67
-	+	19	83
-	+	21	100
-	+	22	82
-	+	23	81
-	+	23	107
-	+	25	93
-	+	25	98
-	+	26	94
-	+	26	115
-	+	28	97
-	+	28	98
-	+	29	101
-	+	29	102
-	+	30	102
-	+	30	103
-	+	30	123
-	+	31	97
-	+	31	101
-	+	31	128
-	+	32	97
-	+	32	98
-	+	32	128
-	+	32	137
-	+	9	0
-	+	13	0
-	+	12	0
-	+	13	0
-	+	12	0
-	+	4	26
-	+	5	0
-	+	2	18
-	+	5	24
-	+	6	23
-
-> ~/Dropbox/Chen Hsueh-Min/ipython_notebook/meeting_20141217/demo_pycallgraph/demo_callgraph_png.sh
-	"	1	50
-	^	1	51
-	.	1	50
-	+	1	50
-
-> ~/Dropbox/meeting_20141217/demo_laplace.sh
-	"	1	29
-	^	1	30
-	.	1	29
-	+	1	29
-
-> ~/Dropbox/meeting_20141217/fdep_21jun2010/fdep.m
-	"	1017	2
-
-> ~/.bash_history
-	"	400	0
-
-> /usr/local/lib/python2.7/site-packages/pymatbridge/publish.py
-	"	1	0
-
-> /usr/local/lib/python2.7/site-packages/pymatbridge/pymatbridge.py
-	"	153	8
-	^	61	66
-	.	61	65
-	+	61	65
-
-> /private/etc/shells
-	"	11	17
-	^	11	18
-	.	11	17
-	+	11	17
-
-> /private/tmp/zshecl92998
-	"	1	1
-	^	1	8
-	.	1	7
-	+	1	145
-	+	1	1
-	+	1	145
-	+	2	0
-	+	1	7
-
-> ~/Dropbox/meeting_20141217/cython_demo/demo_loadPyx.py
-	"	1	0
-	^	3	0
-	.	1	0
-	+	4	0
-	+	4	34
-	+	4	42
-	+	4	23
-	+	4	57
-	+	4	5
-	+	5	0
-	+	1	49
-	+	2	13
-	+	1	0
-
-> ~/Dropbox/meeting_20141217/cython_demo/__run__
-	"	1	0
-	.	1	0
-	+	1	0
-
-> ~/Dropbox/meeting_20141217/cython_demo/vector.pyx
-	"	19	0
-	^	14	21
-	.	20	0
-	+	18	0
-	+	17	0
-	+	18	42
-	+	17	0
-	+	20	0
-	+	20	0
-	+	1	0
-	+	16	0
-	+	1	44
-	+	2	32
-	+	4	49
-	+	5	69
-	+	6	83
-	+	7	86
-	+	7	95
-	+	8	85
-	+	8	86
-	+	9	101
-	+	9	104
-	+	10	106
-	+	10	107
-	+	10	108
-	+	10	112
-	+	11	108
-	+	11	112
-	+	12	125
-	+	12	126
-	+	13	131
-	+	13	132
-	+	16	130
-	+	16	134
-	+	16	207
-	+	2	0
-	+	8	0
-	+	9	0
-	+	15	0
-	+	16	0
-	+	16	84
-	+	16	0
-	+	16	83
-	+	21	21
-	+	16	0
-	+	21	21
-	+	18	21
-	+	17	0
-	+	14	20
-	+	19	0
-	+	20	0
-
-> ~/Dropbox/meeting_20141217/cython_demo/demo_py2so_includeC++.sh
-	"	1	0
-	^	5	237
-	.	5	236
-	+	4	38
-	+	5	236
-
-> ~/Dropbox/meeting_20141217/cython_demo/vector.cpp
-	"	1	0
-
-> ~/Dropbox/meeting_20141217/cython_demo/vector.c
-	"	1	0
-
-> ~/Dropbox/meeting_20141217/cython_demo/demo_py2so.sh
-	"	1	0
-
-> ~/Dropbox/meeting_20141217/cython_demo/demo_includeC++.sh
-	"	4	0
-	^	4	0
-	.	4	0
-	+	1	42
-	+	4	0
-
-> ~/Dropbox/meeting_20141217/cython_demo/iostream.py
-	"	12	17
-	^	12	18
-	.	12	20
-	+	1	44
-	+	2	28
-	+	13	20
-	+	2	28
-	+	3	15
-	+	13	0
-	+	4	25
-	+	5	24
-	+	8	26
-	+	9	17
-	+	10	19
-	+	8	18
-	+	6	20
-	+	11	22
-	+	12	20
-
-> ~/Dropbox/meeting_20141217/cython_demo/wahaaa.py
-	"	16	17
-	^	9	21
-	.	9	20
-	+	2	15
-	+	5	6
-	+	2	7
-	+	5	18
-	+	6	11
-	+	7	0
-	+	8	8
-	+	9	19
-	+	10	11
-	+	4	0
-	+	12	18
-	+	15	21
-	+	16	17
-	+	2	20
-	+	9	20
-
-> ~/Dropbox/meeting_20141217/cython_demo/demo.sh
-	"	2	3
-	^	2	244
-	.	2	0
-	+	3	0
-	+	2	243
-	+	2	0
-
-> ~/Dropbox/meeting_20141217/test.m
-	"	3	10
-	^	3	11
-	.	3	10
-	+	1	15
-	+	2	14
-	+	3	10
-
-> ~/wahaha.cpp
-	"	2540	2
-
-> ~/Dropbox/.unix_settings/.zshrc
-	"	110	0
-
-> /private/tmp/zshecl668
-	"	2	0
-	^	2	0
-	.	2	0
-	+	1	75
-	+	2	0
-
-> ~/Dropbox/meeting_20141217/dep/dep/dep.m
-	"	1	0
-
-> ~/Dropbox/.unix_settings/.oh-my-zsh/themes/bureau_elsdrm.zsh-theme
-	"	128	0
-	^	116	159
-	.	116	158
-	+	114	0
-	+	114	0
-	+	114	46
-	+	124	21
-	+	106	0
-	+	125	0
-	+	124	22
-	+	114	46
-	+	114	46
-	+	114	49
-	+	114	0
-	+	124	25
-	+	87	71
-	+	89	0
-	+	120	0
-	+	120	0
-	+	124	17
-	+	120	0
-	+	120	0
-	+	120	19
-	+	91	0
-	+	89	0
-	+	87	0
-	+	120	28
-	+	87	55
-	+	124	0
-	+	114	57
-	+	125	17
-	+	117	0
-	+	114	11
-	+	114	11
-	+	125	37
-	+	114	0
-	+	114	0
-	+	117	0
-	+	116	36
-	+	117	0
-	+	126	0
-	+	125	37
-	+	116	0
-	+	87	72
-	+	116	48
-	+	125	28
-	+	124	18
-	+	89	0
-	+	86	0
-	+	89	0
-	+	123	0
-	+	124	27
-	+	123	0
-	+	124	17
-	+	116	73
-	+	5	15
-	+	5	0
-	+	5	31
-	+	116	16
-	+	124	42
-	+	116	20
-	+	124	29
-	+	11	0
-	+	5	15
-	+	5	14
-	+	5	28
-	+	5	28
-	+	11	0
-	+	5	14
-	+	5	14
-	+	5	29
-	+	5	16
-	+	7	54
-	+	8	0
-	+	11	0
-	+	8	22
-	+	7	53
-	+	9	5
-	+	8	0
-	+	10	5
-	+	9	22
-	+	116	158
-
-> ~/Dropbox/.unix_settings/.vim/bundle/vim-surround/doc/surround.txt
-	"	75	59
-
-> .oh-my-zsh/themes/bureau_elsdrm.zsh-theme
-	"	1	0
-
-> ~/Dropbox/.unix_settings/zsh - 1
-	"	203	0
-	^	203	0
-	.	203	0
-	+	1	0
-	+	2	0
-	+	2	0
-	+	2	0
-	+	3	0
-	+	6	0
-	+	6	0
-	+	6	0
-	+	8	0
-	+	10	0
-	+	10	0
-	+	10	0
-	+	10	0
-	+	12	0
-	+	14	0
-	+	14	0
-	+	14	0
-	+	16	0
-	+	18	0
-	+	18	0
-	+	18	0
-	+	20	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	22	0
-	+	203	0
-
-> /private/tmp/zshecl2719
-	"	1	29
-	^	1	41
-	.	1	29
-	+	1	0
-	+	2	0
-	+	1	29
-
-> ~/Dropbox/.unix_settings/.vim/bundle/vim-airline/Gemfile
-	"	1	0
-
-> ~/Dropbox/.unix_settings/.vim/bundle/vim-airline/autoload/airline/init.vim
-	"	32	16
-	.	34	0
-	+	34	0
-
-> ~/Dropbox/.unix_settings/.vim/bundle/vim-airline/autoload/airline.vim
-	"	5	0
-
-> /private/tmp/zshecl24301
-	"	1	0
-	^	1	1
-	.	1	0
-	+	1	0
-
-> ~/.zshrc.old
-	"	203	19
-	.	208	0
-	+	208	0
-
-> ~/FTP198/D/elsdrm/icassp2015/icassp.txt
-	"	1	0
-
-> ~/Dropbox/Chen Hsueh-Min/ipython_notebook/week_report/.git/COMMIT_EDITMSG
-	"	1	7
-	^	1	9
-	.	2	0
-	+	1	7
-	+	2	0
-
-> ~/Dropbox/.unix_settings/[Vundle] clean
-	"	2	0
-	.	1	0
-	+	1	0
-
-> ~/Dropbox/.unix_settings/[Vundle] Installer
-	"	32	0
-	.	1	0
-	+	32	0
-	+	1	0
-
-> /private/tmp/zshecl1998
-	"	1	0
-
-> ~/.bash_profile
-	"	11	0
-	.	19	0
-	+	15	17
-	+	19	81
-	+	19	82
-	+	19	144
-	+	19	0
-
-> ~/.bashrc
-	"	32	0
-	.	1	0
-	+	1	0
-
-> ~/Dropbox/.unix_settings/.oh-my-zsh/plugins/gitfast/gitfast.plugin.zsh
-	"	1	0
-
-> ~/Dropbox/.unix_settings/.oh-my-zsh/plugins/gnu-utils/gnu-utils.plugin.zsh
-	"	57	0
-
-> ~/Dropbox/.unix_settings/.oh-my-zsh/plugins/rsync/rsync.plugin.zsh
-	"	1	0
-
-> ~/Dropbox/.unix_settings/.oh-my-zsh/plugins/pylint/_pylint
-	"	1	0
-
-> ~/Dropbox/.unix_settings/.oh-my-zsh/plugins/python/python.plugin.zsh
-	"	1	0
-
-> ~/Dropbox/.unix_settings/.oh-my-zsh/plugins/python/_python
-	"	1	0
-
-> ~/Dropbox/.unix_settings/.git/COMMIT_EDITMSG
-	"	1	8
-	^	1	9
-	.	1	8
-	+	1	8
-
-> ~/Dropbox/.unix_settings/.gitignore
-	"	1	10
-	^	1	11
-	.	1	10
-	+	1	10
diff --git a/.vim/dirs/yankring_history_v2.txt b/.vim/dirs/yankring_history_v2.txt
deleted file mode 100644
index 9314831..0000000
--- a/.vim/dirs/yankring_history_v2.txt
+++ /dev/null
@@ -1,100 +0,0 @@
- ,v
-, p.window, p.hop,v
-https://www.ptt.cc/bbs/Gossiping/M.1418780023.A.0A5.html,v
-FileNotFoundError: [Errno 2] No such file or,v
-alias cdw='cd /home/elsdrm/NASHome/workspace/',v
-https://github.com/elsdrm/meeting-20141217.git,v
--fPIC,v
-libfreetype6-dev,v
-",v
-        ,v
-    ,v
-            ,v
-                ,v
-"        ,v
-,,v
-140.109.21.197,v
-Iterations,v
-demo_pycallgraph,v
-最近這幾年在世界各地突然吹起了一股全民寫程式的風潮，連美國總統歐巴馬都在寫 JavaScript 了，但是身為一介靠寫程式（以及在上班時間胡亂上網）來謀生的 developer（所謂的 developer 就是「軟體工程師」的比較潮的說法），想要提醒那些想學習寫程式的人一件重要的事：慎選你的第一個程式語言。 在軟體工程師（中國叫做「程序員」或「碼農」）的圈子裡，文人相輕的現象可是非常嚴重的，在程式設計的各個領域裡都有著錯綜複雜的「鄙視鍊」。從程式語言、編輯器、平台到 { 是寫在 if 的同一行還是下一行，不同陣營的人都習慣鄙視來鄙視去。而其中「你用什麼程式語言？」更是大家最熱衷的一條鄙視鍊，所以對於剛踏入程式設計領域的初學者來說，萬一程式語言選得不好，可是會一開始就落入鄙視鍊的底層啊。 軟體工程師的鄙視鏈到底有多慘烈、多殘酷呢？ 程式語言篇 懂 Functional Programming 的工程師鄙視老是把設計模式掛在嘴邊的工程師，老是把設計模式掛在嘴邊的工程師鄙視會說「你這樣寫就不 OO 了啊」的工程師，會說「你這樣寫就不 OO 了啊」的工程師鄙視會說「蛤？什麼物件導向？不是把重複的 code 寫成一個 function 就好了嗎？」的工程師，會說「蛤？什麼物件導向？不是把重複的 code 寫成一個 function 就好了嗎？」的工程師鄙視把同一段 code 到處複製貼上的工程師，把同一段 code 到處複製貼上的工程師鄙視 PM。 寫靜態語言的工程師鄙視寫動態語言的工程師。 寫組合語言的工程師鄙視寫 C 語言的工程師，C 語言工程師鄙視 C++ 工程師，C++ 工程師鄙視 Java 和 C# 工程師，Java 工程師和 C# 工程師則互相鄙視，而 C# 工程師又鄙視 Visual Basic 工程師和會把 C# 唸成「C 井」的工程師，會把 C# 唸成「C 井」的工程師則鄙視認為 HTML 是一種程式語言的設計師。 用 Python 3 的工程師鄙視還在用 Python 2 的工程師，用 Python 2 的工程師鄙視遇到 UnicodeEncodeError 的工程師。 寫 iOS 的工程師鄙視寫 Android 的工程師，寫 Android 的工程師鄙視寫 Windows Phone 的工程師。 有 Swift 一年經驗的工程師鄙視有 Objective-C 五年經驗的工程師，寫 Objective-C 的工程師鄙視用 PhoneGap 包裝成 native app 的工程師。 用 React.js 的工程師鄙視用 AngularJS 的工程師，用 AngularJS 的工程師鄙視用 jQuery 的工程師，用 jQuery 的工程師鄙視用 Vanilla JavaScript 的工程師，用 Vanilla JavaScript 的工程師鄙視 IE 的使用者。 會用 debugger 的工程師鄙視用 assert 的工程師，用 assert 的工程師鄙視只會 print() 的工程師；用 console.log() 來 debug 的工程師鄙視用 alert() 來 debug 的工程師。 寫 Ruby on Rails 的工程師鄙視所有使用其他語言的工程師。什麼？你說 Ruby？Ruby 只是 Ruby on Rails 的一套框架，才不是什麼程式語言呢！ 所有的工程師都鄙視 PHP 工程師。 工具篇 用 text editor 的工程師鄙視用 IDE 的工程師。 用 Vim 的工程師鄙視用 Emacs 的工程師，用 Emacs 的工程師鄙視用 Vim 的工程師，無論是用 Vim 或 Emacs 的工程師都鄙視所有用其他編輯器的工程師；用 Atom、Notepad++、Sublime Text 的工程師鄙視用 Windows 記事本的工程師。 用 Android Studio 或 IntelliJ IDEA 的工程師鄙視用 Eclipse 的工程師，用 Eclipse 的工程師鄙視用 NetBeans 的工程師。 程式碼用 space 縮排的工程師鄙視用 tab 縮排的工程師，用 tab 縮排的工程師鄙視混用 space 和 tab 來縮排的工程師。 用 Git 或 Mercurial 的工程師鄙視用 Subversion 的工程師，用 Subversion 的工程師鄙視用 Dropbox 來做版本控制的工程師，用 Dropbox 來做版本控制的工程師鄙視根本不知道什麼叫做版本控制的工程師。 知道 GitHub 的工程師鄙視不知道 GitHub 的工程師；在 GitHub 有 private repo 的工程師鄙視為了免費的 private repo 而去用 BitBucket 的工程師。 用 Zsh 的工程師鄙視用 Bash 的工程師，用 Bash 的工程師鄙視用 Cygwin 的工程師，用 Cygwin 的工程師鄙視用「命令提示字元」的工程師，用命令提示字元的工程師鄙視用 GUI 介面的工程師。 用 IRC 的工程師鄙視用 HipChat 的工程師，用 HipChat 的工程師鄙視用 Slack 的設計師和 PM。 用 reStructuredText 寫文件的工程師鄙視用 Markdown 寫文件的工程師，用 Markdown 寫文件的工程師鄙視用 HTML 寫文件的工程師，用 HTML 寫文件的工程師鄙視不寫文件的工程師，然後用 LaTeX 寫文件的工程師鄙視所有工程師。 用 Nginx 的工程師鄙視用 Apache 的工程師，用 Apache 的工程師鄙視用 IIS 的工程師。 用 Spark 的工程師鄙視用 Hadoop 的工程師，用 Hadoop 的工程師鄙視用 Hadoop 處理只有幾 GB 資料的工程師，用 Hadoop 處理只有 1GB 資料的工程師鄙視用 NoSQL 的工程師，用 NoSQL 的工程師鄙視用關聯式資料庫的工程師，用關聯式資料庫的工程師鄙視用 Excel 的 PM。 用 Docker 來部署 server 的工程師鄙視用 Ansible 或 Puppet 來部署 server 的工程師，用 Ansible 或 Puppet 來部署 server 的工程師鄙視用 Fabric 來部署 server 的工程師，用 Fabric 來部署 server 的工程師鄙視手動 SSH 的工程師。 OS 篇 用 Mac OS X 的工程師鄙視用 Linux 的工程師，用 Linux 的工程師鄙視用 Windows 的工程師。 用 Debian 的工程師瞧不起用 Ubuntu 的工程師，用 Ubuntu 的工程師瞧不起用非 LTS 版本的 Ubuntu 的工程師。 硬體篇 用 MacBook Pro Retina 的工程師鄙視用 MacBook Air 的工程師，用 MacBook Air 的工程師鄙視用 ThinkPad 的工程師，然後用 Raspberry Pi 的工程師鄙視用 MacBook Pro Retina 的工程師。 用 Dvorak 鍵盤的工程師鄙視用 Mac 鍵盤的工程師，用 Mac 鍵盤的工程師鄙視用 QWERTY 鍵盤的工程師，用 QWERTY 鍵盤的工程師鄙視鄙視不知道 QWERTY 鍵盤是什麼的工程師，不知道 QWERTY 鍵盤是什麼的工程師鄙視用手寫板的設計師。 坐 Aeron 椅子的工程師鄙視坐普通辦公椅的工程師，坐普通辦公椅的工程師鄙視跟他一樣做普通辦公椅的 PM，然後站著寫程式的工程師鄙視坐 Aeron 椅子的工程師。 職場篇 搞硬體的工程師鄙視搞軟體的工程師。 寫 OS 的工程師鄙視寫 Web 的工程師，寫 Web 的工程師鄙視寫 desktop application 的工程師。 後端工程師鄙視前端工程師。 工程師跟設計師互相鄙視。 信奉 Test-Driven Development 的工程師鄙視先寫 code 再補 tests 的工程師，先寫 code 再補 tests 的工程師鄙視不寫 tests 的工程師，不寫 tests 的工程師鄙視又他媽亂改需求的 PM。 沒有證照的工程師鄙視考了一堆證照的工程師。 上班穿休閒服的工程師鄙視上班穿西裝的工程師，上班穿西裝的工程師鄙視上班穿系服的工程師。 --- 如果你看了以上這些慘絕人寰的鄙視鍊之後，仍然沒有擊倒你想要學習 coding 的心，那我必須提醒你一件最重要的事：先去交一個女朋友，再來學寫程式；因為一旦你成為軟體工程師之後，就交不到女朋友了。 P.S.有在用 GitHub 或 Twitter 的朋友一起來交流交流。或是 Facebook。,v
-https://github.com/sayrogablr/demo.git,v
-https://github.com/TradeUp/Demo.git,v
-$,v
-sfood /myproject | sfood-graph | dot -Tps | pstopdf -i,v
-https://github.com/dserban/PythonOOP.git,v
-#!/usr/bin/pythonclass Parent:        # define parent class   parentAttr = 100   def __init__(self):      print "Calling parent constructor"   def parentMethod(self):      print 'Calling parent method'   def setAttr(self, attr):      Parent.parentAttr = attr   def getAttr(self):      print "Parent attribute :", Parent.parentAttrclass Child(Parent): # define child class   def __init__(self):      print "Calling child constructor"   def childMethod(self):      print 'Calling child method'c = Child()          # instance of childc.childMethod()      # child calls its methodc.parentMethod()     # calls parent's methodc.setAttr(200)       # again call parent's methodc.getAttr()          # again call parent's method,v
-echo 500 100 1e-16 | ./a.out,v
-pycallgraph graphviz --output-file=test.png py.py,v
-/usr/local/bin/ipython2 notebook --profile=nbserver,v
-P,v
-A,v
-T,v
-H,v
-6,v
-import pymatbridge as pymatip = get_ipython()matlab_path = !which matlabpymat.load_ipython_extension(ip,     matlab=matlab_path),v
-/usr/local/lib/python2.7/site-packages/pymatbridge,v
-import pymatbridge as pymatip = get_ipython()pymat.load_ipython_extension(ip,     matlab='C:\Users\Andrey\matlab_shortcut.lnk'),v
-sdfs,v
-晏儒\54194,v
-asdfsdfa ,V
-,V
-c,v
-= new vector[int](),v
-*,v
-                                                                                    ,V
-cdef vector[int].iterator iter  #iter is declared as being of type vector<int>::iterator,v
-cdef extern from "<vector>" namespace "std":    cdef cppclass vector[T]:        vector()        void push_back(T&)        T& push_back(T&)        size_t size(),V
-cdef extern from "<vector>" namespace "std":    cdef cppclass vector[T]:        cppclass iterator:            T operator*()            iterator operator++()            bint operator==(iterator)            bint operator!=(iterator)        vector()        void push_back(T&)        T& operator[](int)        T& at(int)        iterator begin()        iterator end()cdef vector[int].iterator iter  #iter is declared as being of type vector<int>::iterator,v
-    v.push_back( 5566 ),V
-=,v
-v,v
-Cython ,v
-from cython.operator cimport dereference as deref, preincrement as inc #dereference and increment operatorscdef extern from "<vector>" namespace "std":    cdef cppclass vector[T]:        cppclass iterator:            T operator*()            iterator operator++()            bint operator==(iterator)            bint operator!=(iterator)        vector()        void push_back(T&)        T& operator[](int)        T& at(int)        iterator begin()        iterator end()cdef vector[int] *v = new vector[int]()cdef int ifor i in range(10):    v.push_back(i)cdef vector[int].iterator it = v.begin()while it != v.end():    print deref(it)    inc(it)del v,v
-from ,v
-cythonized_module,v
-cythonized_module = cythonize('vector.pyx', language='c++'),V
-from Cython.Build import cythonize,V
-p,v
-wahaaa.so ,v
-wahaaa.cp,v
-wahaaa.py,v
-wahaaa.cpp,v
-cython --cplus -o wahaaa.cpp wahaaa.pyclang++ -shared -fPIC -I/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/include/python3.4m/ -L/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/ -lpython3.4m -o wahaaa.so wahaaa.cpp,V
-if __name__ == '__main__':,V
-        T operator*(),V
-http://docs.cython.org/src/userguide/wrapping_CPlusPlus.html,v
-from libcpp.iostream cimport cout,V
-cdef,V
-2,v
-1,v
-cython --cplus -o wahaaa.cpp wahaaa.py 1222  clang++ -shared -fPIC -I/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/include/python3.4m/ -L/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/ -lpython3.4m -o wahaaa.so wahaaa.cpp,v
-dynamic module does not define init function (PyInit_waha),v
--I/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/include/python3.4m/ -L/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/python3.4/,v
-PKG_CONFIG_PATH=/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/pkgconfig,v
-/usr/lib/python2.7/config,v
-http://pastebin.com/FvzqxxzM,v
-export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Matlab_R2014b.app/bin:/usr/texbin",V
-r,v
-export PATH=/home/elsdrm/.linuxbrew/bin:/home/elsdrm/.linuxbrew/Cellar/pytho    n3/3.4.2_1/bin:$PATH,v
-m,v
-dep('src','src/main.m',3,{'fct1','fct3'},'fout'),v
-m2html('mfiles','MatlabMonteCarlo', 'htmldir','doc_output', 'recursive','on', 'global','on', 'template','frame', 'index','menu', 'graph','on');,v
-gc -m 'Zsh's mode indicator behaves better.',v
-INSERT_SYMBOL_PREFIX,v
-NORMAL_SYMBOL_PREFIX,v
-%{$bg[red]%}%{$fg_bold[white]%},v
-NORMAL_SYMBOL_SUFFIX="%{$reset_color%}",V
-NORMAL_SYMBOL_SUFFIX,v
-NORMAL,v
-NORMAL_SYMBOL_PREFIX="%{$bg[red]%}%{$fg_bold[white]%}",V
-@,v
-%{$reset_color%},v
-"%{$bg[red]%}%{$fg_bold[white]%}@%{$reset_color%}",v
-"%{$bg[red]%}%{$fg_bold[white]%}@%{$reset_color%}",v
-x11vnc -xkb -noxrecord -noxfixes -noxdamage -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900 -localhost,v
-'@',v
-w,v
-e,v
-g,v
-n,v
-a,v
